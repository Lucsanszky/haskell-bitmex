-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Auto-generated bitmex API Client
--   
--   . Client library for calling the bitmex API based on http-client.
--   
--   host:
--   
--   base path: <a>https://localhost/api/v1</a>
--   
--   BitMEX API API version: 1.2.0
--   
--   OpenAPI spec version: 2.0
--   
--   OpenAPI-Specification:
--   <a>https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md</a>
@package bitmex
@version 0.1.0.0


-- | Katip Logging functions
module BitMEX.Logging

-- | Runs a Katip logging block with the Log environment
type LogExecWithContext = forall m. MonadIO m => LogContext -> LogExec m

-- | A Katip logging block
type LogExec m = forall a. KatipT m a -> m a

-- | A Katip Log environment
type LogContext = LogEnv

-- | A Katip Log severity
type LogLevel = Severity

-- | the default log environment
initLogContext :: IO LogContext

-- | Runs a Katip logging block with the Log environment
runDefaultLogExecWithContext :: LogExecWithContext

-- | Runs a Katip logging block with the Log environment
stdoutLoggingExec :: LogExecWithContext

-- | A Katip Log environment which targets stdout
stdoutLoggingContext :: LogContext -> IO LogContext

-- | Runs a Katip logging block with the Log environment
stderrLoggingExec :: LogExecWithContext

-- | A Katip Log environment which targets stderr
stderrLoggingContext :: LogContext -> IO LogContext

-- | Disables Katip logging
runNullLogExec :: LogExecWithContext

-- | Log a katip message
_log :: (Applicative m, Katip m) => Text -> LogLevel -> Text -> m ()

-- | re-throws exceptions after logging them
logExceptions :: (Katip m, MonadCatch m, Applicative m) => Text -> m a -> m a
levelInfo :: LogLevel
levelError :: LogLevel
levelDebug :: LogLevel


module BitMEX.MimeTypes
data ContentType a
ContentType :: a -> ContentType a
[unContentType] :: ContentType a -> a
data Accept a
Accept :: a -> Accept a
[unAccept] :: Accept a -> a
class MimeType mtype => Consumes req mtype
class MimeType mtype => Produces req mtype
data MimeJSON
MimeJSON :: MimeJSON
data MimeXML
MimeXML :: MimeXML
data MimePlainText
MimePlainText :: MimePlainText
data MimeFormUrlEncoded
MimeFormUrlEncoded :: MimeFormUrlEncoded
data MimeMultipartFormData
MimeMultipartFormData :: MimeMultipartFormData
data MimeOctetStream
MimeOctetStream :: MimeOctetStream
data MimeNoContent
MimeNoContent :: MimeNoContent
data MimeAny
MimeAny :: MimeAny

-- | A type for responses without content-body.
data NoContent
NoContent :: NoContent
class Typeable mtype => MimeType mtype
mimeTypes :: MimeType mtype => Proxy mtype -> [MediaType]
mimeType :: MimeType mtype => Proxy mtype -> Maybe MediaType
mimeType' :: MimeType mtype => mtype -> Maybe MediaType
mimeTypes' :: MimeType mtype => mtype -> [MediaType]

-- | <pre>
--   application/json; charset=utf-8
--   </pre>

-- | <pre>
--   application/xml; charset=utf-8
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   multipart/form-data
--   </pre>

-- | <pre>
--   text/plain; charset=utf-8
--   </pre>

-- | <pre>
--   application/octet-stream
--   </pre>

-- | <pre>
--   "*/*"
--   </pre>
class MimeType mtype => MimeRender mtype x
mimeRender :: MimeRender mtype x => Proxy mtype -> x -> ByteString
mimeRender' :: MimeRender mtype x => mtype -> x -> ByteString
mimeRenderDefaultMultipartFormData :: ToHttpApiData a => a -> ByteString

-- | <a>encode</a>

-- | <pre>
--   WH.urlEncodeAsForm
--   </pre>

-- | <pre>
--   P.id
--   </pre>

-- | <pre>
--   BL.fromStrict . T.encodeUtf8
--   </pre>

-- | <pre>
--   BCL.pack
--   </pre>

-- | <pre>
--   P.id
--   </pre>

-- | <pre>
--   BL.fromStrict . T.encodeUtf8
--   </pre>

-- | <pre>
--   BCL.pack
--   </pre>

-- | <pre>
--   P.Right . P.const NoContent
--   </pre>
class MimeType mtype => MimeUnrender mtype o
mimeUnrender :: MimeUnrender mtype o => Proxy mtype -> ByteString -> Either String o
mimeUnrender' :: MimeUnrender mtype o => mtype -> ByteString -> Either String o

-- | <pre>
--   A.eitherDecode
--   </pre>

-- | <pre>
--   P.left T.unpack . WH.urlDecodeAsForm
--   </pre>

-- | <pre>
--   P.Right . P.id
--   </pre>

-- | <pre>
--   P.left P.show . TL.decodeUtf8'
--   </pre>

-- | <pre>
--   P.Right . BCL.unpack
--   </pre>

-- | <pre>
--   P.Right . P.id
--   </pre>

-- | <pre>
--   P.left P.show . T.decodeUtf8' . BL.toStrict
--   </pre>

-- | <pre>
--   P.Right . BCL.unpack
--   </pre>

-- | <pre>
--   P.Right . P.const NoContent
--   </pre>
instance GHC.Classes.Eq BitMEX.MimeTypes.NoContent
instance GHC.Show.Show BitMEX.MimeTypes.NoContent
instance Data.Aeson.Types.FromJSON.FromJSON a => BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimeJSON a
instance Web.Internal.FormUrlEncoded.FromForm a => BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimeFormUrlEncoded a
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimePlainText Data.ByteString.Lazy.Internal.ByteString
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimePlainText Data.Text.Internal.Text
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimePlainText GHC.Base.String
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimeOctetStream Data.ByteString.Lazy.Internal.ByteString
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimeOctetStream Data.Text.Internal.Text
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimeOctetStream GHC.Base.String
instance BitMEX.MimeTypes.MimeUnrender BitMEX.MimeTypes.MimeNoContent BitMEX.MimeTypes.NoContent
instance Data.Aeson.Types.ToJSON.ToJSON a => BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeJSON a
instance Web.Internal.FormUrlEncoded.ToForm a => BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeFormUrlEncoded a
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimePlainText Data.ByteString.Lazy.Internal.ByteString
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimePlainText Data.Text.Internal.Text
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimePlainText GHC.Base.String
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeOctetStream Data.ByteString.Lazy.Internal.ByteString
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeOctetStream Data.Text.Internal.Text
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeOctetStream GHC.Base.String
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData Data.ByteString.Lazy.Internal.ByteString
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Types.Bool
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Types.Char
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Types.Double
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Types.Float
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Types.Int
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Integer.Type.Integer
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData GHC.Base.String
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData Data.Text.Internal.Text
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeNoContent BitMEX.MimeTypes.NoContent
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeMultipartFormData
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimePlainText
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeOctetStream
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeAny
instance BitMEX.MimeTypes.MimeType BitMEX.MimeTypes.MimeNoContent


module BitMEX.Core
data BitMEXConfig
BitMEXConfig :: ByteString -> Text -> LogExecWithContext -> LogContext -> [AnyAuthMethod] -> Bool -> BitMEXConfig

-- | host supplied in the Request
[configHost] :: BitMEXConfig -> ByteString

-- | user-agent supplied in the Request
[configUserAgent] :: BitMEXConfig -> Text

-- | Run a block using a Logger instance
[configLogExecWithContext] :: BitMEXConfig -> LogExecWithContext

-- | Configures the logger
[configLogContext] :: BitMEXConfig -> LogContext

-- | List of configured auth methods
[configAuthMethods] :: BitMEXConfig -> [AnyAuthMethod]

-- | throw exceptions if auth methods are not configured
[configValidateAuthMethods] :: BitMEXConfig -> Bool

-- | display the config

-- | constructs a default BitMEXConfig
--   
--   configHost:
--   
--   <pre>
--   <a>https://localhost/api/v1</a>
--   </pre>
--   
--   configUserAgent:
--   
--   <pre>
--   "swagger-haskell-http-client/1.0.0"
--   </pre>
newConfig :: IO BitMEXConfig

-- | updates config use AuthMethod on matching requests
addAuthMethod :: AuthMethod auth => BitMEXConfig -> auth -> BitMEXConfig

-- | updates the config to use stdout logging
withStdoutLogging :: BitMEXConfig -> IO BitMEXConfig

-- | updates the config to use stderr logging
withStderrLogging :: BitMEXConfig -> IO BitMEXConfig

-- | updates the config to disable logging
withNoLogging :: BitMEXConfig -> BitMEXConfig

-- | Represents a request.
--   
--   Type Variables:
--   
--   <ul>
--   <li>req - request operation</li>
--   <li>contentType - <a>MimeType</a> associated with request body</li>
--   <li>res - response model</li>
--   <li>accept - <a>MimeType</a> associated with response body</li>
--   </ul>
data BitMEXRequest req contentType res accept
BitMEXRequest :: Method -> [ByteString] -> Params -> [TypeRep] -> BitMEXRequest req contentType res accept

-- | Method of BitMEXRequest
[rMethod] :: BitMEXRequest req contentType res accept -> Method

-- | Endpoint of BitMEXRequest
[rUrlPath] :: BitMEXRequest req contentType res accept -> [ByteString]

-- | params of BitMEXRequest
[rParams] :: BitMEXRequest req contentType res accept -> Params

-- | types of auth methods
[rAuthTypes] :: BitMEXRequest req contentType res accept -> [TypeRep]

-- | <a>rMethod</a> Lens
rMethodL :: Lens_' (BitMEXRequest req contentType res accept) Method

-- | <a>rUrlPath</a> Lens
rUrlPathL :: Lens_' (BitMEXRequest req contentType res accept) [ByteString]

-- | <a>rParams</a> Lens
rParamsL :: Lens_' (BitMEXRequest req contentType res accept) Params

-- | <a>rParams</a> Lens
rAuthTypesL :: Lens_' (BitMEXRequest req contentType res accept) [TypeRep]

-- | Designates the body parameter of a request
class HasBodyParam req param
setBodyParam :: forall contentType res accept. (HasBodyParam req param, Consumes req contentType, MimeRender contentType param) => BitMEXRequest req contentType res accept -> param -> BitMEXRequest req contentType res accept

-- | Designates the optional parameters of a request
class HasOptionalParam req param

-- | Apply an optional parameter to a request
applyOptionalParam :: HasOptionalParam req param => BitMEXRequest req contentType res accept -> param -> BitMEXRequest req contentType res accept

-- | infix operator / alias for <tt>addOptionalParam</tt>
(-&-) :: HasOptionalParam req param => BitMEXRequest req contentType res accept -> param -> BitMEXRequest req contentType res accept

-- | Request Params
data Params
Params :: Query -> RequestHeaders -> ParamBody -> Params
[paramsQuery] :: Params -> Query
[paramsHeaders] :: Params -> RequestHeaders
[paramsBody] :: Params -> ParamBody

-- | <a>paramsQuery</a> Lens
paramsQueryL :: Lens_' Params Query

-- | <a>paramsHeaders</a> Lens
paramsHeadersL :: Lens_' Params RequestHeaders

-- | <a>paramsBody</a> Lens
paramsBodyL :: Lens_' Params ParamBody

-- | Request Body
data ParamBody
ParamBodyNone :: ParamBody
ParamBodyB :: ByteString -> ParamBody
ParamBodyBL :: ByteString -> ParamBody
ParamBodyFormUrlEncoded :: Form -> ParamBody
ParamBodyMultipartFormData :: [Part] -> ParamBody
_mkRequest :: Method -> [ByteString] -> BitMEXRequest req contentType res accept
_mkParams :: Params
setHeader :: BitMEXRequest req contentType res accept -> [Header] -> BitMEXRequest req contentType res accept
removeHeader :: BitMEXRequest req contentType res accept -> [HeaderName] -> BitMEXRequest req contentType res accept
_setContentTypeHeader :: forall req contentType res accept. MimeType contentType => BitMEXRequest req contentType res accept -> BitMEXRequest req contentType res accept
_setAcceptHeader :: forall req contentType res accept. MimeType accept => BitMEXRequest req contentType res accept -> BitMEXRequest req contentType res accept
setQuery :: BitMEXRequest req contentType res accept -> [QueryItem] -> BitMEXRequest req contentType res accept
addForm :: BitMEXRequest req contentType res accept -> Form -> BitMEXRequest req contentType res accept
_addMultiFormPart :: BitMEXRequest req contentType res accept -> Part -> BitMEXRequest req contentType res accept
_setBodyBS :: BitMEXRequest req contentType res accept -> ByteString -> BitMEXRequest req contentType res accept
_setBodyLBS :: BitMEXRequest req contentType res accept -> ByteString -> BitMEXRequest req contentType res accept
_hasAuthType :: AuthMethod authMethod => BitMEXRequest req contentType res accept -> Proxy authMethod -> BitMEXRequest req contentType res accept
toPath :: ToHttpApiData a => a -> ByteString
toHeader :: ToHttpApiData a => (HeaderName, a) -> [Header]
toForm :: ToHttpApiData v => (ByteString, v) -> Form
toQuery :: ToHttpApiData a => (ByteString, Maybe a) -> [QueryItem]

-- | Determines the format of the array if type array is used.
data CollectionFormat

-- | CSV format for multiple parameters.
CommaSeparated :: CollectionFormat

-- | Also called <a>SSV</a>
SpaceSeparated :: CollectionFormat

-- | Also called <a>TSV</a>
TabSeparated :: CollectionFormat

-- | `value1|value2|value2`
PipeSeparated :: CollectionFormat

-- | Using multiple GET parameters, e.g. `foo=bar&amp;foo=baz`. This is
--   valid only for parameters in "query" (<a>Query</a>) or "formData"
--   (<a>Form</a>)
MultiParamArray :: CollectionFormat
toHeaderColl :: ToHttpApiData a => CollectionFormat -> (HeaderName, [a]) -> [Header]
toFormColl :: ToHttpApiData v => CollectionFormat -> (ByteString, [v]) -> Form
toQueryColl :: ToHttpApiData a => CollectionFormat -> (ByteString, Maybe [a]) -> Query
_toColl :: Traversable f => CollectionFormat -> (f a -> [(b, ByteString)]) -> f [a] -> [(b, ByteString)]
_toCollA :: (Traversable f, Traversable t, Alternative t) => CollectionFormat -> (f (t a) -> [(b, t ByteString)]) -> f (t [a]) -> [(b, t ByteString)]
_toCollA' :: (Monoid c, Traversable f, Traversable t, Alternative t) => CollectionFormat -> (f (t a) -> [(b, t c)]) -> (Char -> c) -> f (t [a]) -> [(b, t c)]

-- | Provides a method to apply auth methods to requests
class Typeable a => AuthMethod a
applyAuthMethod :: AuthMethod a => BitMEXConfig -> a -> BitMEXRequest req contentType res accept -> IO (BitMEXRequest req contentType res accept)

-- | An existential wrapper for any AuthMethod
data AnyAuthMethod
AnyAuthMethod :: a -> AnyAuthMethod

-- | indicates exceptions related to AuthMethods
data AuthMethodException
AuthMethodException :: String -> AuthMethodException

-- | apply all matching AuthMethods in config to request
_applyAuthMethods :: BitMEXRequest req contentType res accept -> BitMEXConfig -> IO (BitMEXRequest req contentType res accept)

-- | Removes Null fields. (OpenAPI-Specification 2.0 does not allow Null in
--   JSON)
_omitNulls :: [(Text, Value)] -> Value

-- | Encodes fields using WH.toQueryParam
_toFormItem :: (ToHttpApiData a, Functor f) => t -> f a -> f (t, [Text])

-- | Collapse (Just "") to Nothing
_emptyToNothing :: Maybe String -> Maybe String

-- | Collapse (Just mempty) to Nothing
_memptyToNothing :: (Monoid a, Eq a) => Maybe a -> Maybe a
newtype DateTime
DateTime :: UTCTime -> DateTime
[unDateTime] :: DateTime -> UTCTime

-- | <pre>
--   _parseISO8601
--   </pre>
_readDateTime :: (ParseTime t, Monad m, Alternative m) => String -> m t

-- | <pre>
--   TI.formatISO8601Millis
--   </pre>
_showDateTime :: (t ~ UTCTime, FormatTime t) => t -> String

-- | parse an ISO8601 date-time string
_parseISO8601 :: (ParseTime t, Monad m, Alternative m) => String -> m t
newtype Date
Date :: Day -> Date
[unDate] :: Date -> Day

-- | <pre>
--   TI.parseTimeM True TI.defaultTimeLocale "%Y-%m-%d"
--   </pre>
_readDate :: (ParseTime t, Monad m) => String -> m t

-- | <pre>
--   TI.formatTime TI.defaultTimeLocale "%Y-%m-%d"
--   </pre>
_showDate :: FormatTime t => t -> String

-- | base64 encoded characters
newtype ByteArray
ByteArray :: ByteString -> ByteArray
[unByteArray] :: ByteArray -> ByteString

-- | read base64 encoded characters
_readByteArray :: Monad m => Text -> m ByteArray

-- | show base64 encoded characters
_showByteArray :: ByteArray -> Text

-- | any sequence of octets
newtype Binary
Binary :: ByteString -> Binary
[unBinary] :: Binary -> ByteString
_readBinaryBase64 :: Monad m => Text -> m Binary
_showBinaryBase64 :: Binary -> Text
type Lens_' s a = Lens_ s s a a
type Lens_ s t a b = forall (f :: * -> *). Functor f => (a -> f b) -> s -> f t
instance Control.DeepSeq.NFData BitMEX.Core.Binary
instance GHC.Classes.Ord BitMEX.Core.Binary
instance Data.Data.Data BitMEX.Core.Binary
instance GHC.Classes.Eq BitMEX.Core.Binary
instance Control.DeepSeq.NFData BitMEX.Core.ByteArray
instance GHC.Classes.Ord BitMEX.Core.ByteArray
instance Data.Data.Data BitMEX.Core.ByteArray
instance GHC.Classes.Eq BitMEX.Core.ByteArray
instance Data.Time.Format.FormatTime BitMEX.Core.Date
instance Data.Time.Format.Parse.ParseTime BitMEX.Core.Date
instance Control.DeepSeq.NFData BitMEX.Core.Date
instance GHC.Arr.Ix BitMEX.Core.Date
instance GHC.Classes.Ord BitMEX.Core.Date
instance Data.Data.Data BitMEX.Core.Date
instance GHC.Classes.Eq BitMEX.Core.Date
instance GHC.Enum.Enum BitMEX.Core.Date
instance Data.Time.Format.FormatTime BitMEX.Core.DateTime
instance Data.Time.Format.Parse.ParseTime BitMEX.Core.DateTime
instance Control.DeepSeq.NFData BitMEX.Core.DateTime
instance GHC.Classes.Ord BitMEX.Core.DateTime
instance Data.Data.Data BitMEX.Core.DateTime
instance GHC.Classes.Eq BitMEX.Core.DateTime
instance GHC.Show.Show BitMEX.Core.AuthMethodException
instance GHC.Show.Show (BitMEX.Core.BitMEXRequest req contentType res accept)
instance GHC.Show.Show BitMEX.Core.Params
instance GHC.Show.Show BitMEX.Core.ParamBody
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Core.Binary
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Core.Binary
instance Web.Internal.HttpApiData.FromHttpApiData BitMEX.Core.Binary
instance Web.Internal.HttpApiData.ToHttpApiData BitMEX.Core.Binary
instance GHC.Show.Show BitMEX.Core.Binary
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData BitMEX.Core.Binary
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Core.ByteArray
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Core.ByteArray
instance Web.Internal.HttpApiData.FromHttpApiData BitMEX.Core.ByteArray
instance Web.Internal.HttpApiData.ToHttpApiData BitMEX.Core.ByteArray
instance GHC.Show.Show BitMEX.Core.ByteArray
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData BitMEX.Core.ByteArray
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Core.Date
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Core.Date
instance Web.Internal.HttpApiData.FromHttpApiData BitMEX.Core.Date
instance Web.Internal.HttpApiData.ToHttpApiData BitMEX.Core.Date
instance GHC.Show.Show BitMEX.Core.Date
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData BitMEX.Core.Date
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Core.DateTime
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Core.DateTime
instance Web.Internal.HttpApiData.FromHttpApiData BitMEX.Core.DateTime
instance Web.Internal.HttpApiData.ToHttpApiData BitMEX.Core.DateTime
instance GHC.Show.Show BitMEX.Core.DateTime
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData BitMEX.Core.DateTime
instance GHC.Exception.Exception BitMEX.Core.AuthMethodException
instance GHC.Show.Show BitMEX.Core.BitMEXConfig
instance BitMEX.Core.AuthMethod BitMEX.Core.AnyAuthMethod


module BitMEX.Client

-- | send a request returning the raw http response
dispatchLbs :: (Produces req accept, MimeType contentType) => Manager -> BitMEXConfig -> BitMEXRequest req contentType res accept -> IO (Response ByteString)

-- | pair of decoded http body and http response
data MimeResult res
MimeResult :: Either MimeError res -> Response ByteString -> MimeResult res

-- | decoded http body
[mimeResult] :: MimeResult res -> Either MimeError res

-- | http response
[mimeResultResponse] :: MimeResult res -> Response ByteString

-- | pair of unrender/parser error and http response
data MimeError
MimeError :: String -> Response ByteString -> MimeError

-- | unrender/parser error
[mimeError] :: MimeError -> String

-- | http response
[mimeErrorResponse] :: MimeError -> Response ByteString

-- | send a request returning the <a>MimeResult</a>
dispatchMime :: forall req contentType res accept. (Produces req accept, MimeUnrender accept res, MimeType contentType) => Manager -> BitMEXConfig -> BitMEXRequest req contentType res accept -> IO (MimeResult res)

-- | like <a>dispatchMime</a>, but only returns the decoded http body
dispatchMime' :: (Produces req accept, MimeUnrender accept res, MimeType contentType) => Manager -> BitMEXConfig -> BitMEXRequest req contentType res accept -> IO (Either MimeError res)

-- | like <tt>dispatchReqLbs</tt>, but does not validate the operation is a
--   <tt>Producer</tt> of the "accept" <a>MimeType</a>. (Useful if the
--   server's response is undocumented)
dispatchLbsUnsafe :: (MimeType accept, MimeType contentType) => Manager -> BitMEXConfig -> BitMEXRequest req contentType res accept -> IO (Response ByteString)

-- | dispatch an InitRequest
dispatchInitUnsafe :: Manager -> BitMEXConfig -> InitRequest req contentType res accept -> IO (Response ByteString)

-- | wraps an http-client <tt>Request</tt> with request/response type
--   parameters
newtype InitRequest req contentType res accept
InitRequest :: Request -> InitRequest req contentType res accept
[unInitRequest] :: InitRequest req contentType res accept -> Request

-- | Build an http-client <tt>Request</tt> record from the supplied config
--   and request
_toInitRequest :: (MimeType accept, MimeType contentType) => BitMEXConfig -> BitMEXRequest req contentType res accept -> IO (InitRequest req contentType res accept)

-- | modify the underlying Request
modifyInitRequest :: InitRequest req contentType res accept -> (Request -> Request) -> InitRequest req contentType res accept

-- | modify the underlying Request (monadic)
modifyInitRequestM :: Monad m => InitRequest req contentType res accept -> (Request -> m Request) -> m (InitRequest req contentType res accept)

-- | Run a block using the configured logger instance
runConfigLog :: MonadIO m => BitMEXConfig -> LogExec m

-- | Run a block using the configured logger instance (logs exceptions)
runConfigLogWithExceptions :: (MonadCatch m, MonadIO m) => Text -> BitMEXConfig -> LogExec m
instance GHC.Show.Show (BitMEX.Client.InitRequest req contentType res accept)
instance Data.Traversable.Traversable BitMEX.Client.MimeResult
instance Data.Foldable.Foldable BitMEX.Client.MimeResult
instance GHC.Base.Functor BitMEX.Client.MimeResult
instance GHC.Show.Show res => GHC.Show.Show (BitMEX.Client.MimeResult res)
instance GHC.Show.Show BitMEX.Client.MimeError
instance GHC.Classes.Eq BitMEX.Client.MimeError


module BitMEX.Model

-- | APIKey Persistent API Keys for Developers
data APIKey
APIKey :: !(Text) -> !(Text) -> !(Text) -> !(Double) -> !(Maybe Text) -> !(Maybe [XAny]) -> !(Maybe Bool) -> !(Double) -> !(Maybe DateTime) -> APIKey

-- | <i>Required</i> "id"
[aPIKeyId] :: APIKey -> !(Text)

-- | <i>Required</i> "secret"
[aPIKeySecret] :: APIKey -> !(Text)

-- | <i>Required</i> "name"
[aPIKeyName] :: APIKey -> !(Text)

-- | <i>Required</i> "nonce"
[aPIKeyNonce] :: APIKey -> !(Double)

-- | "cidr"
[aPIKeyCidr] :: APIKey -> !(Maybe Text)

-- | "permissions"
[aPIKeyPermissions] :: APIKey -> !(Maybe [XAny])

-- | "enabled"
[aPIKeyEnabled] :: APIKey -> !(Maybe Bool)

-- | <i>Required</i> "userId"
[aPIKeyUserId] :: APIKey -> !(Double)

-- | "created"
[aPIKeyCreated] :: APIKey -> !(Maybe DateTime)

-- | FromJSON APIKey

-- | ToJSON APIKey

-- | Construct a value of type <a>APIKey</a> (by applying it's required
--   fields, if any)
mkAPIKey :: Text -> Text -> Text -> Double -> Double -> APIKey

-- | AccessToken
data AccessToken
AccessToken :: !(Text) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> AccessToken

-- | <i>Required</i> "id"
[accessTokenId] :: AccessToken -> !(Text)

-- | "ttl" - time to live in seconds (2 weeks by default)
[accessTokenTtl] :: AccessToken -> !(Maybe Double)

-- | "created"
[accessTokenCreated] :: AccessToken -> !(Maybe DateTime)

-- | "userId"
[accessTokenUserId] :: AccessToken -> !(Maybe Double)

-- | FromJSON AccessToken

-- | ToJSON AccessToken

-- | Construct a value of type <a>AccessToken</a> (by applying it's
--   required fields, if any)
mkAccessToken :: Text -> AccessToken

-- | Affiliate
data Affiliate
Affiliate :: !(Double) -> !(Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> Affiliate

-- | <i>Required</i> "account"
[affiliateAccount] :: Affiliate -> !(Double)

-- | <i>Required</i> "currency"
[affiliateCurrency] :: Affiliate -> !(Text)

-- | "prevPayout"
[affiliatePrevPayout] :: Affiliate -> !(Maybe Double)

-- | "prevTurnover"
[affiliatePrevTurnover] :: Affiliate -> !(Maybe Double)

-- | "prevComm"
[affiliatePrevComm] :: Affiliate -> !(Maybe Double)

-- | "prevTimestamp"
[affiliatePrevTimestamp] :: Affiliate -> !(Maybe DateTime)

-- | "execTurnover"
[affiliateExecTurnover] :: Affiliate -> !(Maybe Double)

-- | "execComm"
[affiliateExecComm] :: Affiliate -> !(Maybe Double)

-- | "totalReferrals"
[affiliateTotalReferrals] :: Affiliate -> !(Maybe Double)

-- | "totalTurnover"
[affiliateTotalTurnover] :: Affiliate -> !(Maybe Double)

-- | "totalComm"
[affiliateTotalComm] :: Affiliate -> !(Maybe Double)

-- | "payoutPcnt"
[affiliatePayoutPcnt] :: Affiliate -> !(Maybe Double)

-- | "pendingPayout"
[affiliatePendingPayout] :: Affiliate -> !(Maybe Double)

-- | "timestamp"
[affiliateTimestamp] :: Affiliate -> !(Maybe DateTime)

-- | "referrerAccount"
[affiliateReferrerAccount] :: Affiliate -> !(Maybe Double)

-- | FromJSON Affiliate

-- | ToJSON Affiliate

-- | Construct a value of type <a>Affiliate</a> (by applying it's required
--   fields, if any)
mkAffiliate :: Double -> Text -> Affiliate

-- | Announcement Public Announcements
data Announcement
Announcement :: !(Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe DateTime) -> Announcement

-- | <i>Required</i> "id"
[announcementId] :: Announcement -> !(Double)

-- | "link"
[announcementLink] :: Announcement -> !(Maybe Text)

-- | "title"
[announcementTitle] :: Announcement -> !(Maybe Text)

-- | "content"
[announcementContent] :: Announcement -> !(Maybe Text)

-- | "date"
[announcementDate] :: Announcement -> !(Maybe DateTime)

-- | FromJSON Announcement

-- | ToJSON Announcement

-- | Construct a value of type <a>Announcement</a> (by applying it's
--   required fields, if any)
mkAnnouncement :: Double -> Announcement

-- | Chat Trollbox Data
data Chat
Chat :: !(Maybe Double) -> !(DateTime) -> !(Text) -> !(Text) -> !(Text) -> !(Maybe Bool) -> !(Maybe Double) -> Chat

-- | "id"
[chatId] :: Chat -> !(Maybe Double)

-- | <i>Required</i> "date"
[chatDate] :: Chat -> !(DateTime)

-- | <i>Required</i> "user"
[chatUser] :: Chat -> !(Text)

-- | <i>Required</i> "message"
[chatMessage] :: Chat -> !(Text)

-- | <i>Required</i> "html"
[chatHtml] :: Chat -> !(Text)

-- | "fromBot"
[chatFromBot] :: Chat -> !(Maybe Bool)

-- | "channelID"
[chatChannelId] :: Chat -> !(Maybe Double)

-- | FromJSON Chat

-- | ToJSON Chat

-- | Construct a value of type <a>Chat</a> (by applying it's required
--   fields, if any)
mkChat :: DateTime -> Text -> Text -> Text -> Chat

-- | ChatChannels
data ChatChannels
ChatChannels :: !(Maybe Double) -> !(Text) -> ChatChannels

-- | "id"
[chatChannelsId] :: ChatChannels -> !(Maybe Double)

-- | <i>Required</i> "name"
[chatChannelsName] :: ChatChannels -> !(Text)

-- | FromJSON ChatChannels

-- | ToJSON ChatChannels

-- | Construct a value of type <a>ChatChannels</a> (by applying it's
--   required fields, if any)
mkChatChannels :: Text -> ChatChannels

-- | ConnectedUsers
data ConnectedUsers
ConnectedUsers :: !(Maybe Double) -> !(Maybe Double) -> ConnectedUsers

-- | "users"
[connectedUsersUsers] :: ConnectedUsers -> !(Maybe Double)

-- | "bots"
[connectedUsersBots] :: ConnectedUsers -> !(Maybe Double)

-- | FromJSON ConnectedUsers

-- | ToJSON ConnectedUsers

-- | Construct a value of type <a>ConnectedUsers</a> (by applying it's
--   required fields, if any)
mkConnectedUsers :: ConnectedUsers

-- | Error
data Error
Error :: !(ErrorError) -> Error

-- | <i>Required</i> "error"
[errorError] :: Error -> !(ErrorError)

-- | FromJSON Error

-- | ToJSON Error

-- | Construct a value of type <a>Error</a> (by applying it's required
--   fields, if any)
mkError :: ErrorError -> Error

-- | ErrorError
data ErrorError
ErrorError :: !(Maybe Text) -> !(Maybe Text) -> ErrorError

-- | "message"
[errorErrorMessage] :: ErrorError -> !(Maybe Text)

-- | "name"
[errorErrorName] :: ErrorError -> !(Maybe Text)

-- | FromJSON ErrorError

-- | ToJSON ErrorError

-- | Construct a value of type <a>ErrorError</a> (by applying it's required
--   fields, if any)
mkErrorError :: ErrorError

-- | Execution Raw Order and Balance Data
data Execution
Execution :: !(Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Bool) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe DateTime) -> Execution

-- | <i>Required</i> "execID"
[executionExecId] :: Execution -> !(Text)

-- | "orderID"
[executionOrderId] :: Execution -> !(Maybe Text)

-- | "clOrdID"
[executionClOrdId] :: Execution -> !(Maybe Text)

-- | "clOrdLinkID"
[executionClOrdLinkId] :: Execution -> !(Maybe Text)

-- | "account"
[executionAccount] :: Execution -> !(Maybe Double)

-- | "symbol"
[executionSymbol] :: Execution -> !(Maybe Text)

-- | "side"
[executionSide] :: Execution -> !(Maybe Text)

-- | "lastQty"
[executionLastQty] :: Execution -> !(Maybe Double)

-- | "lastPx"
[executionLastPx] :: Execution -> !(Maybe Double)

-- | "underlyingLastPx"
[executionUnderlyingLastPx] :: Execution -> !(Maybe Double)

-- | "lastMkt"
[executionLastMkt] :: Execution -> !(Maybe Text)

-- | "lastLiquidityInd"
[executionLastLiquidityInd] :: Execution -> !(Maybe Text)

-- | "simpleOrderQty"
[executionSimpleOrderQty] :: Execution -> !(Maybe Double)

-- | "orderQty"
[executionOrderQty] :: Execution -> !(Maybe Double)

-- | "price"
[executionPrice] :: Execution -> !(Maybe Double)

-- | "displayQty"
[executionDisplayQty] :: Execution -> !(Maybe Double)

-- | "stopPx"
[executionStopPx] :: Execution -> !(Maybe Double)

-- | "pegOffsetValue"
[executionPegOffsetValue] :: Execution -> !(Maybe Double)

-- | "pegPriceType"
[executionPegPriceType] :: Execution -> !(Maybe Text)

-- | "currency"
[executionCurrency] :: Execution -> !(Maybe Text)

-- | "settlCurrency"
[executionSettlCurrency] :: Execution -> !(Maybe Text)

-- | "execType"
[executionExecType] :: Execution -> !(Maybe Text)

-- | "ordType"
[executionOrdType] :: Execution -> !(Maybe Text)

-- | "timeInForce"
[executionTimeInForce] :: Execution -> !(Maybe Text)

-- | "execInst"
[executionExecInst] :: Execution -> !(Maybe Text)

-- | "contingencyType"
[executionContingencyType] :: Execution -> !(Maybe Text)

-- | "exDestination"
[executionExDestination] :: Execution -> !(Maybe Text)

-- | "ordStatus"
[executionOrdStatus] :: Execution -> !(Maybe Text)

-- | "triggered"
[executionTriggered] :: Execution -> !(Maybe Text)

-- | "workingIndicator"
[executionWorkingIndicator] :: Execution -> !(Maybe Bool)

-- | "ordRejReason"
[executionOrdRejReason] :: Execution -> !(Maybe Text)

-- | "simpleLeavesQty"
[executionSimpleLeavesQty] :: Execution -> !(Maybe Double)

-- | "leavesQty"
[executionLeavesQty] :: Execution -> !(Maybe Double)

-- | "simpleCumQty"
[executionSimpleCumQty] :: Execution -> !(Maybe Double)

-- | "cumQty"
[executionCumQty] :: Execution -> !(Maybe Double)

-- | "avgPx"
[executionAvgPx] :: Execution -> !(Maybe Double)

-- | "commission"
[executionCommission] :: Execution -> !(Maybe Double)

-- | "tradePublishIndicator"
[executionTradePublishIndicator] :: Execution -> !(Maybe Text)

-- | "multiLegReportingType"
[executionMultiLegReportingType] :: Execution -> !(Maybe Text)

-- | "text"
[executionText] :: Execution -> !(Maybe Text)

-- | "trdMatchID"
[executionTrdMatchId] :: Execution -> !(Maybe Text)

-- | "execCost"
[executionExecCost] :: Execution -> !(Maybe Double)

-- | "execComm"
[executionExecComm] :: Execution -> !(Maybe Double)

-- | "homeNotional"
[executionHomeNotional] :: Execution -> !(Maybe Double)

-- | "foreignNotional"
[executionForeignNotional] :: Execution -> !(Maybe Double)

-- | "transactTime"
[executionTransactTime] :: Execution -> !(Maybe DateTime)

-- | "timestamp"
[executionTimestamp] :: Execution -> !(Maybe DateTime)

-- | FromJSON Execution

-- | ToJSON Execution

-- | Construct a value of type <a>Execution</a> (by applying it's required
--   fields, if any)
mkExecution :: Text -> Execution

-- | Funding Swap Funding History
data Funding
Funding :: !(DateTime) -> !(Text) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> Funding

-- | <i>Required</i> "timestamp"
[fundingTimestamp] :: Funding -> !(DateTime)

-- | <i>Required</i> "symbol"
[fundingSymbol] :: Funding -> !(Text)

-- | "fundingInterval"
[fundingFundingInterval] :: Funding -> !(Maybe DateTime)

-- | "fundingRate"
[fundingFundingRate] :: Funding -> !(Maybe Double)

-- | "fundingRateDaily"
[fundingFundingRateDaily] :: Funding -> !(Maybe Double)

-- | FromJSON Funding

-- | ToJSON Funding

-- | Construct a value of type <a>Funding</a> (by applying it's required
--   fields, if any)
mkFunding :: DateTime -> Text -> Funding

-- | IndexComposite
data IndexComposite
IndexComposite :: !(DateTime) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> IndexComposite

-- | <i>Required</i> "timestamp"
[indexCompositeTimestamp] :: IndexComposite -> !(DateTime)

-- | "symbol"
[indexCompositeSymbol] :: IndexComposite -> !(Maybe Text)

-- | "indexSymbol"
[indexCompositeIndexSymbol] :: IndexComposite -> !(Maybe Text)

-- | "reference"
[indexCompositeReference] :: IndexComposite -> !(Maybe Text)

-- | "lastPrice"
[indexCompositeLastPrice] :: IndexComposite -> !(Maybe Double)

-- | "weight"
[indexCompositeWeight] :: IndexComposite -> !(Maybe Double)

-- | "logged"
[indexCompositeLogged] :: IndexComposite -> !(Maybe DateTime)

-- | FromJSON IndexComposite

-- | ToJSON IndexComposite

-- | Construct a value of type <a>IndexComposite</a> (by applying it's
--   required fields, if any)
mkIndexComposite :: DateTime -> IndexComposite

-- | InlineResponse200
data InlineResponse200
InlineResponse200 :: !(Maybe Bool) -> InlineResponse200

-- | "success"
[inlineResponse200Success] :: InlineResponse200 -> !(Maybe Bool)

-- | FromJSON InlineResponse200

-- | ToJSON InlineResponse200

-- | Construct a value of type <a>InlineResponse200</a> (by applying it's
--   required fields, if any)
mkInlineResponse200 :: InlineResponse200

-- | Instrument Tradeable Contracts, Indices, and History
data Instrument
Instrument :: !(Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Bool) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> Instrument

-- | <i>Required</i> "symbol"
[instrumentSymbol] :: Instrument -> !(Text)

-- | "rootSymbol"
[instrumentRootSymbol] :: Instrument -> !(Maybe Text)

-- | "state"
[instrumentState] :: Instrument -> !(Maybe Text)

-- | "typ"
[instrumentTyp] :: Instrument -> !(Maybe Text)

-- | "listing"
[instrumentListing] :: Instrument -> !(Maybe DateTime)

-- | "front"
[instrumentFront] :: Instrument -> !(Maybe DateTime)

-- | "expiry"
[instrumentExpiry] :: Instrument -> !(Maybe DateTime)

-- | "settle"
[instrumentSettle] :: Instrument -> !(Maybe DateTime)

-- | "relistInterval"
[instrumentRelistInterval] :: Instrument -> !(Maybe DateTime)

-- | "inverseLeg"
[instrumentInverseLeg] :: Instrument -> !(Maybe Text)

-- | "sellLeg"
[instrumentSellLeg] :: Instrument -> !(Maybe Text)

-- | "buyLeg"
[instrumentBuyLeg] :: Instrument -> !(Maybe Text)

-- | "positionCurrency"
[instrumentPositionCurrency] :: Instrument -> !(Maybe Text)

-- | "underlying"
[instrumentUnderlying] :: Instrument -> !(Maybe Text)

-- | "quoteCurrency"
[instrumentQuoteCurrency] :: Instrument -> !(Maybe Text)

-- | "underlyingSymbol"
[instrumentUnderlyingSymbol] :: Instrument -> !(Maybe Text)

-- | "reference"
[instrumentReference] :: Instrument -> !(Maybe Text)

-- | "referenceSymbol"
[instrumentReferenceSymbol] :: Instrument -> !(Maybe Text)

-- | "calcInterval"
[instrumentCalcInterval] :: Instrument -> !(Maybe DateTime)

-- | "publishInterval"
[instrumentPublishInterval] :: Instrument -> !(Maybe DateTime)

-- | "publishTime"
[instrumentPublishTime] :: Instrument -> !(Maybe DateTime)

-- | "maxOrderQty"
[instrumentMaxOrderQty] :: Instrument -> !(Maybe Double)

-- | "maxPrice"
[instrumentMaxPrice] :: Instrument -> !(Maybe Double)

-- | "lotSize"
[instrumentLotSize] :: Instrument -> !(Maybe Double)

-- | "tickSize"
[instrumentTickSize] :: Instrument -> !(Maybe Double)

-- | "multiplier"
[instrumentMultiplier] :: Instrument -> !(Maybe Double)

-- | "settlCurrency"
[instrumentSettlCurrency] :: Instrument -> !(Maybe Text)

-- | "underlyingToPositionMultiplier"
[instrumentUnderlyingToPositionMultiplier] :: Instrument -> !(Maybe Double)

-- | "underlyingToSettleMultiplier"
[instrumentUnderlyingToSettleMultiplier] :: Instrument -> !(Maybe Double)

-- | "quoteToSettleMultiplier"
[instrumentQuoteToSettleMultiplier] :: Instrument -> !(Maybe Double)

-- | "isQuanto"
[instrumentIsQuanto] :: Instrument -> !(Maybe Bool)

-- | "isInverse"
[instrumentIsInverse] :: Instrument -> !(Maybe Bool)

-- | "initMargin"
[instrumentInitMargin] :: Instrument -> !(Maybe Double)

-- | "maintMargin"
[instrumentMaintMargin] :: Instrument -> !(Maybe Double)

-- | "riskLimit"
[instrumentRiskLimit] :: Instrument -> !(Maybe Double)

-- | "riskStep"
[instrumentRiskStep] :: Instrument -> !(Maybe Double)

-- | "limit"
[instrumentLimit] :: Instrument -> !(Maybe Double)

-- | "capped"
[instrumentCapped] :: Instrument -> !(Maybe Bool)

-- | "taxed"
[instrumentTaxed] :: Instrument -> !(Maybe Bool)

-- | "deleverage"
[instrumentDeleverage] :: Instrument -> !(Maybe Bool)

-- | "makerFee"
[instrumentMakerFee] :: Instrument -> !(Maybe Double)

-- | "takerFee"
[instrumentTakerFee] :: Instrument -> !(Maybe Double)

-- | "settlementFee"
[instrumentSettlementFee] :: Instrument -> !(Maybe Double)

-- | "insuranceFee"
[instrumentInsuranceFee] :: Instrument -> !(Maybe Double)

-- | "fundingBaseSymbol"
[instrumentFundingBaseSymbol] :: Instrument -> !(Maybe Text)

-- | "fundingQuoteSymbol"
[instrumentFundingQuoteSymbol] :: Instrument -> !(Maybe Text)

-- | "fundingPremiumSymbol"
[instrumentFundingPremiumSymbol] :: Instrument -> !(Maybe Text)

-- | "fundingTimestamp"
[instrumentFundingTimestamp] :: Instrument -> !(Maybe DateTime)

-- | "fundingInterval"
[instrumentFundingInterval] :: Instrument -> !(Maybe DateTime)

-- | "fundingRate"
[instrumentFundingRate] :: Instrument -> !(Maybe Double)

-- | "indicativeFundingRate"
[instrumentIndicativeFundingRate] :: Instrument -> !(Maybe Double)

-- | "rebalanceTimestamp"
[instrumentRebalanceTimestamp] :: Instrument -> !(Maybe DateTime)

-- | "rebalanceInterval"
[instrumentRebalanceInterval] :: Instrument -> !(Maybe DateTime)

-- | "openingTimestamp"
[instrumentOpeningTimestamp] :: Instrument -> !(Maybe DateTime)

-- | "closingTimestamp"
[instrumentClosingTimestamp] :: Instrument -> !(Maybe DateTime)

-- | "sessionInterval"
[instrumentSessionInterval] :: Instrument -> !(Maybe DateTime)

-- | "prevClosePrice"
[instrumentPrevClosePrice] :: Instrument -> !(Maybe Double)

-- | "limitDownPrice"
[instrumentLimitDownPrice] :: Instrument -> !(Maybe Double)

-- | "limitUpPrice"
[instrumentLimitUpPrice] :: Instrument -> !(Maybe Double)

-- | "bankruptLimitDownPrice"
[instrumentBankruptLimitDownPrice] :: Instrument -> !(Maybe Double)

-- | "bankruptLimitUpPrice"
[instrumentBankruptLimitUpPrice] :: Instrument -> !(Maybe Double)

-- | "prevTotalVolume"
[instrumentPrevTotalVolume] :: Instrument -> !(Maybe Double)

-- | "totalVolume"
[instrumentTotalVolume] :: Instrument -> !(Maybe Double)

-- | "volume"
[instrumentVolume] :: Instrument -> !(Maybe Double)

-- | "volume24h"
[instrumentVolume24h] :: Instrument -> !(Maybe Double)

-- | "prevTotalTurnover"
[instrumentPrevTotalTurnover] :: Instrument -> !(Maybe Double)

-- | "totalTurnover"
[instrumentTotalTurnover] :: Instrument -> !(Maybe Double)

-- | "turnover"
[instrumentTurnover] :: Instrument -> !(Maybe Double)

-- | "turnover24h"
[instrumentTurnover24h] :: Instrument -> !(Maybe Double)

-- | "prevPrice24h"
[instrumentPrevPrice24h] :: Instrument -> !(Maybe Double)

-- | "vwap"
[instrumentVwap] :: Instrument -> !(Maybe Double)

-- | "highPrice"
[instrumentHighPrice] :: Instrument -> !(Maybe Double)

-- | "lowPrice"
[instrumentLowPrice] :: Instrument -> !(Maybe Double)

-- | "lastPrice"
[instrumentLastPrice] :: Instrument -> !(Maybe Double)

-- | "lastPriceProtected"
[instrumentLastPriceProtected] :: Instrument -> !(Maybe Double)

-- | "lastTickDirection"
[instrumentLastTickDirection] :: Instrument -> !(Maybe Text)

-- | "lastChangePcnt"
[instrumentLastChangePcnt] :: Instrument -> !(Maybe Double)

-- | "bidPrice"
[instrumentBidPrice] :: Instrument -> !(Maybe Double)

-- | "midPrice"
[instrumentMidPrice] :: Instrument -> !(Maybe Double)

-- | "askPrice"
[instrumentAskPrice] :: Instrument -> !(Maybe Double)

-- | "impactBidPrice"
[instrumentImpactBidPrice] :: Instrument -> !(Maybe Double)

-- | "impactMidPrice"
[instrumentImpactMidPrice] :: Instrument -> !(Maybe Double)

-- | "impactAskPrice"
[instrumentImpactAskPrice] :: Instrument -> !(Maybe Double)

-- | "hasLiquidity"
[instrumentHasLiquidity] :: Instrument -> !(Maybe Bool)

-- | "openInterest"
[instrumentOpenInterest] :: Instrument -> !(Maybe Double)

-- | "openValue"
[instrumentOpenValue] :: Instrument -> !(Maybe Double)

-- | "fairMethod"
[instrumentFairMethod] :: Instrument -> !(Maybe Text)

-- | "fairBasisRate"
[instrumentFairBasisRate] :: Instrument -> !(Maybe Double)

-- | "fairBasis"
[instrumentFairBasis] :: Instrument -> !(Maybe Double)

-- | "fairPrice"
[instrumentFairPrice] :: Instrument -> !(Maybe Double)

-- | "markMethod"
[instrumentMarkMethod] :: Instrument -> !(Maybe Text)

-- | "markPrice"
[instrumentMarkPrice] :: Instrument -> !(Maybe Double)

-- | "indicativeTaxRate"
[instrumentIndicativeTaxRate] :: Instrument -> !(Maybe Double)

-- | "indicativeSettlePrice"
[instrumentIndicativeSettlePrice] :: Instrument -> !(Maybe Double)

-- | "settledPrice"
[instrumentSettledPrice] :: Instrument -> !(Maybe Double)

-- | "timestamp"
[instrumentTimestamp] :: Instrument -> !(Maybe DateTime)

-- | FromJSON Instrument

-- | ToJSON Instrument

-- | Construct a value of type <a>Instrument</a> (by applying it's required
--   fields, if any)
mkInstrument :: Text -> Instrument

-- | InstrumentInterval
data InstrumentInterval
InstrumentInterval :: !([Text]) -> !([Text]) -> InstrumentInterval

-- | <i>Required</i> "intervals"
[instrumentIntervalIntervals] :: InstrumentInterval -> !([Text])

-- | <i>Required</i> "symbols"
[instrumentIntervalSymbols] :: InstrumentInterval -> !([Text])

-- | FromJSON InstrumentInterval

-- | ToJSON InstrumentInterval

-- | Construct a value of type <a>InstrumentInterval</a> (by applying it's
--   required fields, if any)
mkInstrumentInterval :: [Text] -> [Text] -> InstrumentInterval

-- | Insurance Insurance Fund Data
data Insurance
Insurance :: !(Text) -> !(DateTime) -> !(Maybe Double) -> Insurance

-- | <i>Required</i> "currency"
[insuranceCurrency] :: Insurance -> !(Text)

-- | <i>Required</i> "timestamp"
[insuranceTimestamp] :: Insurance -> !(DateTime)

-- | "walletBalance"
[insuranceWalletBalance] :: Insurance -> !(Maybe Double)

-- | FromJSON Insurance

-- | ToJSON Insurance

-- | Construct a value of type <a>Insurance</a> (by applying it's required
--   fields, if any)
mkInsurance :: Text -> DateTime -> Insurance

-- | Leaderboard Information on Top Users
data Leaderboard
Leaderboard :: !(Text) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Double) -> Leaderboard

-- | <i>Required</i> "name"
[leaderboardName] :: Leaderboard -> !(Text)

-- | "isRealName"
[leaderboardIsRealName] :: Leaderboard -> !(Maybe Bool)

-- | "isMe"
[leaderboardIsMe] :: Leaderboard -> !(Maybe Bool)

-- | "profit"
[leaderboardProfit] :: Leaderboard -> !(Maybe Double)

-- | FromJSON Leaderboard

-- | ToJSON Leaderboard

-- | Construct a value of type <a>Leaderboard</a> (by applying it's
--   required fields, if any)
mkLeaderboard :: Text -> Leaderboard

-- | Liquidation Active Liquidations
data Liquidation
Liquidation :: !(Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> Liquidation

-- | <i>Required</i> "orderID"
[liquidationOrderId] :: Liquidation -> !(Text)

-- | "symbol"
[liquidationSymbol] :: Liquidation -> !(Maybe Text)

-- | "side"
[liquidationSide] :: Liquidation -> !(Maybe Text)

-- | "price"
[liquidationPrice] :: Liquidation -> !(Maybe Double)

-- | "leavesQty"
[liquidationLeavesQty] :: Liquidation -> !(Maybe Double)

-- | FromJSON Liquidation

-- | ToJSON Liquidation

-- | Construct a value of type <a>Liquidation</a> (by applying it's
--   required fields, if any)
mkLiquidation :: Text -> Liquidation

-- | Margin
data Margin
Margin :: !(Double) -> !(Text) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> Margin

-- | <i>Required</i> "account"
[marginAccount] :: Margin -> !(Double)

-- | <i>Required</i> "currency"
[marginCurrency] :: Margin -> !(Text)

-- | "riskLimit"
[marginRiskLimit] :: Margin -> !(Maybe Double)

-- | "prevState"
[marginPrevState] :: Margin -> !(Maybe Text)

-- | "state"
[marginState] :: Margin -> !(Maybe Text)

-- | "action"
[marginAction] :: Margin -> !(Maybe Text)

-- | "amount"
[marginAmount] :: Margin -> !(Maybe Double)

-- | "pendingCredit"
[marginPendingCredit] :: Margin -> !(Maybe Double)

-- | "pendingDebit"
[marginPendingDebit] :: Margin -> !(Maybe Double)

-- | "confirmedDebit"
[marginConfirmedDebit] :: Margin -> !(Maybe Double)

-- | "prevRealisedPnl"
[marginPrevRealisedPnl] :: Margin -> !(Maybe Double)

-- | "prevUnrealisedPnl"
[marginPrevUnrealisedPnl] :: Margin -> !(Maybe Double)

-- | "grossComm"
[marginGrossComm] :: Margin -> !(Maybe Double)

-- | "grossOpenCost"
[marginGrossOpenCost] :: Margin -> !(Maybe Double)

-- | "grossOpenPremium"
[marginGrossOpenPremium] :: Margin -> !(Maybe Double)

-- | "grossExecCost"
[marginGrossExecCost] :: Margin -> !(Maybe Double)

-- | "grossMarkValue"
[marginGrossMarkValue] :: Margin -> !(Maybe Double)

-- | "riskValue"
[marginRiskValue] :: Margin -> !(Maybe Double)

-- | "taxableMargin"
[marginTaxableMargin] :: Margin -> !(Maybe Double)

-- | "initMargin"
[marginInitMargin] :: Margin -> !(Maybe Double)

-- | "maintMargin"
[marginMaintMargin] :: Margin -> !(Maybe Double)

-- | "sessionMargin"
[marginSessionMargin] :: Margin -> !(Maybe Double)

-- | "targetExcessMargin"
[marginTargetExcessMargin] :: Margin -> !(Maybe Double)

-- | "varMargin"
[marginVarMargin] :: Margin -> !(Maybe Double)

-- | "realisedPnl"
[marginRealisedPnl] :: Margin -> !(Maybe Double)

-- | "unrealisedPnl"
[marginUnrealisedPnl] :: Margin -> !(Maybe Double)

-- | "indicativeTax"
[marginIndicativeTax] :: Margin -> !(Maybe Double)

-- | "unrealisedProfit"
[marginUnrealisedProfit] :: Margin -> !(Maybe Double)

-- | "syntheticMargin"
[marginSyntheticMargin] :: Margin -> !(Maybe Double)

-- | "walletBalance"
[marginWalletBalance] :: Margin -> !(Maybe Double)

-- | "marginBalance"
[marginMarginBalance] :: Margin -> !(Maybe Double)

-- | "marginBalancePcnt"
[marginMarginBalancePcnt] :: Margin -> !(Maybe Double)

-- | "marginLeverage"
[marginMarginLeverage] :: Margin -> !(Maybe Double)

-- | "marginUsedPcnt"
[marginMarginUsedPcnt] :: Margin -> !(Maybe Double)

-- | "excessMargin"
[marginExcessMargin] :: Margin -> !(Maybe Double)

-- | "excessMarginPcnt"
[marginExcessMarginPcnt] :: Margin -> !(Maybe Double)

-- | "availableMargin"
[marginAvailableMargin] :: Margin -> !(Maybe Double)

-- | "withdrawableMargin"
[marginWithdrawableMargin] :: Margin -> !(Maybe Double)

-- | "timestamp"
[marginTimestamp] :: Margin -> !(Maybe DateTime)

-- | "grossLastValue"
[marginGrossLastValue] :: Margin -> !(Maybe Double)

-- | "commission"
[marginCommission] :: Margin -> !(Maybe Double)

-- | FromJSON Margin

-- | ToJSON Margin

-- | Construct a value of type <a>Margin</a> (by applying it's required
--   fields, if any)
mkMargin :: Double -> Text -> Margin

-- | Notification Account Notifications
data Notification
Notification :: !(Maybe Double) -> !(DateTime) -> !(Text) -> !(Text) -> !(Double) -> !(Maybe E'Type) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Text) -> Notification

-- | "id"
[notificationId] :: Notification -> !(Maybe Double)

-- | <i>Required</i> "date"
[notificationDate] :: Notification -> !(DateTime)

-- | <i>Required</i> "title"
[notificationTitle] :: Notification -> !(Text)

-- | <i>Required</i> "body"
[notificationBody] :: Notification -> !(Text)

-- | <i>Required</i> "ttl"
[notificationTtl] :: Notification -> !(Double)

-- | "type"
[notificationType] :: Notification -> !(Maybe E'Type)

-- | "closable"
[notificationClosable] :: Notification -> !(Maybe Bool)

-- | "persist"
[notificationPersist] :: Notification -> !(Maybe Bool)

-- | "waitForVisibility"
[notificationWaitForVisibility] :: Notification -> !(Maybe Bool)

-- | "sound"
[notificationSound] :: Notification -> !(Maybe Text)

-- | FromJSON Notification

-- | ToJSON Notification

-- | Construct a value of type <a>Notification</a> (by applying it's
--   required fields, if any)
mkNotification :: DateTime -> Text -> Text -> Double -> Notification

-- | Order Placement, Cancellation, Amending, and History
data Order
Order :: !(Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Bool) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe DateTime) -> Order

-- | <i>Required</i> "orderID"
[orderOrderId] :: Order -> !(Text)

-- | "clOrdID"
[orderClOrdId] :: Order -> !(Maybe Text)

-- | "clOrdLinkID"
[orderClOrdLinkId] :: Order -> !(Maybe Text)

-- | "account"
[orderAccount] :: Order -> !(Maybe Double)

-- | "symbol"
[orderSymbol] :: Order -> !(Maybe Text)

-- | "side"
[orderSide] :: Order -> !(Maybe Text)

-- | "simpleOrderQty"
[orderSimpleOrderQty] :: Order -> !(Maybe Double)

-- | "orderQty"
[orderOrderQty] :: Order -> !(Maybe Double)

-- | "price"
[orderPrice] :: Order -> !(Maybe Double)

-- | "displayQty"
[orderDisplayQty] :: Order -> !(Maybe Double)

-- | "stopPx"
[orderStopPx] :: Order -> !(Maybe Double)

-- | "pegOffsetValue"
[orderPegOffsetValue] :: Order -> !(Maybe Double)

-- | "pegPriceType"
[orderPegPriceType] :: Order -> !(Maybe Text)

-- | "currency"
[orderCurrency] :: Order -> !(Maybe Text)

-- | "settlCurrency"
[orderSettlCurrency] :: Order -> !(Maybe Text)

-- | "ordType"
[orderOrdType] :: Order -> !(Maybe Text)

-- | "timeInForce"
[orderTimeInForce] :: Order -> !(Maybe Text)

-- | "execInst"
[orderExecInst] :: Order -> !(Maybe Text)

-- | "contingencyType"
[orderContingencyType] :: Order -> !(Maybe Text)

-- | "exDestination"
[orderExDestination] :: Order -> !(Maybe Text)

-- | "ordStatus"
[orderOrdStatus] :: Order -> !(Maybe Text)

-- | "triggered"
[orderTriggered] :: Order -> !(Maybe Text)

-- | "workingIndicator"
[orderWorkingIndicator] :: Order -> !(Maybe Bool)

-- | "ordRejReason"
[orderOrdRejReason] :: Order -> !(Maybe Text)

-- | "simpleLeavesQty"
[orderSimpleLeavesQty] :: Order -> !(Maybe Double)

-- | "leavesQty"
[orderLeavesQty] :: Order -> !(Maybe Double)

-- | "simpleCumQty"
[orderSimpleCumQty] :: Order -> !(Maybe Double)

-- | "cumQty"
[orderCumQty] :: Order -> !(Maybe Double)

-- | "avgPx"
[orderAvgPx] :: Order -> !(Maybe Double)

-- | "multiLegReportingType"
[orderMultiLegReportingType] :: Order -> !(Maybe Text)

-- | "text"
[orderText] :: Order -> !(Maybe Text)

-- | "transactTime"
[orderTransactTime] :: Order -> !(Maybe DateTime)

-- | "timestamp"
[orderTimestamp] :: Order -> !(Maybe DateTime)

-- | FromJSON Order

-- | ToJSON Order

-- | Construct a value of type <a>Order</a> (by applying it's required
--   fields, if any)
mkOrder :: Text -> Order

-- | OrderBook Level 2 Book Data
data OrderBook
OrderBook :: !(Text) -> !(Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> OrderBook

-- | <i>Required</i> "symbol"
[orderBookSymbol] :: OrderBook -> !(Text)

-- | <i>Required</i> "level"
[orderBookLevel] :: OrderBook -> !(Double)

-- | "bidSize"
[orderBookBidSize] :: OrderBook -> !(Maybe Double)

-- | "bidPrice"
[orderBookBidPrice] :: OrderBook -> !(Maybe Double)

-- | "askPrice"
[orderBookAskPrice] :: OrderBook -> !(Maybe Double)

-- | "askSize"
[orderBookAskSize] :: OrderBook -> !(Maybe Double)

-- | "timestamp"
[orderBookTimestamp] :: OrderBook -> !(Maybe DateTime)

-- | FromJSON OrderBook

-- | ToJSON OrderBook

-- | Construct a value of type <a>OrderBook</a> (by applying it's required
--   fields, if any)
mkOrderBook :: Text -> Double -> OrderBook

-- | OrderBookL2
data OrderBookL2
OrderBookL2 :: !(Text) -> !(Double) -> !(Text) -> !(Maybe Double) -> !(Maybe Double) -> OrderBookL2

-- | <i>Required</i> "symbol"
[orderBookL2Symbol] :: OrderBookL2 -> !(Text)

-- | <i>Required</i> "id"
[orderBookL2Id] :: OrderBookL2 -> !(Double)

-- | <i>Required</i> "side"
[orderBookL2Side] :: OrderBookL2 -> !(Text)

-- | "size"
[orderBookL2Size] :: OrderBookL2 -> !(Maybe Double)

-- | "price"
[orderBookL2Price] :: OrderBookL2 -> !(Maybe Double)

-- | FromJSON OrderBookL2

-- | ToJSON OrderBookL2

-- | Construct a value of type <a>OrderBookL2</a> (by applying it's
--   required fields, if any)
mkOrderBookL2 :: Text -> Double -> Text -> OrderBookL2

-- | Position Summary of Open and Closed Positions
data Position
Position :: !(Double) -> !(Text) -> !(Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Bool) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Bool) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> Position

-- | <i>Required</i> "account"
[positionAccount] :: Position -> !(Double)

-- | <i>Required</i> "symbol"
[positionSymbol] :: Position -> !(Text)

-- | <i>Required</i> "currency"
[positionCurrency] :: Position -> !(Text)

-- | "underlying"
[positionUnderlying] :: Position -> !(Maybe Text)

-- | "quoteCurrency"
[positionQuoteCurrency] :: Position -> !(Maybe Text)

-- | "commission"
[positionCommission] :: Position -> !(Maybe Double)

-- | "initMarginReq"
[positionInitMarginReq] :: Position -> !(Maybe Double)

-- | "maintMarginReq"
[positionMaintMarginReq] :: Position -> !(Maybe Double)

-- | "riskLimit"
[positionRiskLimit] :: Position -> !(Maybe Double)

-- | "leverage"
[positionLeverage] :: Position -> !(Maybe Double)

-- | "crossMargin"
[positionCrossMargin] :: Position -> !(Maybe Bool)

-- | "deleveragePercentile"
[positionDeleveragePercentile] :: Position -> !(Maybe Double)

-- | "rebalancedPnl"
[positionRebalancedPnl] :: Position -> !(Maybe Double)

-- | "prevRealisedPnl"
[positionPrevRealisedPnl] :: Position -> !(Maybe Double)

-- | "prevUnrealisedPnl"
[positionPrevUnrealisedPnl] :: Position -> !(Maybe Double)

-- | "prevClosePrice"
[positionPrevClosePrice] :: Position -> !(Maybe Double)

-- | "openingTimestamp"
[positionOpeningTimestamp] :: Position -> !(Maybe DateTime)

-- | "openingQty"
[positionOpeningQty] :: Position -> !(Maybe Double)

-- | "openingCost"
[positionOpeningCost] :: Position -> !(Maybe Double)

-- | "openingComm"
[positionOpeningComm] :: Position -> !(Maybe Double)

-- | "openOrderBuyQty"
[positionOpenOrderBuyQty] :: Position -> !(Maybe Double)

-- | "openOrderBuyCost"
[positionOpenOrderBuyCost] :: Position -> !(Maybe Double)

-- | "openOrderBuyPremium"
[positionOpenOrderBuyPremium] :: Position -> !(Maybe Double)

-- | "openOrderSellQty"
[positionOpenOrderSellQty] :: Position -> !(Maybe Double)

-- | "openOrderSellCost"
[positionOpenOrderSellCost] :: Position -> !(Maybe Double)

-- | "openOrderSellPremium"
[positionOpenOrderSellPremium] :: Position -> !(Maybe Double)

-- | "execBuyQty"
[positionExecBuyQty] :: Position -> !(Maybe Double)

-- | "execBuyCost"
[positionExecBuyCost] :: Position -> !(Maybe Double)

-- | "execSellQty"
[positionExecSellQty] :: Position -> !(Maybe Double)

-- | "execSellCost"
[positionExecSellCost] :: Position -> !(Maybe Double)

-- | "execQty"
[positionExecQty] :: Position -> !(Maybe Double)

-- | "execCost"
[positionExecCost] :: Position -> !(Maybe Double)

-- | "execComm"
[positionExecComm] :: Position -> !(Maybe Double)

-- | "currentTimestamp"
[positionCurrentTimestamp] :: Position -> !(Maybe DateTime)

-- | "currentQty"
[positionCurrentQty] :: Position -> !(Maybe Double)

-- | "currentCost"
[positionCurrentCost] :: Position -> !(Maybe Double)

-- | "currentComm"
[positionCurrentComm] :: Position -> !(Maybe Double)

-- | "realisedCost"
[positionRealisedCost] :: Position -> !(Maybe Double)

-- | "unrealisedCost"
[positionUnrealisedCost] :: Position -> !(Maybe Double)

-- | "grossOpenCost"
[positionGrossOpenCost] :: Position -> !(Maybe Double)

-- | "grossOpenPremium"
[positionGrossOpenPremium] :: Position -> !(Maybe Double)

-- | "grossExecCost"
[positionGrossExecCost] :: Position -> !(Maybe Double)

-- | "isOpen"
[positionIsOpen] :: Position -> !(Maybe Bool)

-- | "markPrice"
[positionMarkPrice] :: Position -> !(Maybe Double)

-- | "markValue"
[positionMarkValue] :: Position -> !(Maybe Double)

-- | "riskValue"
[positionRiskValue] :: Position -> !(Maybe Double)

-- | "homeNotional"
[positionHomeNotional] :: Position -> !(Maybe Double)

-- | "foreignNotional"
[positionForeignNotional] :: Position -> !(Maybe Double)

-- | "posState"
[positionPosState] :: Position -> !(Maybe Text)

-- | "posCost"
[positionPosCost] :: Position -> !(Maybe Double)

-- | "posCost2"
[positionPosCost2] :: Position -> !(Maybe Double)

-- | "posCross"
[positionPosCross] :: Position -> !(Maybe Double)

-- | "posInit"
[positionPosInit] :: Position -> !(Maybe Double)

-- | "posComm"
[positionPosComm] :: Position -> !(Maybe Double)

-- | "posLoss"
[positionPosLoss] :: Position -> !(Maybe Double)

-- | "posMargin"
[positionPosMargin] :: Position -> !(Maybe Double)

-- | "posMaint"
[positionPosMaint] :: Position -> !(Maybe Double)

-- | "posAllowance"
[positionPosAllowance] :: Position -> !(Maybe Double)

-- | "taxableMargin"
[positionTaxableMargin] :: Position -> !(Maybe Double)

-- | "initMargin"
[positionInitMargin] :: Position -> !(Maybe Double)

-- | "maintMargin"
[positionMaintMargin] :: Position -> !(Maybe Double)

-- | "sessionMargin"
[positionSessionMargin] :: Position -> !(Maybe Double)

-- | "targetExcessMargin"
[positionTargetExcessMargin] :: Position -> !(Maybe Double)

-- | "varMargin"
[positionVarMargin] :: Position -> !(Maybe Double)

-- | "realisedGrossPnl"
[positionRealisedGrossPnl] :: Position -> !(Maybe Double)

-- | "realisedTax"
[positionRealisedTax] :: Position -> !(Maybe Double)

-- | "realisedPnl"
[positionRealisedPnl] :: Position -> !(Maybe Double)

-- | "unrealisedGrossPnl"
[positionUnrealisedGrossPnl] :: Position -> !(Maybe Double)

-- | "longBankrupt"
[positionLongBankrupt] :: Position -> !(Maybe Double)

-- | "shortBankrupt"
[positionShortBankrupt] :: Position -> !(Maybe Double)

-- | "taxBase"
[positionTaxBase] :: Position -> !(Maybe Double)

-- | "indicativeTaxRate"
[positionIndicativeTaxRate] :: Position -> !(Maybe Double)

-- | "indicativeTax"
[positionIndicativeTax] :: Position -> !(Maybe Double)

-- | "unrealisedTax"
[positionUnrealisedTax] :: Position -> !(Maybe Double)

-- | "unrealisedPnl"
[positionUnrealisedPnl] :: Position -> !(Maybe Double)

-- | "unrealisedPnlPcnt"
[positionUnrealisedPnlPcnt] :: Position -> !(Maybe Double)

-- | "unrealisedRoePcnt"
[positionUnrealisedRoePcnt] :: Position -> !(Maybe Double)

-- | "simpleQty"
[positionSimpleQty] :: Position -> !(Maybe Double)

-- | "simpleCost"
[positionSimpleCost] :: Position -> !(Maybe Double)

-- | "simpleValue"
[positionSimpleValue] :: Position -> !(Maybe Double)

-- | "simplePnl"
[positionSimplePnl] :: Position -> !(Maybe Double)

-- | "simplePnlPcnt"
[positionSimplePnlPcnt] :: Position -> !(Maybe Double)

-- | "avgCostPrice"
[positionAvgCostPrice] :: Position -> !(Maybe Double)

-- | "avgEntryPrice"
[positionAvgEntryPrice] :: Position -> !(Maybe Double)

-- | "breakEvenPrice"
[positionBreakEvenPrice] :: Position -> !(Maybe Double)

-- | "marginCallPrice"
[positionMarginCallPrice] :: Position -> !(Maybe Double)

-- | "liquidationPrice"
[positionLiquidationPrice] :: Position -> !(Maybe Double)

-- | "bankruptPrice"
[positionBankruptPrice] :: Position -> !(Maybe Double)

-- | "timestamp"
[positionTimestamp] :: Position -> !(Maybe DateTime)

-- | "lastPrice"
[positionLastPrice] :: Position -> !(Maybe Double)

-- | "lastValue"
[positionLastValue] :: Position -> !(Maybe Double)

-- | FromJSON Position

-- | ToJSON Position

-- | Construct a value of type <a>Position</a> (by applying it's required
--   fields, if any)
mkPosition :: Double -> Text -> Text -> Position

-- | Quote Best Bid/Offer Snapshots &amp; Historical Bins
data Quote
Quote :: !(DateTime) -> !(Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> Quote

-- | <i>Required</i> "timestamp"
[quoteTimestamp] :: Quote -> !(DateTime)

-- | <i>Required</i> "symbol"
[quoteSymbol] :: Quote -> !(Text)

-- | "bidSize"
[quoteBidSize] :: Quote -> !(Maybe Double)

-- | "bidPrice"
[quoteBidPrice] :: Quote -> !(Maybe Double)

-- | "askPrice"
[quoteAskPrice] :: Quote -> !(Maybe Double)

-- | "askSize"
[quoteAskSize] :: Quote -> !(Maybe Double)

-- | FromJSON Quote

-- | ToJSON Quote

-- | Construct a value of type <a>Quote</a> (by applying it's required
--   fields, if any)
mkQuote :: DateTime -> Text -> Quote

-- | Settlement Historical Settlement Data
data Settlement
Settlement :: !(DateTime) -> !(Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> Settlement

-- | <i>Required</i> "timestamp"
[settlementTimestamp] :: Settlement -> !(DateTime)

-- | <i>Required</i> "symbol"
[settlementSymbol] :: Settlement -> !(Text)

-- | "settlementType"
[settlementSettlementType] :: Settlement -> !(Maybe Text)

-- | "settledPrice"
[settlementSettledPrice] :: Settlement -> !(Maybe Double)

-- | "bankrupt"
[settlementBankrupt] :: Settlement -> !(Maybe Double)

-- | "taxBase"
[settlementTaxBase] :: Settlement -> !(Maybe Double)

-- | "taxRate"
[settlementTaxRate] :: Settlement -> !(Maybe Double)

-- | FromJSON Settlement

-- | ToJSON Settlement

-- | Construct a value of type <a>Settlement</a> (by applying it's required
--   fields, if any)
mkSettlement :: DateTime -> Text -> Settlement

-- | Stats Exchange Statistics
data Stats
Stats :: !(Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> Stats

-- | <i>Required</i> "rootSymbol"
[statsRootSymbol] :: Stats -> !(Text)

-- | "currency"
[statsCurrency] :: Stats -> !(Maybe Text)

-- | "volume24h"
[statsVolume24h] :: Stats -> !(Maybe Double)

-- | "turnover24h"
[statsTurnover24h] :: Stats -> !(Maybe Double)

-- | "openInterest"
[statsOpenInterest] :: Stats -> !(Maybe Double)

-- | "openValue"
[statsOpenValue] :: Stats -> !(Maybe Double)

-- | FromJSON Stats

-- | ToJSON Stats

-- | Construct a value of type <a>Stats</a> (by applying it's required
--   fields, if any)
mkStats :: Text -> Stats

-- | StatsHistory
data StatsHistory
StatsHistory :: !(DateTime) -> !(Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> StatsHistory

-- | <i>Required</i> "date"
[statsHistoryDate] :: StatsHistory -> !(DateTime)

-- | <i>Required</i> "rootSymbol"
[statsHistoryRootSymbol] :: StatsHistory -> !(Text)

-- | "currency"
[statsHistoryCurrency] :: StatsHistory -> !(Maybe Text)

-- | "volume"
[statsHistoryVolume] :: StatsHistory -> !(Maybe Double)

-- | "turnover"
[statsHistoryTurnover] :: StatsHistory -> !(Maybe Double)

-- | FromJSON StatsHistory

-- | ToJSON StatsHistory

-- | Construct a value of type <a>StatsHistory</a> (by applying it's
--   required fields, if any)
mkStatsHistory :: DateTime -> Text -> StatsHistory

-- | StatsUSD
data StatsUSD
StatsUSD :: !(Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> StatsUSD

-- | <i>Required</i> "rootSymbol"
[statsUSDRootSymbol] :: StatsUSD -> !(Text)

-- | "currency"
[statsUSDCurrency] :: StatsUSD -> !(Maybe Text)

-- | "turnover24h"
[statsUSDTurnover24h] :: StatsUSD -> !(Maybe Double)

-- | "turnover30d"
[statsUSDTurnover30d] :: StatsUSD -> !(Maybe Double)

-- | "turnover365d"
[statsUSDTurnover365d] :: StatsUSD -> !(Maybe Double)

-- | "turnover"
[statsUSDTurnover] :: StatsUSD -> !(Maybe Double)

-- | FromJSON StatsUSD

-- | ToJSON StatsUSD

-- | Construct a value of type <a>StatsUSD</a> (by applying it's required
--   fields, if any)
mkStatsUSD :: Text -> StatsUSD

-- | Trade Individual &amp; Bucketed Trades
data Trade
Trade :: !(DateTime) -> !(Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> Trade

-- | <i>Required</i> "timestamp"
[tradeTimestamp] :: Trade -> !(DateTime)

-- | <i>Required</i> "symbol"
[tradeSymbol] :: Trade -> !(Text)

-- | "side"
[tradeSide] :: Trade -> !(Maybe Text)

-- | "size"
[tradeSize] :: Trade -> !(Maybe Double)

-- | "price"
[tradePrice] :: Trade -> !(Maybe Double)

-- | "tickDirection"
[tradeTickDirection] :: Trade -> !(Maybe Text)

-- | "trdMatchID"
[tradeTrdMatchId] :: Trade -> !(Maybe Text)

-- | "grossValue"
[tradeGrossValue] :: Trade -> !(Maybe Double)

-- | "homeNotional"
[tradeHomeNotional] :: Trade -> !(Maybe Double)

-- | "foreignNotional"
[tradeForeignNotional] :: Trade -> !(Maybe Double)

-- | FromJSON Trade

-- | ToJSON Trade

-- | Construct a value of type <a>Trade</a> (by applying it's required
--   fields, if any)
mkTrade :: DateTime -> Text -> Trade

-- | TradeBin
data TradeBin
TradeBin :: !(DateTime) -> !(Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> TradeBin

-- | <i>Required</i> "timestamp"
[tradeBinTimestamp] :: TradeBin -> !(DateTime)

-- | <i>Required</i> "symbol"
[tradeBinSymbol] :: TradeBin -> !(Text)

-- | "open"
[tradeBinOpen] :: TradeBin -> !(Maybe Double)

-- | "high"
[tradeBinHigh] :: TradeBin -> !(Maybe Double)

-- | "low"
[tradeBinLow] :: TradeBin -> !(Maybe Double)

-- | "close"
[tradeBinClose] :: TradeBin -> !(Maybe Double)

-- | "trades"
[tradeBinTrades] :: TradeBin -> !(Maybe Double)

-- | "volume"
[tradeBinVolume] :: TradeBin -> !(Maybe Double)

-- | "vwap"
[tradeBinVwap] :: TradeBin -> !(Maybe Double)

-- | "lastSize"
[tradeBinLastSize] :: TradeBin -> !(Maybe Double)

-- | "turnover"
[tradeBinTurnover] :: TradeBin -> !(Maybe Double)

-- | "homeNotional"
[tradeBinHomeNotional] :: TradeBin -> !(Maybe Double)

-- | "foreignNotional"
[tradeBinForeignNotional] :: TradeBin -> !(Maybe Double)

-- | FromJSON TradeBin

-- | ToJSON TradeBin

-- | Construct a value of type <a>TradeBin</a> (by applying it's required
--   fields, if any)
mkTradeBin :: DateTime -> Text -> TradeBin

-- | Transaction
data Transaction
Transaction :: !(Text) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe DateTime) -> Transaction

-- | <i>Required</i> "transactID"
[transactionTransactId] :: Transaction -> !(Text)

-- | "account"
[transactionAccount] :: Transaction -> !(Maybe Double)

-- | "currency"
[transactionCurrency] :: Transaction -> !(Maybe Text)

-- | "transactType"
[transactionTransactType] :: Transaction -> !(Maybe Text)

-- | "amount"
[transactionAmount] :: Transaction -> !(Maybe Double)

-- | "fee"
[transactionFee] :: Transaction -> !(Maybe Double)

-- | "transactStatus"
[transactionTransactStatus] :: Transaction -> !(Maybe Text)

-- | "address"
[transactionAddress] :: Transaction -> !(Maybe Text)

-- | "tx"
[transactionTx] :: Transaction -> !(Maybe Text)

-- | "text"
[transactionText] :: Transaction -> !(Maybe Text)

-- | "transactTime"
[transactionTransactTime] :: Transaction -> !(Maybe DateTime)

-- | "timestamp"
[transactionTimestamp] :: Transaction -> !(Maybe DateTime)

-- | FromJSON Transaction

-- | ToJSON Transaction

-- | Construct a value of type <a>Transaction</a> (by applying it's
--   required fields, if any)
mkTransaction :: Text -> Transaction

-- | User Account Operations
data User
User :: !(Maybe Double) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Text) -> !(Text) -> !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe DateTime) -> !(Maybe UserPreferences) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> User

-- | "id"
[userId] :: User -> !(Maybe Double)

-- | "ownerId"
[userOwnerId] :: User -> !(Maybe Double)

-- | "firstname"
[userFirstname] :: User -> !(Maybe Text)

-- | "lastname"
[userLastname] :: User -> !(Maybe Text)

-- | <i>Required</i> "username"
[userUsername] :: User -> !(Text)

-- | <i>Required</i> "email"
[userEmail] :: User -> !(Text)

-- | "phone"
[userPhone] :: User -> !(Maybe Text)

-- | "created"
[userCreated] :: User -> !(Maybe DateTime)

-- | "lastUpdated"
[userLastUpdated] :: User -> !(Maybe DateTime)

-- | "preferences"
[userPreferences] :: User -> !(Maybe UserPreferences)

-- | <a>TFAEnabled</a>
[userTfaEnabled] :: User -> !(Maybe Text)

-- | "affiliateID"
[userAffiliateId] :: User -> !(Maybe Text)

-- | "pgpPubKey"
[userPgpPubKey] :: User -> !(Maybe Text)

-- | "country"
[userCountry] :: User -> !(Maybe Text)

-- | FromJSON User

-- | ToJSON User

-- | Construct a value of type <a>User</a> (by applying it's required
--   fields, if any)
mkUser :: Text -> Text -> User

-- | UserCommission
data UserCommission
UserCommission :: !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> UserCommission

-- | "makerFee"
[userCommissionMakerFee] :: UserCommission -> !(Maybe Double)

-- | "takerFee"
[userCommissionTakerFee] :: UserCommission -> !(Maybe Double)

-- | "settlementFee"
[userCommissionSettlementFee] :: UserCommission -> !(Maybe Double)

-- | "maxFee"
[userCommissionMaxFee] :: UserCommission -> !(Maybe Double)

-- | FromJSON UserCommission

-- | ToJSON UserCommission

-- | Construct a value of type <a>UserCommission</a> (by applying it's
--   required fields, if any)
mkUserCommission :: UserCommission

-- | UserPreferences
data UserPreferences
UserPreferences :: !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Bool) -> !(Maybe [Text]) -> !(Maybe [Text]) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe [Text]) -> !(Maybe Text) -> !(Maybe [Text]) -> !(Maybe Value) -> !(Maybe Text) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe [Text]) -> !(Maybe Bool) -> !(Maybe Bool) -> !(Maybe Text) -> !(Maybe Bool) -> !(Maybe Text) -> UserPreferences

-- | "alertOnLiquidations"
[userPreferencesAlertOnLiquidations] :: UserPreferences -> !(Maybe Bool)

-- | "animationsEnabled"
[userPreferencesAnimationsEnabled] :: UserPreferences -> !(Maybe Bool)

-- | "announcementsLastSeen"
[userPreferencesAnnouncementsLastSeen] :: UserPreferences -> !(Maybe DateTime)

-- | "chatChannelID"
[userPreferencesChatChannelId] :: UserPreferences -> !(Maybe Double)

-- | "colorTheme"
[userPreferencesColorTheme] :: UserPreferences -> !(Maybe Text)

-- | "currency"
[userPreferencesCurrency] :: UserPreferences -> !(Maybe Text)

-- | "debug"
[userPreferencesDebug] :: UserPreferences -> !(Maybe Bool)

-- | "disableEmails"
[userPreferencesDisableEmails] :: UserPreferences -> !(Maybe [Text])

-- | "hideConfirmDialogs"
[userPreferencesHideConfirmDialogs] :: UserPreferences -> !(Maybe [Text])

-- | "hideConnectionModal"
[userPreferencesHideConnectionModal] :: UserPreferences -> !(Maybe Bool)

-- | "hideFromLeaderboard"
[userPreferencesHideFromLeaderboard] :: UserPreferences -> !(Maybe Bool)

-- | "hideNameFromLeaderboard"
[userPreferencesHideNameFromLeaderboard] :: UserPreferences -> !(Maybe Bool)

-- | "hideNotifications"
[userPreferencesHideNotifications] :: UserPreferences -> !(Maybe [Text])

-- | "locale"
[userPreferencesLocale] :: UserPreferences -> !(Maybe Text)

-- | "msgsSeen"
[userPreferencesMsgsSeen] :: UserPreferences -> !(Maybe [Text])

-- | "orderBookBinning"
[userPreferencesOrderBookBinning] :: UserPreferences -> !(Maybe Value)

-- | "orderBookType"
[userPreferencesOrderBookType] :: UserPreferences -> !(Maybe Text)

-- | "orderClearImmediate"
[userPreferencesOrderClearImmediate] :: UserPreferences -> !(Maybe Bool)

-- | "orderControlsPlusMinus"
[userPreferencesOrderControlsPlusMinus] :: UserPreferences -> !(Maybe Bool)

-- | "sounds"
[userPreferencesSounds] :: UserPreferences -> !(Maybe [Text])

-- | "strictIPCheck"
[userPreferencesStrictIpCheck] :: UserPreferences -> !(Maybe Bool)

-- | "strictTimeout"
[userPreferencesStrictTimeout] :: UserPreferences -> !(Maybe Bool)

-- | "tickerGroup"
[userPreferencesTickerGroup] :: UserPreferences -> !(Maybe Text)

-- | "tickerPinned"
[userPreferencesTickerPinned] :: UserPreferences -> !(Maybe Bool)

-- | "tradeLayout"
[userPreferencesTradeLayout] :: UserPreferences -> !(Maybe Text)

-- | FromJSON UserPreferences

-- | ToJSON UserPreferences

-- | Construct a value of type <a>UserPreferences</a> (by applying it's
--   required fields, if any)
mkUserPreferences :: UserPreferences

-- | Wallet
data Wallet
Wallet :: !(Double) -> !(Text) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe Double) -> !(Maybe DateTime) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe [Text]) -> Wallet

-- | <i>Required</i> "account"
[walletAccount] :: Wallet -> !(Double)

-- | <i>Required</i> "currency"
[walletCurrency] :: Wallet -> !(Text)

-- | "prevDeposited"
[walletPrevDeposited] :: Wallet -> !(Maybe Double)

-- | "prevWithdrawn"
[walletPrevWithdrawn] :: Wallet -> !(Maybe Double)

-- | "prevTransferIn"
[walletPrevTransferIn] :: Wallet -> !(Maybe Double)

-- | "prevTransferOut"
[walletPrevTransferOut] :: Wallet -> !(Maybe Double)

-- | "prevAmount"
[walletPrevAmount] :: Wallet -> !(Maybe Double)

-- | "prevTimestamp"
[walletPrevTimestamp] :: Wallet -> !(Maybe DateTime)

-- | "deltaDeposited"
[walletDeltaDeposited] :: Wallet -> !(Maybe Double)

-- | "deltaWithdrawn"
[walletDeltaWithdrawn] :: Wallet -> !(Maybe Double)

-- | "deltaTransferIn"
[walletDeltaTransferIn] :: Wallet -> !(Maybe Double)

-- | "deltaTransferOut"
[walletDeltaTransferOut] :: Wallet -> !(Maybe Double)

-- | "deltaAmount"
[walletDeltaAmount] :: Wallet -> !(Maybe Double)

-- | "deposited"
[walletDeposited] :: Wallet -> !(Maybe Double)

-- | "withdrawn"
[walletWithdrawn] :: Wallet -> !(Maybe Double)

-- | "transferIn"
[walletTransferIn] :: Wallet -> !(Maybe Double)

-- | "transferOut"
[walletTransferOut] :: Wallet -> !(Maybe Double)

-- | "amount"
[walletAmount] :: Wallet -> !(Maybe Double)

-- | "pendingCredit"
[walletPendingCredit] :: Wallet -> !(Maybe Double)

-- | "pendingDebit"
[walletPendingDebit] :: Wallet -> !(Maybe Double)

-- | "confirmedDebit"
[walletConfirmedDebit] :: Wallet -> !(Maybe Double)

-- | "timestamp"
[walletTimestamp] :: Wallet -> !(Maybe DateTime)

-- | "addr"
[walletAddr] :: Wallet -> !(Maybe Text)

-- | "script"
[walletScript] :: Wallet -> !(Maybe Text)

-- | "withdrawalLock"
[walletWithdrawalLock] :: Wallet -> !(Maybe [Text])

-- | FromJSON Wallet

-- | ToJSON Wallet

-- | Construct a value of type <a>Wallet</a> (by applying it's required
--   fields, if any)
mkWallet :: Double -> Text -> Wallet

-- | XAny
data XAny
XAny :: XAny

-- | FromJSON XAny

-- | ToJSON XAny

-- | Construct a value of type <a>XAny</a> (by applying it's required
--   fields, if any)
mkXAny :: XAny

-- | Enum of <a>Text</a>
data E'Type

-- | <pre>
--   "success"
--   </pre>
E'Type'Success :: E'Type

-- | <pre>
--   "error"
--   </pre>
E'Type'Error :: E'Type

-- | <pre>
--   "info"
--   </pre>
E'Type'Info :: E'Type

-- | unwrap <a>E'Type</a> enum
fromE'Type :: E'Type -> Text

-- | parse <a>E'Type</a> enum
toE'Type :: Text -> Either String E'Type
instance GHC.Classes.Eq BitMEX.Model.Notification
instance GHC.Show.Show BitMEX.Model.Notification
instance GHC.Enum.Enum BitMEX.Model.E'Type
instance GHC.Enum.Bounded BitMEX.Model.E'Type
instance GHC.Classes.Ord BitMEX.Model.E'Type
instance GHC.Classes.Eq BitMEX.Model.E'Type
instance GHC.Show.Show BitMEX.Model.E'Type
instance GHC.Classes.Eq BitMEX.Model.APIKey
instance GHC.Show.Show BitMEX.Model.APIKey
instance GHC.Classes.Eq BitMEX.Model.XAny
instance GHC.Show.Show BitMEX.Model.XAny
instance GHC.Classes.Eq BitMEX.Model.Wallet
instance GHC.Show.Show BitMEX.Model.Wallet
instance GHC.Classes.Eq BitMEX.Model.User
instance GHC.Show.Show BitMEX.Model.User
instance GHC.Classes.Eq BitMEX.Model.UserPreferences
instance GHC.Show.Show BitMEX.Model.UserPreferences
instance GHC.Classes.Eq BitMEX.Model.UserCommission
instance GHC.Show.Show BitMEX.Model.UserCommission
instance GHC.Classes.Eq BitMEX.Model.Transaction
instance GHC.Show.Show BitMEX.Model.Transaction
instance GHC.Classes.Eq BitMEX.Model.TradeBin
instance GHC.Show.Show BitMEX.Model.TradeBin
instance GHC.Classes.Eq BitMEX.Model.Trade
instance GHC.Show.Show BitMEX.Model.Trade
instance GHC.Classes.Eq BitMEX.Model.StatsUSD
instance GHC.Show.Show BitMEX.Model.StatsUSD
instance GHC.Classes.Eq BitMEX.Model.StatsHistory
instance GHC.Show.Show BitMEX.Model.StatsHistory
instance GHC.Classes.Eq BitMEX.Model.Stats
instance GHC.Show.Show BitMEX.Model.Stats
instance GHC.Classes.Eq BitMEX.Model.Settlement
instance GHC.Show.Show BitMEX.Model.Settlement
instance GHC.Classes.Eq BitMEX.Model.Quote
instance GHC.Show.Show BitMEX.Model.Quote
instance GHC.Classes.Eq BitMEX.Model.Position
instance GHC.Show.Show BitMEX.Model.Position
instance GHC.Classes.Eq BitMEX.Model.OrderBookL2
instance GHC.Show.Show BitMEX.Model.OrderBookL2
instance GHC.Classes.Eq BitMEX.Model.OrderBook
instance GHC.Show.Show BitMEX.Model.OrderBook
instance GHC.Classes.Eq BitMEX.Model.Order
instance GHC.Show.Show BitMEX.Model.Order
instance GHC.Classes.Eq BitMEX.Model.Margin
instance GHC.Show.Show BitMEX.Model.Margin
instance GHC.Classes.Eq BitMEX.Model.Liquidation
instance GHC.Show.Show BitMEX.Model.Liquidation
instance GHC.Classes.Eq BitMEX.Model.Leaderboard
instance GHC.Show.Show BitMEX.Model.Leaderboard
instance GHC.Classes.Eq BitMEX.Model.Insurance
instance GHC.Show.Show BitMEX.Model.Insurance
instance GHC.Classes.Eq BitMEX.Model.InstrumentInterval
instance GHC.Show.Show BitMEX.Model.InstrumentInterval
instance GHC.Classes.Eq BitMEX.Model.Instrument
instance GHC.Show.Show BitMEX.Model.Instrument
instance GHC.Classes.Eq BitMEX.Model.InlineResponse200
instance GHC.Show.Show BitMEX.Model.InlineResponse200
instance GHC.Classes.Eq BitMEX.Model.IndexComposite
instance GHC.Show.Show BitMEX.Model.IndexComposite
instance GHC.Classes.Eq BitMEX.Model.Funding
instance GHC.Show.Show BitMEX.Model.Funding
instance GHC.Classes.Eq BitMEX.Model.Execution
instance GHC.Show.Show BitMEX.Model.Execution
instance GHC.Classes.Eq BitMEX.Model.Error
instance GHC.Show.Show BitMEX.Model.Error
instance GHC.Classes.Eq BitMEX.Model.ErrorError
instance GHC.Show.Show BitMEX.Model.ErrorError
instance GHC.Classes.Eq BitMEX.Model.ConnectedUsers
instance GHC.Show.Show BitMEX.Model.ConnectedUsers
instance GHC.Classes.Eq BitMEX.Model.ChatChannels
instance GHC.Show.Show BitMEX.Model.ChatChannels
instance GHC.Classes.Eq BitMEX.Model.Chat
instance GHC.Show.Show BitMEX.Model.Chat
instance GHC.Classes.Eq BitMEX.Model.Announcement
instance GHC.Show.Show BitMEX.Model.Announcement
instance GHC.Classes.Eq BitMEX.Model.Affiliate
instance GHC.Show.Show BitMEX.Model.Affiliate
instance GHC.Classes.Eq BitMEX.Model.AccessToken
instance GHC.Show.Show BitMEX.Model.AccessToken
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Notification
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Notification
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.E'Type
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.E'Type
instance Web.Internal.HttpApiData.ToHttpApiData BitMEX.Model.E'Type
instance Web.Internal.HttpApiData.FromHttpApiData BitMEX.Model.E'Type
instance BitMEX.MimeTypes.MimeRender BitMEX.MimeTypes.MimeMultipartFormData BitMEX.Model.E'Type
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.APIKey
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.APIKey
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.XAny
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.XAny
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Wallet
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Wallet
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.User
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.User
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.UserPreferences
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.UserPreferences
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.UserCommission
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.UserCommission
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Transaction
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Transaction
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.TradeBin
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.TradeBin
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Trade
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Trade
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.StatsUSD
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.StatsUSD
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.StatsHistory
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.StatsHistory
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Stats
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Stats
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Settlement
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Settlement
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Quote
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Quote
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Position
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Position
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.OrderBookL2
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.OrderBookL2
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.OrderBook
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.OrderBook
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Order
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Order
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Margin
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Margin
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Liquidation
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Liquidation
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Leaderboard
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Leaderboard
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Insurance
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Insurance
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.InstrumentInterval
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.InstrumentInterval
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Instrument
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Instrument
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.InlineResponse200
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.InlineResponse200
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.IndexComposite
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.IndexComposite
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Funding
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Funding
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Execution
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Execution
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Error
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Error
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.ErrorError
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.ErrorError
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.ConnectedUsers
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.ConnectedUsers
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.ChatChannels
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.ChatChannels
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Chat
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Chat
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Announcement
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Announcement
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.Affiliate
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.Affiliate
instance Data.Aeson.Types.FromJSON.FromJSON BitMEX.Model.AccessToken
instance Data.Aeson.Types.ToJSON.ToJSON BitMEX.Model.AccessToken


module BitMEX.API

-- | <pre>
--   POST /apiKey/disable
--   </pre>
--   
--   Disable an API Key.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
aPIKeyDisable :: (Consumes APIKeyDisable contentType) => ContentType contentType -> Accept accept -> ApiKeyId -> BitMEXRequest APIKeyDisable contentType APIKey accept
data APIKeyDisable

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /apiKey/enable
--   </pre>
--   
--   Enable an API Key.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
aPIKeyEnable :: (Consumes APIKeyEnable contentType) => ContentType contentType -> Accept accept -> ApiKeyId -> BitMEXRequest APIKeyEnable contentType APIKey accept
data APIKeyEnable

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /apiKey
--   </pre>
--   
--   Get your API Keys.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
aPIKeyGet :: Accept accept -> BitMEXRequest APIKeyGet MimeNoContent [APIKey] accept
data APIKeyGet

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /apiKey
--   </pre>
--   
--   Create a new API Key.
--   
--   API Keys can also be created via <a>this Python script</a> See the
--   <a>API Key Documentation</a> for more information on capabilities.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
aPIKeyNew :: (Consumes APIKeyNew contentType) => ContentType contentType -> Accept accept -> BitMEXRequest APIKeyNew contentType APIKey accept
data APIKeyNew

-- | <i>Optional Param</i> "name" - Key name. This name is for reference
--   only.

-- | <i>Optional Param</i> "cidr" - CIDR block to restrict this key to. To
--   restrict to a single address, append "<i>32", e.g. 207.39.29.22</i>32.
--   Leave blank or set to 0.0.0.0<i>0 to allow all IPs. Only one block may
--   be set. &lt;a
--   href="http:</i><i>software77.net</i>cidr-101.html"&gt;More on CIDR
--   blocks<a>/a</a>

-- | <i>Optional Param</i> "permissions" - Key Permissions. All keys can
--   read margin and position data. Additional permissions must be added.
--   Available: ["order", "orderCancel", "withdraw"].

-- | <i>Optional Param</i> "enabled" - Set to true to enable this key on
--   creation. Otherwise, it must be explicitly enabled via
--   <i>apiKey</i>enable.

-- | <i>Optional Param</i> "token" - OTP Token (YubiKey, Google
--   Authenticator)

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   DELETE /apiKey
--   </pre>
--   
--   Remove an API Key.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
aPIKeyRemove :: (Consumes APIKeyRemove contentType) => ContentType contentType -> Accept accept -> ApiKeyId -> BitMEXRequest APIKeyRemove contentType InlineResponse200 accept
data APIKeyRemove

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /announcement
--   </pre>
--   
--   Get site announcements.
announcementGet :: Accept accept -> BitMEXRequest AnnouncementGet MimeNoContent [Announcement] accept
data AnnouncementGet

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /announcement/urgent
--   </pre>
--   
--   Get urgent (banner) announcements.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
announcementGetUrgent :: Accept accept -> BitMEXRequest AnnouncementGetUrgent MimeNoContent [Announcement] accept
data AnnouncementGetUrgent

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /chat
--   </pre>
--   
--   Get chat messages.
chatGet :: Accept accept -> BitMEXRequest ChatGet MimeNoContent [Chat] accept
data ChatGet

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting ID for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "channelID" - Channel id. GET
--   <i>chat</i>channels for ids. Leave blank for all.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /chat/channels
--   </pre>
--   
--   Get available channels.
chatGetChannels :: Accept accept -> BitMEXRequest ChatGetChannels MimeNoContent [ChatChannels] accept
data ChatGetChannels

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /chat/connected
--   </pre>
--   
--   Get connected users.
--   
--   Returns an array with browser users in the first position and API
--   users (bots) in the second position.
chatGetConnected :: Accept accept -> BitMEXRequest ChatGetConnected MimeNoContent ConnectedUsers accept
data ChatGetConnected

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /chat
--   </pre>
--   
--   Send a chat message.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
chatNew :: (Consumes ChatNew contentType) => ContentType contentType -> Accept accept -> Message -> BitMEXRequest ChatNew contentType Chat accept
data ChatNew

-- | <i>Optional Param</i> "channelID" - Channel to post to. Default 1
--   (English).

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /execution
--   </pre>
--   
--   Get all raw executions for your account.
--   
--   This returns all raw transactions, which includes order opening and
--   cancelation, and order status changes. It can be quite noisy. More
--   focused information is available at `/execution/tradeHistory`. You may
--   also use the <tt>filter</tt> param to target your query. Specify an
--   array as a filter value, such as `{"execType": ["Settlement",
--   "Trade"]}` to filter on multiple values. See <a>the FIX Spec</a> for
--   explanations of these fields.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
executionGet :: Accept accept -> BitMEXRequest ExecutionGet MimeNoContent [Execution] accept
data ExecutionGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /execution/tradeHistory
--   </pre>
--   
--   Get all balance-affecting executions. This includes each trade,
--   insurance charge, and settlement.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
executionGetTradeHistory :: Accept accept -> BitMEXRequest ExecutionGetTradeHistory MimeNoContent [Execution] accept
data ExecutionGetTradeHistory

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /funding
--   </pre>
--   
--   Get funding history.
fundingGet :: Accept accept -> BitMEXRequest FundingGet MimeNoContent [Funding] accept
data FundingGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /instrument
--   </pre>
--   
--   Get instruments.
--   
--   This returns all instruments and indices, including those that have
--   settled or are unlisted. Use this endpoint if you want to query for
--   individual instruments or use a complex filter. Use
--   `/instrument/active` to return active instruments, or use a filter
--   like `{"state": "Open"}`.
instrumentGet :: Accept accept -> BitMEXRequest InstrumentGet MimeNoContent [Instrument] accept
data InstrumentGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /instrument/active
--   </pre>
--   
--   Get all active instruments and instruments that have expired in
--   &lt;24hrs.
instrumentGetActive :: Accept accept -> BitMEXRequest InstrumentGetActive MimeNoContent [Instrument] accept
data InstrumentGetActive

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /instrument/activeAndIndices
--   </pre>
--   
--   Helper method. Gets all active instruments and all indices. This is a
--   join of the result of <i>indices and </i>active.
instrumentGetActiveAndIndices :: Accept accept -> BitMEXRequest InstrumentGetActiveAndIndices MimeNoContent [Instrument] accept
data InstrumentGetActiveAndIndices

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /instrument/activeIntervals
--   </pre>
--   
--   Return all active contract series and interval pairs.
--   
--   This endpoint is useful for determining which pairs are live. It
--   returns two arrays of strings. The first is intervals, such as
--   `["BVOL:daily", "BVOL:weekly", "XBU:daily", "XBU:monthly", ...]`.
--   These identifiers are usable in any query's <tt>symbol</tt> param. The
--   second array is the current resolution of these intervals. Results are
--   mapped at the same index.
instrumentGetActiveIntervals :: Accept accept -> BitMEXRequest InstrumentGetActiveIntervals MimeNoContent InstrumentInterval accept
data InstrumentGetActiveIntervals

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /instrument/compositeIndex
--   </pre>
--   
--   Show constituent parts of an index.
--   
--   Composite indices are built from multiple external price sources. Use
--   this endpoint to get the underlying prices of an index. For example,
--   send a <tt>symbol</tt> of `.XBT` to get the ticks and weights of the
--   constituent exchanges that build the ".XBT" index. A tick with
--   reference `"BMI"` and weight <tt>null</tt> is the composite index
--   tick.
instrumentGetCompositeIndex :: Accept accept -> BitMEXRequest InstrumentGetCompositeIndex MimeNoContent [IndexComposite] accept
data InstrumentGetCompositeIndex

-- | <i>Optional Param</i> "symbol" - The composite index symbol.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /instrument/indices
--   </pre>
--   
--   Get all price indices.
instrumentGetIndices :: Accept accept -> BitMEXRequest InstrumentGetIndices MimeNoContent [Instrument] accept
data InstrumentGetIndices

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /insurance
--   </pre>
--   
--   Get insurance fund history.
insuranceGet :: Accept accept -> BitMEXRequest InsuranceGet MimeNoContent [Insurance] accept
data InsuranceGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /leaderboard
--   </pre>
--   
--   Get current leaderboard.
leaderboardGet :: Accept accept -> BitMEXRequest LeaderboardGet MimeNoContent [Leaderboard] accept
data LeaderboardGet

-- | <i>Optional Param</i> "method" - Ranking type. Options: "notional",
--   "ROE"

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /liquidation
--   </pre>
--   
--   Get liquidation orders.
liquidationGet :: Accept accept -> BitMEXRequest LiquidationGet MimeNoContent [Liquidation] accept
data LiquidationGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /notification
--   </pre>
--   
--   Get your current notifications.
--   
--   This is an upcoming feature and currently does not return data.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
notificationGet :: Accept accept -> BitMEXRequest NotificationGet MimeNoContent [Notification] accept
data NotificationGet

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   PUT /order
--   </pre>
--   
--   Amend the quantity or price of an open order.
--   
--   Send an <tt>orderID</tt> or <tt>origClOrdID</tt> to identify the order
--   you wish to amend. Both order quantity and price can be amended. Only
--   one <tt>qty</tt> field can be used to amend. Use the
--   <tt>leavesQty</tt> field to specify how much of the order you wish to
--   remain open. This can be useful if you want to adjust your position's
--   delta by a certain amount, regardless of how much of the order has
--   already filled. Use the <tt>simpleOrderQty</tt> and
--   <tt>simpleLeavesQty</tt> fields to specify order size in Bitcoin,
--   rather than contracts. These fields will round up to the nearest
--   contract. Like order placement, amending can be done in bulk. Simply
--   send a request to `PUT <i>api</i>v1<i>order</i>bulk` with a JSON body
--   of the shape: `{"orders": [{...}, {...}]}`, each object containing the
--   fields used in this endpoint.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderAmend :: (Consumes OrderAmend contentType) => ContentType contentType -> Accept accept -> BitMEXRequest OrderAmend contentType Order accept
data OrderAmend

-- | <i>Optional Param</i> "orderID" - Order ID

-- | <i>Optional Param</i> "origClOrdID" - Client Order ID. See POST
--   /order.

-- | <i>Optional Param</i> "clOrdID" - Optional new Client Order ID,
--   requires <tt>origClOrdID</tt>.

-- | <i>Optional Param</i> "simpleOrderQty" - Optional order quantity in
--   units of the underlying instrument (i.e. Bitcoin).

-- | <i>Optional Param</i> "orderQty" - Optional order quantity in units of
--   the instrument (i.e. contracts).

-- | <i>Optional Param</i> "simpleLeavesQty" - Optional leaves quantity in
--   units of the underlying instrument (i.e. Bitcoin). Useful for amending
--   partially filled orders.

-- | <i>Optional Param</i> "leavesQty" - Optional leaves quantity in units
--   of the instrument (i.e. contracts). Useful for amending partially
--   filled orders.

-- | <i>Optional Param</i> "price" - Optional limit price for
--   <tt>Limit</tt>, <tt>StopLimit</tt>, and <tt>LimitIfTouched</tt>
--   orders.

-- | <i>Optional Param</i> "stopPx" - Optional trigger price for
--   <tt>Stop</tt>, <tt>StopLimit</tt>, <tt>MarketIfTouched</tt>, and
--   <tt>LimitIfTouched</tt> orders. Use a price below the current price
--   for stop-sell orders and buy-if-touched orders.

-- | <i>Optional Param</i> "pegOffsetValue" - Optional trailing offset from
--   the current price for <tt>Stop</tt>, <tt>StopLimit</tt>,
--   <tt>MarketIfTouched</tt>, and <tt>LimitIfTouched</tt> orders; use a
--   negative offset for stop-sell orders and buy-if-touched orders.
--   Optional offset from the peg price for <tt>Pegged</tt> orders.

-- | <i>Optional Param</i> "text" - Optional amend annotation. e.g. 'Adjust
--   skew'.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   PUT /order/bulk
--   </pre>
--   
--   Amend multiple orders for the same symbol.
--   
--   Similar to POST <i>amend, but with multiple orders.
--   `application</i>json` only. Ratelimited at 50%.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderAmendBulk :: (Consumes OrderAmendBulk contentType) => ContentType contentType -> Accept accept -> BitMEXRequest OrderAmendBulk contentType [Order] accept
data OrderAmendBulk

-- | <i>Optional Param</i> "orders" - An array of orders.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   DELETE /order
--   </pre>
--   
--   Cancel order(s). Send multiple order IDs to cancel in bulk.
--   
--   Either an orderID or a clOrdID must be provided.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderCancel :: (Consumes OrderCancel contentType) => ContentType contentType -> Accept accept -> BitMEXRequest OrderCancel contentType [Order] accept
data OrderCancel

-- | <i>Optional Param</i> "orderID" - Order ID(s).

-- | <i>Optional Param</i> "clOrdID" - Client Order ID(s). See POST /order.

-- | <i>Optional Param</i> "text" - Optional cancellation annotation. e.g.
--   'Spread Exceeded'.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   DELETE /order/all
--   </pre>
--   
--   Cancels all of your orders.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderCancelAll :: (Consumes OrderCancelAll contentType) => ContentType contentType -> Accept accept -> BitMEXRequest OrderCancelAll contentType Value accept
data OrderCancelAll

-- | <i>Optional Param</i> "symbol" - Optional symbol. If provided, only
--   cancels orders for that symbol.

-- | <i>Optional Param</i> "filter" - Optional filter for cancellation. Use
--   to only cancel some orders, e.g. `{"side": "Buy"}`.

-- | <i>Optional Param</i> "text" - Optional cancellation annotation. e.g.
--   'Spread Exceeded'

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /order/cancelAllAfter
--   </pre>
--   
--   Automatically cancel all your orders after a specified timeout.
--   
--   Useful as a dead-man's switch to ensure your orders are canceled in
--   case of an outage. If called repeatedly, the existing offset will be
--   canceled and a new one will be inserted in its place. Example usage:
--   call this route at 15s intervals with an offset of 60000 (60s). If
--   this route is not called within 60 seconds, all your orders will be
--   automatically canceled. This is also available via <a>WebSocket</a>.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderCancelAllAfter :: (Consumes OrderCancelAllAfter contentType) => ContentType contentType -> Accept accept -> Timeout -> BitMEXRequest OrderCancelAllAfter contentType Value accept
data OrderCancelAllAfter

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /order/closePosition
--   </pre>
--   
--   Close a position. [Deprecated, use POST /order with execInst:
--   <tt>Close</tt>]
--   
--   If no <tt>price</tt> is specified, a market order will be submitted to
--   close the whole of your position. This will also close all other open
--   orders in this symbol.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderClosePosition :: (Consumes OrderClosePosition contentType) => ContentType contentType -> Accept accept -> Symbol -> BitMEXRequest OrderClosePosition contentType Order accept
data OrderClosePosition

-- | <i>Optional Param</i> "price" - Optional limit price.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /order
--   </pre>
--   
--   Get your orders.
--   
--   To get open orders only, send {"open": true} in the filter param. See
--   <a>href="http://www.onixs.biz/fix-dictionary/5.0.SP2/msgType_D_68.html"</a>the
--   FIX Spec<a>/a</a> for explanations of these fields.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderGetOrders :: Accept accept -> BitMEXRequest OrderGetOrders MimeNoContent [Order] accept
data OrderGetOrders

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /order
--   </pre>
--   
--   Create a new order.
--   
--   #############!<i>Order</i>Order_newBulk) if you need to place multiple
--   orders at the same time. Bulk orders require fewer risk checks in the
--   trading engine and thus are ratelimited at **1<i>10** the normal rate.
--   You can also improve your reactivity to market movements while staying
--   under your ratelimit by using the [Amend](#!</i>Order<i>Order_amend)
--   and [Amend Bulk](#!</i>Order<i>Order_amendBulk) endpoints. This allows
--   you to stay in the market and avoids the cancel</i>replace cycle. ####
--   Tracking Your Orders If you want to keep track of order IDs yourself,
--   set a unique <tt>clOrdID</tt> per order. This <tt>clOrdID</tt> will
--   come back as a property on the order and any related executions
--   (including on the WebSocket), and can be used to get or cancel the
--   order. Max length is 36 characters.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderNew :: (Consumes OrderNew contentType) => ContentType contentType -> Accept accept -> Symbol -> BitMEXRequest OrderNew contentType Order accept
data OrderNew

-- | <i>Optional Param</i> "side" - Order side. Valid options: Buy, Sell.
--   Defaults to <tt>Buy</tt> unless <tt>orderQty</tt> or
--   <tt>simpleOrderQty</tt> is negative.

-- | <i>Optional Param</i> "simpleOrderQty" - Order quantity in units of
--   the underlying instrument (i.e. Bitcoin).

-- | <i>Optional Param</i> "quantity" - Deprecated: use <tt>orderQty</tt>.

-- | <i>Optional Param</i> "orderQty" - Order quantity in units of the
--   instrument (i.e. contracts).

-- | <i>Optional Param</i> "price" - Optional limit price for
--   <tt>Limit</tt>, <tt>StopLimit</tt>, and <tt>LimitIfTouched</tt>
--   orders.

-- | <i>Optional Param</i> "displayQty" - Optional quantity to display in
--   the book. Use 0 for a fully hidden order.

-- | <i>Optional Param</i> "stopPrice" - Deprecated: use <tt>stopPx</tt>.

-- | <i>Optional Param</i> "stopPx" - Optional trigger price for
--   <tt>Stop</tt>, <tt>StopLimit</tt>, <tt>MarketIfTouched</tt>, and
--   <tt>LimitIfTouched</tt> orders. Use a price below the current price
--   for stop-sell orders and buy-if-touched orders. Use <tt>execInst</tt>
--   of <tt>MarkPrice</tt> or <tt>LastPrice</tt> to define the current
--   price used for triggering.

-- | <i>Optional Param</i> "clOrdID" - Optional Client Order ID. This
--   clOrdID will come back on the order and any related executions.

-- | <i>Optional Param</i> "clOrdLinkID" - Optional Client Order Link ID
--   for contingent orders.

-- | <i>Optional Param</i> "pegOffsetValue" - Optional trailing offset from
--   the current price for <tt>Stop</tt>, <tt>StopLimit</tt>,
--   <tt>MarketIfTouched</tt>, and <tt>LimitIfTouched</tt> orders; use a
--   negative offset for stop-sell orders and buy-if-touched orders.
--   Optional offset from the peg price for <tt>Pegged</tt> orders.

-- | <i>Optional Param</i> "pegPriceType" - Optional peg price type. Valid
--   options: LastPeg, MidPricePeg, MarketPeg, PrimaryPeg, TrailingStopPeg.

-- | <i>Optional Param</i> "type" - Deprecated: use <tt>ordType</tt>.

-- | <i>Optional Param</i> "ordType" - Order type. Valid options: Market,
--   Limit, Stop, StopLimit, MarketIfTouched, LimitIfTouched,
--   MarketWithLeftOverAsLimit, Pegged. Defaults to <tt>Limit</tt> when
--   <tt>price</tt> is specified. Defaults to <tt>Stop</tt> when
--   <tt>stopPx</tt> is specified. Defaults to <tt>StopLimit</tt> when
--   <tt>price</tt> and <tt>stopPx</tt> are specified.

-- | <i>Optional Param</i> "timeInForce" - Time in force. Valid options:
--   Day, GoodTillCancel, ImmediateOrCancel, FillOrKill. Defaults to
--   <tt>GoodTillCancel</tt> for <tt>Limit</tt>, <tt>StopLimit</tt>,
--   <tt>LimitIfTouched</tt>, and <tt>MarketWithLeftOverAsLimit</tt>
--   orders.

-- | <i>Optional Param</i> "execInst" - Optional execution instructions.
--   Valid options: ParticipateDoNotInitiate, AllOrNone, MarkPrice,
--   IndexPrice, LastPrice, Close, ReduceOnly, Fixed. <tt>AllOrNone</tt>
--   instruction requires <tt>displayQty</tt> to be 0. <tt>MarkPrice</tt>,
--   <tt>IndexPrice</tt> or <tt>LastPrice</tt> instruction valid for
--   <tt>Stop</tt>, <tt>StopLimit</tt>, <tt>MarketIfTouched</tt>, and
--   <tt>LimitIfTouched</tt> orders.

-- | <i>Optional Param</i> "contingencyType" - Optional contingency type
--   for use with <tt>clOrdLinkID</tt>. Valid options: OneCancelsTheOther,
--   OneTriggersTheOther, OneUpdatesTheOtherAbsolute,
--   OneUpdatesTheOtherProportional.

-- | <i>Optional Param</i> "text" - Optional order annotation. e.g. 'Take
--   profit'.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /order/bulk
--   </pre>
--   
--   Create multiple new orders for the same symbol.
--   
--   This endpoint is used for placing bulk orders. Valid order types are
--   Market, Limit, Stop, StopLimit, MarketIfTouched, LimitIfTouched,
--   MarketWithLeftOverAsLimit, and Pegged. Each individual order object in
--   the array should have the same properties as an individual POST
--   <i>order call. This endpoint is much faster for getting many orders
--   into the book at once. Because it reduces load on BitMEX systems, this
--   endpoint is ratelimited at `ceil(0.1 * orders)`. Submitting 10 orders
--   via a bulk order call will only count as 1 request, 15 as 2, 32 as 4,
--   and so on. For now, only `application</i>json` is supported on this
--   endpoint.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
orderNewBulk :: (Consumes OrderNewBulk contentType) => ContentType contentType -> Accept accept -> BitMEXRequest OrderNewBulk contentType [Order] accept
data OrderNewBulk

-- | <i>Optional Param</i> "orders" - An array of orders.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /orderBook
--   </pre>
--   
--   Get current orderbook [deprecated, use <i>orderBook</i>L2].
orderBookGet :: Accept accept -> Symbol -> BitMEXRequest OrderBookGet MimeNoContent [OrderBook] accept
data OrderBookGet

-- | <i>Optional Param</i> "depth" - Orderbook depth.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /orderBook/L2
--   </pre>
--   
--   Get current orderbook in vertical format.
orderBookGetL2 :: Accept accept -> Symbol -> BitMEXRequest OrderBookGetL2 MimeNoContent [OrderBookL2] accept
data OrderBookGetL2

-- | <i>Optional Param</i> "depth" - Orderbook depth per side. Send 0 for
--   full depth.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /position
--   </pre>
--   
--   Get your positions.
--   
--   See
--   <a>href="http://www.onixs.biz/fix-dictionary/5.0.SP2/msgType_AP_6580.html"</a>the
--   FIX Spec<a>/a</a> for explanations of these fields.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
positionGet :: Accept accept -> BitMEXRequest PositionGet MimeNoContent [Position] accept
data PositionGet

-- | <i>Optional Param</i> "filter" - Table filter. For example, send
--   {"symbol": "XBTUSD"}.

-- | <i>Optional Param</i> "columns" - Which columns to fetch. For example,
--   send ["columnName"].

-- | <i>Optional Param</i> "count" - Number of rows to fetch.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /position/isolate
--   </pre>
--   
--   Enable isolated margin or cross margin per-position.
--   
--   Users can switch isolate margin per-position. This function allows
--   switching margin isolation (aka fixed margin) on and off.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
positionIsolateMargin :: (Consumes PositionIsolateMargin contentType) => ContentType contentType -> Accept accept -> Symbol -> BitMEXRequest PositionIsolateMargin contentType Position accept
data PositionIsolateMargin

-- | <i>Optional Param</i> "enabled" - True for isolated margin, false for
--   cross margin.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /position/transferMargin
--   </pre>
--   
--   Transfer equity in or out of a position.
--   
--   When margin is isolated on a position, use this function to add or
--   remove margin from the position. Note that you cannot remove margin
--   below the initial margin threshold.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
positionTransferIsolatedMargin :: (Consumes PositionTransferIsolatedMargin contentType) => ContentType contentType -> Accept accept -> Symbol -> Amount -> BitMEXRequest PositionTransferIsolatedMargin contentType Position accept
data PositionTransferIsolatedMargin

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /position/leverage
--   </pre>
--   
--   Choose leverage for a position.
--   
--   Users can choose an isolated leverage. This will automatically enable
--   isolated margin.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
positionUpdateLeverage :: (Consumes PositionUpdateLeverage contentType) => ContentType contentType -> Accept accept -> Symbol -> Leverage -> BitMEXRequest PositionUpdateLeverage contentType Position accept
data PositionUpdateLeverage

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /position/riskLimit
--   </pre>
--   
--   Update your risk limit.
--   
--   Risk Limits limit the size of positions you can trade at various
--   margin levels. Larger positions require more margin. Please see the
--   Risk Limit documentation for more details.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
positionUpdateRiskLimit :: (Consumes PositionUpdateRiskLimit contentType) => ContentType contentType -> Accept accept -> Symbol -> RiskLimit -> BitMEXRequest PositionUpdateRiskLimit contentType Position accept
data PositionUpdateRiskLimit

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /quote
--   </pre>
--   
--   Get Quotes.
quoteGet :: Accept accept -> BitMEXRequest QuoteGet MimeNoContent [Quote] accept
data QuoteGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /quote/bucketed
--   </pre>
--   
--   Get previous quotes in time buckets.
quoteGetBucketed :: Accept accept -> BitMEXRequest QuoteGetBucketed MimeNoContent [Quote] accept
data QuoteGetBucketed

-- | <i>Optional Param</i> "binSize" - Time interval to bucket by.
--   Available options: [1m,5m,1h,1d].

-- | <i>Optional Param</i> "partial" - If true, will send in-progress
--   (incomplete) bins for the current time period.

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /schema
--   </pre>
--   
--   Get model schemata for data objects returned by this API.
schemaGet :: Accept accept -> BitMEXRequest SchemaGet MimeNoContent Value accept
data SchemaGet

-- | <i>Optional Param</i> "model" - Optional model filter. If omitted,
--   will return all models.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /schema/websocketHelp
--   </pre>
--   
--   Returns help text &amp; subject list for websocket usage.
schemaWebsocketHelp :: Accept accept -> BitMEXRequest SchemaWebsocketHelp MimeNoContent Value accept
data SchemaWebsocketHelp

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /settlement
--   </pre>
--   
--   Get settlement history.
settlementGet :: Accept accept -> BitMEXRequest SettlementGet MimeNoContent [Settlement] accept
data SettlementGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /stats
--   </pre>
--   
--   Get exchange-wide and per-series turnover and volume statistics.
statsGet :: Accept accept -> BitMEXRequest StatsGet MimeNoContent [Stats] accept
data StatsGet

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /stats/history
--   </pre>
--   
--   Get historical exchange-wide and per-series turnover and volume
--   statistics.
statsHistory2 :: Accept accept -> BitMEXRequest StatsHistory2 MimeNoContent [StatsHistory] accept
data StatsHistory2

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /stats/historyUSD
--   </pre>
--   
--   Get a summary of exchange statistics in USD.
statsHistoryUSD :: Accept accept -> BitMEXRequest StatsHistoryUSD MimeNoContent [StatsUSD] accept
data StatsHistoryUSD

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /trade
--   </pre>
--   
--   Get Trades.
--   
--   Please note that indices (symbols starting with <a>.</a>) post trades
--   at intervals to the trade feed. These have a <tt>size</tt> of 0 and
--   are used only to indicate a changing price. See <a>the FIX Spec</a>
--   for explanations of these fields.
tradeGet :: Accept accept -> BitMEXRequest TradeGet MimeNoContent [Trade] accept
data TradeGet

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /trade/bucketed
--   </pre>
--   
--   Get previous trades in time buckets.
tradeGetBucketed :: Accept accept -> BitMEXRequest TradeGetBucketed MimeNoContent [TradeBin] accept
data TradeGetBucketed

-- | <i>Optional Param</i> "binSize" - Time interval to bucket by.
--   Available options: [1m,5m,1h,1d].

-- | <i>Optional Param</i> "partial" - If true, will send in-progress
--   (incomplete) bins for the current time period.

-- | <i>Optional Param</i> "symbol" - Instrument symbol. Send a bare series
--   (e.g. XBU) to get data for the nearest expiring contract in that
--   series. You can also send a timeframe, e.g. `XBU:monthly`. Timeframes
--   are <tt>daily</tt>, <tt>weekly</tt>, <tt>monthly</tt>,
--   <tt>quarterly</tt>, and <tt>biquarterly</tt>.

-- | <i>Optional Param</i> "filter" - Generic table filter. Send JSON
--   key<i>value pairs, such as `{"key": "value"}`. You can key on
--   individual fields, and do more advanced querying on timestamps. See
--   the [Timestamp
--   Docs](https:</i><i>www.bitmex.com</i>app/restAPI#timestamp-filters)
--   for more details.

-- | <i>Optional Param</i> "columns" - Array of column names to fetch. If
--   omitted, will return all columns. Note that this method will always
--   return item keys, even when not specified, so you may receive more
--   columns that you expect.

-- | <i>Optional Param</i> "count" - Number of results to fetch.

-- | <i>Optional Param</i> "start" - Starting point for results.

-- | <i>Optional Param</i> "reverse" - If true, will sort results newest
--   first.

-- | <i>Optional Param</i> "startTime" - Starting date filter for results.

-- | <i>Optional Param</i> "endTime" - Ending date filter for results.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/cancelWithdrawal
--   </pre>
--   
--   Cancel a withdrawal.
userCancelWithdrawal :: (Consumes UserCancelWithdrawal contentType) => ContentType contentType -> Accept accept -> Token -> BitMEXRequest UserCancelWithdrawal contentType Transaction accept
data UserCancelWithdrawal

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/checkReferralCode
--   </pre>
--   
--   Check if a referral code is valid.
--   
--   If the code is valid, responds with the referral code's discount (e.g.
--   `0.1` for 10%). Otherwise, will return a 404.
userCheckReferralCode :: Accept accept -> BitMEXRequest UserCheckReferralCode MimeNoContent Double accept
data UserCheckReferralCode

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/confirmEmail
--   </pre>
--   
--   Confirm your email address with a token.
userConfirm :: (Consumes UserConfirm contentType) => ContentType contentType -> Accept accept -> Token -> BitMEXRequest UserConfirm contentType AccessToken accept
data UserConfirm

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/confirmEnableTFA
--   </pre>
--   
--   Confirm two-factor auth for this account. If using a Yubikey, simply
--   send a token to this endpoint.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userConfirmEnableTFA :: (Consumes UserConfirmEnableTFA contentType) => ContentType contentType -> Accept accept -> Token -> BitMEXRequest UserConfirmEnableTFA contentType Bool accept
data UserConfirmEnableTFA

-- | <i>Optional Param</i> "type" - Two-factor auth type. Supported types:
--   <tt>GA</tt> (Google Authenticator), <tt>Yubikey</tt>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/confirmWithdrawal
--   </pre>
--   
--   Confirm a withdrawal.
userConfirmWithdrawal :: (Consumes UserConfirmWithdrawal contentType) => ContentType contentType -> Accept accept -> Token -> BitMEXRequest UserConfirmWithdrawal contentType Transaction accept
data UserConfirmWithdrawal

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/disableTFA
--   </pre>
--   
--   Disable two-factor auth for this account.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userDisableTFA :: (Consumes UserDisableTFA contentType) => ContentType contentType -> Accept accept -> Token -> BitMEXRequest UserDisableTFA contentType Bool accept
data UserDisableTFA

-- | <i>Optional Param</i> "type" - Two-factor auth type. Supported types:
--   <tt>GA</tt> (Google Authenticator)

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user
--   </pre>
--   
--   Get your user model.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGet :: Accept accept -> BitMEXRequest UserGet MimeNoContent User accept
data UserGet

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/affiliateStatus
--   </pre>
--   
--   Get your current affiliate/referral status.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetAffiliateStatus :: Accept accept -> BitMEXRequest UserGetAffiliateStatus MimeNoContent Affiliate accept
data UserGetAffiliateStatus

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/commission
--   </pre>
--   
--   Get your account's commission status.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetCommission :: Accept accept -> BitMEXRequest UserGetCommission MimeNoContent [UserCommission] accept
data UserGetCommission

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/depositAddress
--   </pre>
--   
--   Get a deposit address.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetDepositAddress :: Accept accept -> BitMEXRequest UserGetDepositAddress MimeNoContent Text accept
data UserGetDepositAddress

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/margin
--   </pre>
--   
--   Get your account's margin status. Send a currency of "all" to receive
--   an array of all supported currencies.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetMargin :: Accept accept -> BitMEXRequest UserGetMargin MimeNoContent Margin accept
data UserGetMargin

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/wallet
--   </pre>
--   
--   Get your current wallet information.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetWallet :: Accept accept -> BitMEXRequest UserGetWallet MimeNoContent Wallet accept
data UserGetWallet

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/walletHistory
--   </pre>
--   
--   Get a history of all of your wallet transactions (deposits,
--   withdrawals, PNL).
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetWalletHistory :: Accept accept -> BitMEXRequest UserGetWalletHistory MimeNoContent [Transaction] accept
data UserGetWalletHistory

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/walletSummary
--   </pre>
--   
--   Get a summary of all of your wallet transactions (deposits,
--   withdrawals, PNL).
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userGetWalletSummary :: Accept accept -> BitMEXRequest UserGetWalletSummary MimeNoContent [Transaction] accept
data UserGetWalletSummary

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/logout
--   </pre>
--   
--   Log out of BitMEX.
--   
--   Note: Has <a>Produces</a> instances, but no response schema
userLogout :: Accept accept -> BitMEXRequest UserLogout MimeNoContent res accept
data UserLogout

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/logoutAll
--   </pre>
--   
--   Log all systems out of BitMEX. This will revoke all of your account's
--   access tokens, logging you out on all devices.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userLogoutAll :: Accept accept -> BitMEXRequest UserLogoutAll MimeNoContent Double accept
data UserLogoutAll

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   GET /user/minWithdrawalFee
--   </pre>
--   
--   Get the minimum withdrawal fee for a currency.
--   
--   This is changed based on network conditions to ensure timely
--   withdrawals. During network congestion, this may be high. The fee is
--   returned in the same currency.
userMinWithdrawalFee :: Accept accept -> BitMEXRequest UserMinWithdrawalFee MimeNoContent Value accept
data UserMinWithdrawalFee

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/requestEnableTFA
--   </pre>
--   
--   Get secret key for setting up two-factor auth.
--   
--   Use /confirmEnableTFA directly for Yubikeys. This fails if TFA is
--   already enabled.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userRequestEnableTFA :: (Consumes UserRequestEnableTFA contentType) => ContentType contentType -> Accept accept -> BitMEXRequest UserRequestEnableTFA contentType Bool accept
data UserRequestEnableTFA

-- | <i>Optional Param</i> "type" - Two-factor auth type. Supported types:
--   <tt>GA</tt> (Google Authenticator)

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/requestWithdrawal
--   </pre>
--   
--   Request a withdrawal to an external wallet.
--   
--   This will send a confirmation email to the email address on record,
--   unless requested via an API Key with the <tt>withdraw</tt> permission.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userRequestWithdrawal :: (Consumes UserRequestWithdrawal contentType) => ContentType contentType -> Accept accept -> Currency -> Amount -> Address -> BitMEXRequest UserRequestWithdrawal contentType Transaction accept
data UserRequestWithdrawal

-- | <i>Optional Param</i> "otpToken" - 2FA token. Required if 2FA is
--   enabled on your account.

-- | <i>Optional Param</i> "fee" - Network fee for Bitcoin withdrawals. If
--   not specified, a default value will be calculated based on Bitcoin
--   network conditions. You will have a chance to confirm this via email.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   POST /user/preferences
--   </pre>
--   
--   Save user preferences.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userSavePreferences :: (Consumes UserSavePreferences contentType) => ContentType contentType -> Accept accept -> Prefs -> BitMEXRequest UserSavePreferences contentType User accept
data UserSavePreferences

-- | <i>Optional Param</i> "overwrite" - If true, will overwrite all
--   existing preferences.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>

-- | <pre>
--   PUT /user
--   </pre>
--   
--   Update your password, name, and other attributes.
--   
--   AuthMethod: <a>AuthApiKeyApiKey</a>, <a>AuthApiKeyApiNonce</a>,
--   <a>AuthApiKeyApiSignature</a>
userUpdate :: (Consumes UserUpdate contentType) => ContentType contentType -> Accept accept -> BitMEXRequest UserUpdate contentType User accept
data UserUpdate

-- | <i>Optional Param</i> "username" - Username can only be set once. To
--   reset, email support.

-- | <i>Optional Param</i> "country" - Country of residence.

-- | <i>Optional Param</i> "pgpPubKey" - PGP Public Key. If specified,
--   automated emails will be sentwith this key.

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/x-www-form-urlencoded
--   </pre>

-- | <pre>
--   application/json
--   </pre>

-- | <pre>
--   application/xml
--   </pre>

-- | <pre>
--   text/xml
--   </pre>

-- | <pre>
--   application/javascript
--   </pre>

-- | <pre>
--   text/javascript
--   </pre>
newtype Account
Account :: Double -> Account
[unAccount] :: Account -> Double
newtype Address
Address :: Text -> Address
[unAddress] :: Address -> Text
newtype Amount
Amount :: Double -> Amount
[unAmount] :: Amount -> Double
newtype ApiKeyId
ApiKeyId :: Text -> ApiKeyId
[unApiKeyId] :: ApiKeyId -> Text
newtype BinSize
BinSize :: Text -> BinSize
[unBinSize] :: BinSize -> Text
newtype ChannelId
ChannelId :: Double -> ChannelId
[unChannelId] :: ChannelId -> Double
newtype Cidr
Cidr :: Text -> Cidr
[unCidr] :: Cidr -> Text
newtype ClOrdId
ClOrdId :: Text -> ClOrdId
[unClOrdId] :: ClOrdId -> Text
newtype ClOrdLinkId
ClOrdLinkId :: Text -> ClOrdLinkId
[unClOrdLinkId] :: ClOrdLinkId -> Text
newtype Columns
Columns :: Text -> Columns
[unColumns] :: Columns -> Text
newtype ContingencyType
ContingencyType :: Text -> ContingencyType
[unContingencyType] :: ContingencyType -> Text
newtype Count
Count :: Double -> Count
[unCount] :: Count -> Double
newtype Country
Country :: Text -> Country
[unCountry] :: Country -> Text
newtype Currency
Currency :: Text -> Currency
[unCurrency] :: Currency -> Text
newtype Depth
Depth :: Double -> Depth
[unDepth] :: Depth -> Double
newtype DisplayQty
DisplayQty :: Double -> DisplayQty
[unDisplayQty] :: DisplayQty -> Double
newtype Enabled
Enabled :: Bool -> Enabled
[unEnabled] :: Enabled -> Bool
newtype EndTime
EndTime :: DateTime -> EndTime
[unEndTime] :: EndTime -> DateTime
newtype ExecInst
ExecInst :: Text -> ExecInst
[unExecInst] :: ExecInst -> Text
newtype Fee
Fee :: Double -> Fee
[unFee] :: Fee -> Double
newtype Filter
Filter :: Text -> Filter
[unFilter] :: Filter -> Text
newtype Firstname
Firstname :: Text -> Firstname
[unFirstname] :: Firstname -> Text
newtype Lastname
Lastname :: Text -> Lastname
[unLastname] :: Lastname -> Text
newtype LeavesQty
LeavesQty :: Double -> LeavesQty
[unLeavesQty] :: LeavesQty -> Double
newtype Leverage
Leverage :: Double -> Leverage
[unLeverage] :: Leverage -> Double
newtype Message
Message :: Text -> Message
[unMessage] :: Message -> Text
newtype Method
Method :: Text -> Method
[unMethod] :: Method -> Text
newtype Model
Model :: Text -> Model
[unModel] :: Model -> Text
newtype Name
Name :: Text -> Name
[unName] :: Name -> Text
newtype NewPassword
NewPassword :: Text -> NewPassword
[unNewPassword] :: NewPassword -> Text
newtype NewPasswordConfirm
NewPasswordConfirm :: Text -> NewPasswordConfirm
[unNewPasswordConfirm] :: NewPasswordConfirm -> Text
newtype OldPassword
OldPassword :: Text -> OldPassword
[unOldPassword] :: OldPassword -> Text
newtype OrdType
OrdType :: Text -> OrdType
[unOrdType] :: OrdType -> Text
newtype OrderId
OrderId :: Text -> OrderId
[unOrderId] :: OrderId -> Text
newtype OrderQty
OrderQty :: Double -> OrderQty
[unOrderQty] :: OrderQty -> Double
newtype Orders
Orders :: Text -> Orders
[unOrders] :: Orders -> Text
newtype OrigClOrdId
OrigClOrdId :: Text -> OrigClOrdId
[unOrigClOrdId] :: OrigClOrdId -> Text
newtype OtpToken
OtpToken :: Text -> OtpToken
[unOtpToken] :: OtpToken -> Text
newtype Overwrite
Overwrite :: Bool -> Overwrite
[unOverwrite] :: Overwrite -> Bool
newtype ParamText
ParamText :: Text -> ParamText
[unParamText] :: ParamText -> Text
newtype ParamType
ParamType :: Text -> ParamType
[unParamType] :: ParamType -> Text
newtype Partial
Partial :: Bool -> Partial
[unPartial] :: Partial -> Bool
newtype PegOffsetValue
PegOffsetValue :: Double -> PegOffsetValue
[unPegOffsetValue] :: PegOffsetValue -> Double
newtype PegPriceType
PegPriceType :: Text -> PegPriceType
[unPegPriceType] :: PegPriceType -> Text
newtype Permissions
Permissions :: Text -> Permissions
[unPermissions] :: Permissions -> Text
newtype PgpPubKey
PgpPubKey :: Text -> PgpPubKey
[unPgpPubKey] :: PgpPubKey -> Text
newtype Prefs
Prefs :: Text -> Prefs
[unPrefs] :: Prefs -> Text
newtype Price
Price :: Double -> Price
[unPrice] :: Price -> Double
newtype Quantity
Quantity :: Double -> Quantity
[unQuantity] :: Quantity -> Double
newtype ReferralCode
ReferralCode :: Text -> ReferralCode
[unReferralCode] :: ReferralCode -> Text
newtype Reverse
Reverse :: Bool -> Reverse
[unReverse] :: Reverse -> Bool
newtype RiskLimit
RiskLimit :: Double -> RiskLimit
[unRiskLimit] :: RiskLimit -> Double
newtype Side
Side :: Text -> Side
[unSide] :: Side -> Text
newtype SimpleLeavesQty
SimpleLeavesQty :: Double -> SimpleLeavesQty
[unSimpleLeavesQty] :: SimpleLeavesQty -> Double
newtype SimpleOrderQty
SimpleOrderQty :: Double -> SimpleOrderQty
[unSimpleOrderQty] :: SimpleOrderQty -> Double
newtype Start
Start :: Double -> Start
[unStart] :: Start -> Double
newtype StartTime
StartTime :: DateTime -> StartTime
[unStartTime] :: StartTime -> DateTime
newtype StopPrice
StopPrice :: Double -> StopPrice
[unStopPrice] :: StopPrice -> Double
newtype StopPx
StopPx :: Double -> StopPx
[unStopPx] :: StopPx -> Double
newtype Symbol
Symbol :: Text -> Symbol
[unSymbol] :: Symbol -> Text
newtype TimeInForce
TimeInForce :: Text -> TimeInForce
[unTimeInForce] :: TimeInForce -> Text
newtype Timeout
Timeout :: Double -> Timeout
[unTimeout] :: Timeout -> Double
newtype Token
Token :: Text -> Token
[unToken] :: Token -> Text
newtype Username
Username :: Text -> Username
[unUsername] :: Username -> Text
data AuthApiKeyApiKey

-- | secret
AuthApiKeyApiKey :: Text -> AuthApiKeyApiKey
data AuthApiKeyApiNonce

-- | secret
AuthApiKeyApiNonce :: Text -> AuthApiKeyApiNonce
data AuthApiKeyApiSignature

-- | secret
AuthApiKeyApiSignature :: Text -> AuthApiKeyApiSignature
data MimeJavascript
MimeJavascript :: MimeJavascript

-- | <pre>
--   application/javascript
--   </pre>
data MimeTextjavascript
MimeTextjavascript :: MimeTextjavascript

-- | <pre>
--   text/javascript
--   </pre>
data MimeTextxml
MimeTextxml :: MimeTextxml

-- | <pre>
--   text/xml
--   </pre>
instance GHC.Show.Show BitMEX.API.AuthApiKeyApiSignature
instance GHC.Classes.Eq BitMEX.API.AuthApiKeyApiSignature
instance GHC.Show.Show BitMEX.API.AuthApiKeyApiNonce
instance GHC.Classes.Eq BitMEX.API.AuthApiKeyApiNonce
instance GHC.Show.Show BitMEX.API.AuthApiKeyApiKey
instance GHC.Classes.Eq BitMEX.API.AuthApiKeyApiKey
instance GHC.Show.Show BitMEX.API.Username
instance GHC.Classes.Eq BitMEX.API.Username
instance GHC.Show.Show BitMEX.API.Token
instance GHC.Classes.Eq BitMEX.API.Token
instance GHC.Show.Show BitMEX.API.Timeout
instance GHC.Classes.Eq BitMEX.API.Timeout
instance GHC.Show.Show BitMEX.API.TimeInForce
instance GHC.Classes.Eq BitMEX.API.TimeInForce
instance GHC.Show.Show BitMEX.API.Symbol
instance GHC.Classes.Eq BitMEX.API.Symbol
instance GHC.Show.Show BitMEX.API.StopPx
instance GHC.Classes.Eq BitMEX.API.StopPx
instance GHC.Show.Show BitMEX.API.StopPrice
instance GHC.Classes.Eq BitMEX.API.StopPrice
instance GHC.Show.Show BitMEX.API.StartTime
instance GHC.Classes.Eq BitMEX.API.StartTime
instance GHC.Show.Show BitMEX.API.Start
instance GHC.Classes.Eq BitMEX.API.Start
instance GHC.Show.Show BitMEX.API.SimpleOrderQty
instance GHC.Classes.Eq BitMEX.API.SimpleOrderQty
instance GHC.Show.Show BitMEX.API.SimpleLeavesQty
instance GHC.Classes.Eq BitMEX.API.SimpleLeavesQty
instance GHC.Show.Show BitMEX.API.Side
instance GHC.Classes.Eq BitMEX.API.Side
instance GHC.Show.Show BitMEX.API.RiskLimit
instance GHC.Classes.Eq BitMEX.API.RiskLimit
instance GHC.Show.Show BitMEX.API.Reverse
instance GHC.Classes.Eq BitMEX.API.Reverse
instance GHC.Show.Show BitMEX.API.ReferralCode
instance GHC.Classes.Eq BitMEX.API.ReferralCode
instance GHC.Show.Show BitMEX.API.Quantity
instance GHC.Classes.Eq BitMEX.API.Quantity
instance GHC.Show.Show BitMEX.API.Price
instance GHC.Classes.Eq BitMEX.API.Price
instance GHC.Show.Show BitMEX.API.Prefs
instance GHC.Classes.Eq BitMEX.API.Prefs
instance GHC.Show.Show BitMEX.API.PgpPubKey
instance GHC.Classes.Eq BitMEX.API.PgpPubKey
instance GHC.Show.Show BitMEX.API.Permissions
instance GHC.Classes.Eq BitMEX.API.Permissions
instance GHC.Show.Show BitMEX.API.PegPriceType
instance GHC.Classes.Eq BitMEX.API.PegPriceType
instance GHC.Show.Show BitMEX.API.PegOffsetValue
instance GHC.Classes.Eq BitMEX.API.PegOffsetValue
instance GHC.Show.Show BitMEX.API.Partial
instance GHC.Classes.Eq BitMEX.API.Partial
instance GHC.Show.Show BitMEX.API.ParamType
instance GHC.Classes.Eq BitMEX.API.ParamType
instance GHC.Show.Show BitMEX.API.ParamText
instance GHC.Classes.Eq BitMEX.API.ParamText
instance GHC.Show.Show BitMEX.API.Overwrite
instance GHC.Classes.Eq BitMEX.API.Overwrite
instance GHC.Show.Show BitMEX.API.OtpToken
instance GHC.Classes.Eq BitMEX.API.OtpToken
instance GHC.Show.Show BitMEX.API.OrigClOrdId
instance GHC.Classes.Eq BitMEX.API.OrigClOrdId
instance GHC.Show.Show BitMEX.API.Orders
instance GHC.Classes.Eq BitMEX.API.Orders
instance GHC.Show.Show BitMEX.API.OrderQty
instance GHC.Classes.Eq BitMEX.API.OrderQty
instance GHC.Show.Show BitMEX.API.OrderId
instance GHC.Classes.Eq BitMEX.API.OrderId
instance GHC.Show.Show BitMEX.API.OrdType
instance GHC.Classes.Eq BitMEX.API.OrdType
instance GHC.Show.Show BitMEX.API.OldPassword
instance GHC.Classes.Eq BitMEX.API.OldPassword
instance GHC.Show.Show BitMEX.API.NewPasswordConfirm
instance GHC.Classes.Eq BitMEX.API.NewPasswordConfirm
instance GHC.Show.Show BitMEX.API.NewPassword
instance GHC.Classes.Eq BitMEX.API.NewPassword
instance GHC.Show.Show BitMEX.API.Name
instance GHC.Classes.Eq BitMEX.API.Name
instance GHC.Show.Show BitMEX.API.Model
instance GHC.Classes.Eq BitMEX.API.Model
instance GHC.Show.Show BitMEX.API.Method
instance GHC.Classes.Eq BitMEX.API.Method
instance GHC.Show.Show BitMEX.API.Message
instance GHC.Classes.Eq BitMEX.API.Message
instance GHC.Show.Show BitMEX.API.Leverage
instance GHC.Classes.Eq BitMEX.API.Leverage
instance GHC.Show.Show BitMEX.API.LeavesQty
instance GHC.Classes.Eq BitMEX.API.LeavesQty
instance GHC.Show.Show BitMEX.API.Lastname
instance GHC.Classes.Eq BitMEX.API.Lastname
instance GHC.Show.Show BitMEX.API.Firstname
instance GHC.Classes.Eq BitMEX.API.Firstname
instance GHC.Show.Show BitMEX.API.Filter
instance GHC.Classes.Eq BitMEX.API.Filter
instance GHC.Show.Show BitMEX.API.Fee
instance GHC.Classes.Eq BitMEX.API.Fee
instance GHC.Show.Show BitMEX.API.ExecInst
instance GHC.Classes.Eq BitMEX.API.ExecInst
instance GHC.Show.Show BitMEX.API.EndTime
instance GHC.Classes.Eq BitMEX.API.EndTime
instance GHC.Show.Show BitMEX.API.Enabled
instance GHC.Classes.Eq BitMEX.API.Enabled
instance GHC.Show.Show BitMEX.API.DisplayQty
instance GHC.Classes.Eq BitMEX.API.DisplayQty
instance GHC.Show.Show BitMEX.API.Depth
instance GHC.Classes.Eq BitMEX.API.Depth
instance GHC.Show.Show BitMEX.API.Currency
instance GHC.Classes.Eq BitMEX.API.Currency
instance GHC.Show.Show BitMEX.API.Country
instance GHC.Classes.Eq BitMEX.API.Country
instance GHC.Show.Show BitMEX.API.Count
instance GHC.Classes.Eq BitMEX.API.Count
instance GHC.Show.Show BitMEX.API.ContingencyType
instance GHC.Classes.Eq BitMEX.API.ContingencyType
instance GHC.Show.Show BitMEX.API.Columns
instance GHC.Classes.Eq BitMEX.API.Columns
instance GHC.Show.Show BitMEX.API.ClOrdLinkId
instance GHC.Classes.Eq BitMEX.API.ClOrdLinkId
instance GHC.Show.Show BitMEX.API.ClOrdId
instance GHC.Classes.Eq BitMEX.API.ClOrdId
instance GHC.Show.Show BitMEX.API.Cidr
instance GHC.Classes.Eq BitMEX.API.Cidr
instance GHC.Show.Show BitMEX.API.ChannelId
instance GHC.Classes.Eq BitMEX.API.ChannelId
instance GHC.Show.Show BitMEX.API.BinSize
instance GHC.Classes.Eq BitMEX.API.BinSize
instance GHC.Show.Show BitMEX.API.ApiKeyId
instance GHC.Classes.Eq BitMEX.API.ApiKeyId
instance GHC.Show.Show BitMEX.API.Amount
instance GHC.Classes.Eq BitMEX.API.Amount
instance GHC.Show.Show BitMEX.API.Address
instance GHC.Classes.Eq BitMEX.API.Address
instance GHC.Show.Show BitMEX.API.Account
instance GHC.Classes.Eq BitMEX.API.Account
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyDisable BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyEnable BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyNew BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyRemove BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGetUrgent BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetChannels BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetConnected BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatNew BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGetTradeHistory BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.FundingGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActive BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveAndIndices BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveIntervals BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetIndices BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.InsuranceGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.LeaderboardGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.LiquidationGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.NotificationGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmend BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmendBulk BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancel BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAll BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAllAfter BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderClosePosition BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderGetOrders BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNew BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNewBulk BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGetL2 BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionIsolateMargin BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionTransferIsolatedMargin BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateLeverage BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateRiskLimit BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGetBucketed BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaWebsocketHelp BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.SettlementGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistory2 BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistoryUSD BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGetBucketed BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCancelWithdrawal BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCheckReferralCode BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirm BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmEnableTFA BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmWithdrawal BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserDisableTFA BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetAffiliateStatus BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetCommission BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetDepositAddress BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetMargin BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWallet BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletHistory BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletSummary BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogout BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogoutAll BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserMinWithdrawalFee BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestEnableTFA BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestWithdrawal BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserSavePreferences BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.UserUpdate BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.MimeType BitMEX.API.MimeTextxml
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyDisable BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyEnable BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyNew BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyRemove BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGetUrgent BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetChannels BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetConnected BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatNew BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGetTradeHistory BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.FundingGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActive BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveAndIndices BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveIntervals BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetIndices BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InsuranceGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.LeaderboardGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.LiquidationGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.NotificationGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmend BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmendBulk BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancel BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAll BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAllAfter BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderClosePosition BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderGetOrders BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNew BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNewBulk BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGetL2 BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionIsolateMargin BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionTransferIsolatedMargin BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateLeverage BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateRiskLimit BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGetBucketed BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaWebsocketHelp BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.SettlementGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistory2 BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistoryUSD BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGetBucketed BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCancelWithdrawal BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCheckReferralCode BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirm BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmEnableTFA BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmWithdrawal BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserDisableTFA BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetAffiliateStatus BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetCommission BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetDepositAddress BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetMargin BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWallet BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletHistory BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletSummary BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogout BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogoutAll BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserMinWithdrawalFee BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestEnableTFA BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestWithdrawal BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserSavePreferences BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserUpdate BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.MimeType BitMEX.API.MimeTextjavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyDisable BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyEnable BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyNew BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyRemove BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGetUrgent BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetChannels BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetConnected BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatNew BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGetTradeHistory BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.FundingGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActive BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveAndIndices BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveIntervals BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetIndices BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.InsuranceGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.LeaderboardGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.LiquidationGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.NotificationGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmend BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmendBulk BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancel BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAll BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAllAfter BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderClosePosition BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderGetOrders BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNew BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNewBulk BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGetL2 BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionIsolateMargin BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionTransferIsolatedMargin BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateLeverage BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateRiskLimit BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGetBucketed BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaWebsocketHelp BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.SettlementGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistory2 BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistoryUSD BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGetBucketed BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCancelWithdrawal BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCheckReferralCode BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirm BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmEnableTFA BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmWithdrawal BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserDisableTFA BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetAffiliateStatus BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetCommission BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetDepositAddress BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetMargin BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWallet BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletHistory BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletSummary BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogout BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogoutAll BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserMinWithdrawalFee BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestEnableTFA BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestWithdrawal BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserSavePreferences BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.Produces BitMEX.API.UserUpdate BitMEX.API.MimeJavascript
instance BitMEX.MimeTypes.MimeType BitMEX.API.MimeJavascript
instance BitMEX.Core.AuthMethod BitMEX.API.AuthApiKeyApiSignature
instance BitMEX.Core.AuthMethod BitMEX.API.AuthApiKeyApiNonce
instance BitMEX.Core.AuthMethod BitMEX.API.AuthApiKeyApiKey
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.Username
instance BitMEX.Core.HasOptionalParam BitMEX.API.APIKeyNew BitMEX.API.Token
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.TimeInForce
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderCancelAll BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Symbol
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.StopPx
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.StopPx
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.StopPrice
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.StartTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.ChatGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Start
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.SimpleOrderQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.SimpleOrderQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.SimpleLeavesQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.Side
instance BitMEX.Core.HasOptionalParam BitMEX.API.APIKeyGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.ChatGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Reverse
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserCheckReferralCode BitMEX.API.ReferralCode
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.Quantity
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.Price
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderClosePosition BitMEX.API.Price
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.Price
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.PgpPubKey
instance BitMEX.Core.HasOptionalParam BitMEX.API.APIKeyNew BitMEX.API.Permissions
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.PegPriceType
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.PegOffsetValue
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.PegOffsetValue
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Partial
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Partial
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.ParamType
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserConfirmEnableTFA BitMEX.API.ParamType
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserDisableTFA BitMEX.API.ParamType
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserRequestEnableTFA BitMEX.API.ParamType
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.ParamText
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderCancel BitMEX.API.ParamText
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderCancelAll BitMEX.API.ParamText
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.ParamText
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserSavePreferences BitMEX.API.Overwrite
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserRequestWithdrawal BitMEX.API.OtpToken
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.OrigClOrdId
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmendBulk BitMEX.API.Orders
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNewBulk BitMEX.API.Orders
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.OrderQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.OrderQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.OrderId
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderCancel BitMEX.API.OrderId
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.OrdType
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.OldPassword
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.NewPasswordConfirm
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.NewPassword
instance BitMEX.Core.HasOptionalParam BitMEX.API.APIKeyNew BitMEX.API.Name
instance BitMEX.Core.HasOptionalParam BitMEX.API.SchemaGet BitMEX.API.Model
instance BitMEX.Core.HasOptionalParam BitMEX.API.LeaderboardGet BitMEX.API.Method
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.LeavesQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.Lastname
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.Firstname
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderCancelAll BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.PositionGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Filter
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserRequestWithdrawal BitMEX.API.Fee
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.ExecInst
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.EndTime
instance BitMEX.Core.HasOptionalParam BitMEX.API.APIKeyNew BitMEX.API.Enabled
instance BitMEX.Core.HasOptionalParam BitMEX.API.PositionIsolateMargin BitMEX.API.Enabled
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.DisplayQty
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderBookGet BitMEX.API.Depth
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderBookGetL2 BitMEX.API.Depth
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserGetDepositAddress BitMEX.API.Currency
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserGetMargin BitMEX.API.Currency
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserGetWallet BitMEX.API.Currency
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserGetWalletHistory BitMEX.API.Currency
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserGetWalletSummary BitMEX.API.Currency
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserMinWithdrawalFee BitMEX.API.Currency
instance BitMEX.Core.HasOptionalParam BitMEX.API.UserUpdate BitMEX.API.Country
instance BitMEX.Core.HasOptionalParam BitMEX.API.ChatGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.PositionGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Count
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.ContingencyType
instance BitMEX.Core.HasOptionalParam BitMEX.API.AnnouncementGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.ExecutionGetTradeHistory BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.FundingGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.InsuranceGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.LiquidationGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderGetOrders BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.PositionGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.SettlementGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGet BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.Columns
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.ClOrdLinkId
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderAmend BitMEX.API.ClOrdId
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderCancel BitMEX.API.ClOrdId
instance BitMEX.Core.HasOptionalParam BitMEX.API.OrderNew BitMEX.API.ClOrdId
instance BitMEX.Core.HasOptionalParam BitMEX.API.APIKeyNew BitMEX.API.Cidr
instance BitMEX.Core.HasOptionalParam BitMEX.API.ChatGet BitMEX.API.ChannelId
instance BitMEX.Core.HasOptionalParam BitMEX.API.ChatNew BitMEX.API.ChannelId
instance BitMEX.Core.HasOptionalParam BitMEX.API.QuoteGetBucketed BitMEX.API.BinSize
instance BitMEX.Core.HasOptionalParam BitMEX.API.TradeGetBucketed BitMEX.API.BinSize
instance BitMEX.Core.HasOptionalParam BitMEX.API.InstrumentGetCompositeIndex BitMEX.API.Account
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserUpdate BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserUpdate BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserUpdate BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserUpdate BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserSavePreferences BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserSavePreferences BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserSavePreferences BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserSavePreferences BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserRequestWithdrawal BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserRequestWithdrawal BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestWithdrawal BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestWithdrawal BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserRequestEnableTFA BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserRequestEnableTFA BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestEnableTFA BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserRequestEnableTFA BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserMinWithdrawalFee BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserMinWithdrawalFee BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserMinWithdrawalFee BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserMinWithdrawalFee BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserLogoutAll BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserLogoutAll BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogoutAll BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogoutAll BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserLogout BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserLogout BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogout BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserLogout BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetWalletSummary BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetWalletSummary BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletSummary BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletSummary BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetWalletHistory BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetWalletHistory BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletHistory BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWalletHistory BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetWallet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetWallet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWallet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetWallet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetMargin BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetMargin BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetMargin BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetMargin BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetDepositAddress BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetDepositAddress BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetDepositAddress BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetDepositAddress BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetCommission BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetCommission BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetCommission BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetCommission BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetAffiliateStatus BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGetAffiliateStatus BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetAffiliateStatus BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGetAffiliateStatus BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserDisableTFA BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserDisableTFA BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserDisableTFA BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserDisableTFA BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserConfirmWithdrawal BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserConfirmWithdrawal BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmWithdrawal BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmWithdrawal BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserConfirmEnableTFA BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserConfirmEnableTFA BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmEnableTFA BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirmEnableTFA BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserConfirm BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserConfirm BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirm BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserConfirm BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserCheckReferralCode BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserCheckReferralCode BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCheckReferralCode BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCheckReferralCode BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserCancelWithdrawal BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.UserCancelWithdrawal BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCancelWithdrawal BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.UserCancelWithdrawal BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.TradeGetBucketed BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.TradeGetBucketed BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGetBucketed BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGetBucketed BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.TradeGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.TradeGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.TradeGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.StatsHistoryUSD BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.StatsHistoryUSD BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistoryUSD BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistoryUSD BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.StatsHistory2 BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.StatsHistory2 BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistory2 BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsHistory2 BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.StatsGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.StatsGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.StatsGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.SettlementGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.SettlementGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.SettlementGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.SettlementGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.SchemaWebsocketHelp BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.SchemaWebsocketHelp BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaWebsocketHelp BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaWebsocketHelp BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.SchemaGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.SchemaGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.SchemaGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.QuoteGetBucketed BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.QuoteGetBucketed BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGetBucketed BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGetBucketed BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.QuoteGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.QuoteGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.QuoteGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionUpdateRiskLimit BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionUpdateRiskLimit BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateRiskLimit BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateRiskLimit BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionUpdateLeverage BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionUpdateLeverage BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateLeverage BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionUpdateLeverage BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionTransferIsolatedMargin BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionTransferIsolatedMargin BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionTransferIsolatedMargin BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionTransferIsolatedMargin BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionIsolateMargin BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionIsolateMargin BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionIsolateMargin BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionIsolateMargin BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.PositionGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.PositionGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderBookGetL2 BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderBookGetL2 BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGetL2 BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGetL2 BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderBookGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderBookGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderBookGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderNewBulk BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderNewBulk BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNewBulk BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNewBulk BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderNew BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderNew BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNew BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderNew BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderGetOrders BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderGetOrders BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderGetOrders BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderGetOrders BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderClosePosition BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderClosePosition BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderClosePosition BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderClosePosition BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderCancelAllAfter BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderCancelAllAfter BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAllAfter BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAllAfter BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderCancelAll BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderCancelAll BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAll BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancelAll BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderCancel BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderCancel BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancel BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderCancel BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderAmendBulk BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderAmendBulk BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmendBulk BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmendBulk BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderAmend BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.OrderAmend BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmend BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.OrderAmend BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.NotificationGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.NotificationGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.NotificationGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.NotificationGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.LiquidationGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.LiquidationGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.LiquidationGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.LiquidationGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.LeaderboardGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.LeaderboardGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.LeaderboardGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.LeaderboardGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InsuranceGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InsuranceGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InsuranceGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InsuranceGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetIndices BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetIndices BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetIndices BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetIndices BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetCompositeIndex BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetCompositeIndex BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetCompositeIndex BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetCompositeIndex BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetActiveIntervals BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetActiveIntervals BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveIntervals BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveIntervals BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetActiveAndIndices BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetActiveAndIndices BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveAndIndices BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActiveAndIndices BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetActive BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGetActive BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActive BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGetActive BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.InstrumentGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.InstrumentGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.FundingGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.FundingGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.FundingGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.FundingGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.ExecutionGetTradeHistory BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.ExecutionGetTradeHistory BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGetTradeHistory BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGetTradeHistory BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.ExecutionGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.ExecutionGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.ExecutionGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatNew BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatNew BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatNew BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatNew BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatGetConnected BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatGetConnected BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetConnected BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetConnected BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatGetChannels BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatGetChannels BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetChannels BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGetChannels BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.ChatGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.ChatGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.AnnouncementGetUrgent BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.AnnouncementGetUrgent BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGetUrgent BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGetUrgent BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.AnnouncementGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.AnnouncementGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.AnnouncementGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyRemove BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyRemove BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyRemove BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyRemove BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyNew BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyNew BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyNew BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyNew BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyGet BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyGet BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyGet BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyEnable BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyEnable BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyEnable BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyEnable BitMEX.MimeTypes.MimeXML
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyDisable BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Consumes BitMEX.API.APIKeyDisable BitMEX.MimeTypes.MimeFormUrlEncoded
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyDisable BitMEX.MimeTypes.MimeJSON
instance BitMEX.MimeTypes.Produces BitMEX.API.APIKeyDisable BitMEX.MimeTypes.MimeXML


module BitMEX.ModelLens

-- | <a>aPIKeyId</a> Lens
aPIKeyIdL :: Lens_' APIKey (Text)

-- | <a>aPIKeySecret</a> Lens
aPIKeySecretL :: Lens_' APIKey (Text)

-- | <a>aPIKeyName</a> Lens
aPIKeyNameL :: Lens_' APIKey (Text)

-- | <a>aPIKeyNonce</a> Lens
aPIKeyNonceL :: Lens_' APIKey (Double)

-- | <a>aPIKeyCidr</a> Lens
aPIKeyCidrL :: Lens_' APIKey (Maybe Text)

-- | <a>aPIKeyPermissions</a> Lens
aPIKeyPermissionsL :: Lens_' APIKey (Maybe [XAny])

-- | <a>aPIKeyEnabled</a> Lens
aPIKeyEnabledL :: Lens_' APIKey (Maybe Bool)

-- | <a>aPIKeyUserId</a> Lens
aPIKeyUserIdL :: Lens_' APIKey (Double)

-- | <a>aPIKeyCreated</a> Lens
aPIKeyCreatedL :: Lens_' APIKey (Maybe DateTime)

-- | <a>accessTokenId</a> Lens
accessTokenIdL :: Lens_' AccessToken (Text)

-- | <a>accessTokenTtl</a> Lens
accessTokenTtlL :: Lens_' AccessToken (Maybe Double)

-- | <a>accessTokenCreated</a> Lens
accessTokenCreatedL :: Lens_' AccessToken (Maybe DateTime)

-- | <a>accessTokenUserId</a> Lens
accessTokenUserIdL :: Lens_' AccessToken (Maybe Double)

-- | <a>affiliateAccount</a> Lens
affiliateAccountL :: Lens_' Affiliate (Double)

-- | <a>affiliateCurrency</a> Lens
affiliateCurrencyL :: Lens_' Affiliate (Text)

-- | <a>affiliatePrevPayout</a> Lens
affiliatePrevPayoutL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliatePrevTurnover</a> Lens
affiliatePrevTurnoverL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliatePrevComm</a> Lens
affiliatePrevCommL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliatePrevTimestamp</a> Lens
affiliatePrevTimestampL :: Lens_' Affiliate (Maybe DateTime)

-- | <a>affiliateExecTurnover</a> Lens
affiliateExecTurnoverL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliateExecComm</a> Lens
affiliateExecCommL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliateTotalReferrals</a> Lens
affiliateTotalReferralsL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliateTotalTurnover</a> Lens
affiliateTotalTurnoverL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliateTotalComm</a> Lens
affiliateTotalCommL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliatePayoutPcnt</a> Lens
affiliatePayoutPcntL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliatePendingPayout</a> Lens
affiliatePendingPayoutL :: Lens_' Affiliate (Maybe Double)

-- | <a>affiliateTimestamp</a> Lens
affiliateTimestampL :: Lens_' Affiliate (Maybe DateTime)

-- | <a>affiliateReferrerAccount</a> Lens
affiliateReferrerAccountL :: Lens_' Affiliate (Maybe Double)

-- | <a>announcementId</a> Lens
announcementIdL :: Lens_' Announcement (Double)

-- | <a>announcementLink</a> Lens
announcementLinkL :: Lens_' Announcement (Maybe Text)

-- | <a>announcementTitle</a> Lens
announcementTitleL :: Lens_' Announcement (Maybe Text)

-- | <a>announcementContent</a> Lens
announcementContentL :: Lens_' Announcement (Maybe Text)

-- | <a>announcementDate</a> Lens
announcementDateL :: Lens_' Announcement (Maybe DateTime)

-- | <a>chatId</a> Lens
chatIdL :: Lens_' Chat (Maybe Double)

-- | <a>chatDate</a> Lens
chatDateL :: Lens_' Chat (DateTime)

-- | <a>chatUser</a> Lens
chatUserL :: Lens_' Chat (Text)

-- | <a>chatMessage</a> Lens
chatMessageL :: Lens_' Chat (Text)

-- | <a>chatHtml</a> Lens
chatHtmlL :: Lens_' Chat (Text)

-- | <a>chatFromBot</a> Lens
chatFromBotL :: Lens_' Chat (Maybe Bool)

-- | <a>chatChannelId</a> Lens
chatChannelIdL :: Lens_' Chat (Maybe Double)

-- | <a>chatChannelsId</a> Lens
chatChannelsIdL :: Lens_' ChatChannels (Maybe Double)

-- | <a>chatChannelsName</a> Lens
chatChannelsNameL :: Lens_' ChatChannels (Text)

-- | <a>connectedUsersUsers</a> Lens
connectedUsersUsersL :: Lens_' ConnectedUsers (Maybe Double)

-- | <a>connectedUsersBots</a> Lens
connectedUsersBotsL :: Lens_' ConnectedUsers (Maybe Double)

-- | <a>errorError</a> Lens
errorErrorL :: Lens_' Error (ErrorError)

-- | <a>errorErrorMessage</a> Lens
errorErrorMessageL :: Lens_' ErrorError (Maybe Text)

-- | <a>errorErrorName</a> Lens
errorErrorNameL :: Lens_' ErrorError (Maybe Text)

-- | <a>executionExecId</a> Lens
executionExecIdL :: Lens_' Execution (Text)

-- | <a>executionOrderId</a> Lens
executionOrderIdL :: Lens_' Execution (Maybe Text)

-- | <a>executionClOrdId</a> Lens
executionClOrdIdL :: Lens_' Execution (Maybe Text)

-- | <a>executionClOrdLinkId</a> Lens
executionClOrdLinkIdL :: Lens_' Execution (Maybe Text)

-- | <a>executionAccount</a> Lens
executionAccountL :: Lens_' Execution (Maybe Double)

-- | <a>executionSymbol</a> Lens
executionSymbolL :: Lens_' Execution (Maybe Text)

-- | <a>executionSide</a> Lens
executionSideL :: Lens_' Execution (Maybe Text)

-- | <a>executionLastQty</a> Lens
executionLastQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionLastPx</a> Lens
executionLastPxL :: Lens_' Execution (Maybe Double)

-- | <a>executionUnderlyingLastPx</a> Lens
executionUnderlyingLastPxL :: Lens_' Execution (Maybe Double)

-- | <a>executionLastMkt</a> Lens
executionLastMktL :: Lens_' Execution (Maybe Text)

-- | <a>executionLastLiquidityInd</a> Lens
executionLastLiquidityIndL :: Lens_' Execution (Maybe Text)

-- | <a>executionSimpleOrderQty</a> Lens
executionSimpleOrderQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionOrderQty</a> Lens
executionOrderQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionPrice</a> Lens
executionPriceL :: Lens_' Execution (Maybe Double)

-- | <a>executionDisplayQty</a> Lens
executionDisplayQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionStopPx</a> Lens
executionStopPxL :: Lens_' Execution (Maybe Double)

-- | <a>executionPegOffsetValue</a> Lens
executionPegOffsetValueL :: Lens_' Execution (Maybe Double)

-- | <a>executionPegPriceType</a> Lens
executionPegPriceTypeL :: Lens_' Execution (Maybe Text)

-- | <a>executionCurrency</a> Lens
executionCurrencyL :: Lens_' Execution (Maybe Text)

-- | <a>executionSettlCurrency</a> Lens
executionSettlCurrencyL :: Lens_' Execution (Maybe Text)

-- | <a>executionExecType</a> Lens
executionExecTypeL :: Lens_' Execution (Maybe Text)

-- | <a>executionOrdType</a> Lens
executionOrdTypeL :: Lens_' Execution (Maybe Text)

-- | <a>executionTimeInForce</a> Lens
executionTimeInForceL :: Lens_' Execution (Maybe Text)

-- | <a>executionExecInst</a> Lens
executionExecInstL :: Lens_' Execution (Maybe Text)

-- | <a>executionContingencyType</a> Lens
executionContingencyTypeL :: Lens_' Execution (Maybe Text)

-- | <a>executionExDestination</a> Lens
executionExDestinationL :: Lens_' Execution (Maybe Text)

-- | <a>executionOrdStatus</a> Lens
executionOrdStatusL :: Lens_' Execution (Maybe Text)

-- | <a>executionTriggered</a> Lens
executionTriggeredL :: Lens_' Execution (Maybe Text)

-- | <a>executionWorkingIndicator</a> Lens
executionWorkingIndicatorL :: Lens_' Execution (Maybe Bool)

-- | <a>executionOrdRejReason</a> Lens
executionOrdRejReasonL :: Lens_' Execution (Maybe Text)

-- | <a>executionSimpleLeavesQty</a> Lens
executionSimpleLeavesQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionLeavesQty</a> Lens
executionLeavesQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionSimpleCumQty</a> Lens
executionSimpleCumQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionCumQty</a> Lens
executionCumQtyL :: Lens_' Execution (Maybe Double)

-- | <a>executionAvgPx</a> Lens
executionAvgPxL :: Lens_' Execution (Maybe Double)

-- | <a>executionCommission</a> Lens
executionCommissionL :: Lens_' Execution (Maybe Double)

-- | <a>executionTradePublishIndicator</a> Lens
executionTradePublishIndicatorL :: Lens_' Execution (Maybe Text)

-- | <a>executionMultiLegReportingType</a> Lens
executionMultiLegReportingTypeL :: Lens_' Execution (Maybe Text)

-- | <a>executionText</a> Lens
executionTextL :: Lens_' Execution (Maybe Text)

-- | <a>executionTrdMatchId</a> Lens
executionTrdMatchIdL :: Lens_' Execution (Maybe Text)

-- | <a>executionExecCost</a> Lens
executionExecCostL :: Lens_' Execution (Maybe Double)

-- | <a>executionExecComm</a> Lens
executionExecCommL :: Lens_' Execution (Maybe Double)

-- | <a>executionHomeNotional</a> Lens
executionHomeNotionalL :: Lens_' Execution (Maybe Double)

-- | <a>executionForeignNotional</a> Lens
executionForeignNotionalL :: Lens_' Execution (Maybe Double)

-- | <a>executionTransactTime</a> Lens
executionTransactTimeL :: Lens_' Execution (Maybe DateTime)

-- | <a>executionTimestamp</a> Lens
executionTimestampL :: Lens_' Execution (Maybe DateTime)

-- | <a>fundingTimestamp</a> Lens
fundingTimestampL :: Lens_' Funding (DateTime)

-- | <a>fundingSymbol</a> Lens
fundingSymbolL :: Lens_' Funding (Text)

-- | <a>fundingFundingInterval</a> Lens
fundingFundingIntervalL :: Lens_' Funding (Maybe DateTime)

-- | <a>fundingFundingRate</a> Lens
fundingFundingRateL :: Lens_' Funding (Maybe Double)

-- | <a>fundingFundingRateDaily</a> Lens
fundingFundingRateDailyL :: Lens_' Funding (Maybe Double)

-- | <a>indexCompositeTimestamp</a> Lens
indexCompositeTimestampL :: Lens_' IndexComposite (DateTime)

-- | <a>indexCompositeSymbol</a> Lens
indexCompositeSymbolL :: Lens_' IndexComposite (Maybe Text)

-- | <a>indexCompositeIndexSymbol</a> Lens
indexCompositeIndexSymbolL :: Lens_' IndexComposite (Maybe Text)

-- | <a>indexCompositeReference</a> Lens
indexCompositeReferenceL :: Lens_' IndexComposite (Maybe Text)

-- | <a>indexCompositeLastPrice</a> Lens
indexCompositeLastPriceL :: Lens_' IndexComposite (Maybe Double)

-- | <a>indexCompositeWeight</a> Lens
indexCompositeWeightL :: Lens_' IndexComposite (Maybe Double)

-- | <a>indexCompositeLogged</a> Lens
indexCompositeLoggedL :: Lens_' IndexComposite (Maybe DateTime)

-- | <a>inlineResponse200Success</a> Lens
inlineResponse200SuccessL :: Lens_' InlineResponse200 (Maybe Bool)

-- | <a>instrumentSymbol</a> Lens
instrumentSymbolL :: Lens_' Instrument (Text)

-- | <a>instrumentRootSymbol</a> Lens
instrumentRootSymbolL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentState</a> Lens
instrumentStateL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentTyp</a> Lens
instrumentTypL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentListing</a> Lens
instrumentListingL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentFront</a> Lens
instrumentFrontL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentExpiry</a> Lens
instrumentExpiryL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentSettle</a> Lens
instrumentSettleL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentRelistInterval</a> Lens
instrumentRelistIntervalL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentInverseLeg</a> Lens
instrumentInverseLegL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentSellLeg</a> Lens
instrumentSellLegL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentBuyLeg</a> Lens
instrumentBuyLegL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentPositionCurrency</a> Lens
instrumentPositionCurrencyL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentUnderlying</a> Lens
instrumentUnderlyingL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentQuoteCurrency</a> Lens
instrumentQuoteCurrencyL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentUnderlyingSymbol</a> Lens
instrumentUnderlyingSymbolL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentReference</a> Lens
instrumentReferenceL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentReferenceSymbol</a> Lens
instrumentReferenceSymbolL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentCalcInterval</a> Lens
instrumentCalcIntervalL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentPublishInterval</a> Lens
instrumentPublishIntervalL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentPublishTime</a> Lens
instrumentPublishTimeL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentMaxOrderQty</a> Lens
instrumentMaxOrderQtyL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentMaxPrice</a> Lens
instrumentMaxPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLotSize</a> Lens
instrumentLotSizeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTickSize</a> Lens
instrumentTickSizeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentMultiplier</a> Lens
instrumentMultiplierL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentSettlCurrency</a> Lens
instrumentSettlCurrencyL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentUnderlyingToPositionMultiplier</a> Lens
instrumentUnderlyingToPositionMultiplierL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentUnderlyingToSettleMultiplier</a> Lens
instrumentUnderlyingToSettleMultiplierL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentQuoteToSettleMultiplier</a> Lens
instrumentQuoteToSettleMultiplierL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentIsQuanto</a> Lens
instrumentIsQuantoL :: Lens_' Instrument (Maybe Bool)

-- | <a>instrumentIsInverse</a> Lens
instrumentIsInverseL :: Lens_' Instrument (Maybe Bool)

-- | <a>instrumentInitMargin</a> Lens
instrumentInitMarginL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentMaintMargin</a> Lens
instrumentMaintMarginL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentRiskLimit</a> Lens
instrumentRiskLimitL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentRiskStep</a> Lens
instrumentRiskStepL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLimit</a> Lens
instrumentLimitL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentCapped</a> Lens
instrumentCappedL :: Lens_' Instrument (Maybe Bool)

-- | <a>instrumentTaxed</a> Lens
instrumentTaxedL :: Lens_' Instrument (Maybe Bool)

-- | <a>instrumentDeleverage</a> Lens
instrumentDeleverageL :: Lens_' Instrument (Maybe Bool)

-- | <a>instrumentMakerFee</a> Lens
instrumentMakerFeeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTakerFee</a> Lens
instrumentTakerFeeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentSettlementFee</a> Lens
instrumentSettlementFeeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentInsuranceFee</a> Lens
instrumentInsuranceFeeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentFundingBaseSymbol</a> Lens
instrumentFundingBaseSymbolL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentFundingQuoteSymbol</a> Lens
instrumentFundingQuoteSymbolL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentFundingPremiumSymbol</a> Lens
instrumentFundingPremiumSymbolL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentFundingTimestamp</a> Lens
instrumentFundingTimestampL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentFundingInterval</a> Lens
instrumentFundingIntervalL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentFundingRate</a> Lens
instrumentFundingRateL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentIndicativeFundingRate</a> Lens
instrumentIndicativeFundingRateL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentRebalanceTimestamp</a> Lens
instrumentRebalanceTimestampL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentRebalanceInterval</a> Lens
instrumentRebalanceIntervalL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentOpeningTimestamp</a> Lens
instrumentOpeningTimestampL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentClosingTimestamp</a> Lens
instrumentClosingTimestampL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentSessionInterval</a> Lens
instrumentSessionIntervalL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentPrevClosePrice</a> Lens
instrumentPrevClosePriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLimitDownPrice</a> Lens
instrumentLimitDownPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLimitUpPrice</a> Lens
instrumentLimitUpPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentBankruptLimitDownPrice</a> Lens
instrumentBankruptLimitDownPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentBankruptLimitUpPrice</a> Lens
instrumentBankruptLimitUpPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentPrevTotalVolume</a> Lens
instrumentPrevTotalVolumeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTotalVolume</a> Lens
instrumentTotalVolumeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentVolume</a> Lens
instrumentVolumeL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentVolume24h</a> Lens
instrumentVolume24hL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentPrevTotalTurnover</a> Lens
instrumentPrevTotalTurnoverL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTotalTurnover</a> Lens
instrumentTotalTurnoverL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTurnover</a> Lens
instrumentTurnoverL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTurnover24h</a> Lens
instrumentTurnover24hL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentPrevPrice24h</a> Lens
instrumentPrevPrice24hL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentVwap</a> Lens
instrumentVwapL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentHighPrice</a> Lens
instrumentHighPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLowPrice</a> Lens
instrumentLowPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLastPrice</a> Lens
instrumentLastPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLastPriceProtected</a> Lens
instrumentLastPriceProtectedL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentLastTickDirection</a> Lens
instrumentLastTickDirectionL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentLastChangePcnt</a> Lens
instrumentLastChangePcntL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentBidPrice</a> Lens
instrumentBidPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentMidPrice</a> Lens
instrumentMidPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentAskPrice</a> Lens
instrumentAskPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentImpactBidPrice</a> Lens
instrumentImpactBidPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentImpactMidPrice</a> Lens
instrumentImpactMidPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentImpactAskPrice</a> Lens
instrumentImpactAskPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentHasLiquidity</a> Lens
instrumentHasLiquidityL :: Lens_' Instrument (Maybe Bool)

-- | <a>instrumentOpenInterest</a> Lens
instrumentOpenInterestL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentOpenValue</a> Lens
instrumentOpenValueL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentFairMethod</a> Lens
instrumentFairMethodL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentFairBasisRate</a> Lens
instrumentFairBasisRateL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentFairBasis</a> Lens
instrumentFairBasisL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentFairPrice</a> Lens
instrumentFairPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentMarkMethod</a> Lens
instrumentMarkMethodL :: Lens_' Instrument (Maybe Text)

-- | <a>instrumentMarkPrice</a> Lens
instrumentMarkPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentIndicativeTaxRate</a> Lens
instrumentIndicativeTaxRateL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentIndicativeSettlePrice</a> Lens
instrumentIndicativeSettlePriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentSettledPrice</a> Lens
instrumentSettledPriceL :: Lens_' Instrument (Maybe Double)

-- | <a>instrumentTimestamp</a> Lens
instrumentTimestampL :: Lens_' Instrument (Maybe DateTime)

-- | <a>instrumentIntervalIntervals</a> Lens
instrumentIntervalIntervalsL :: Lens_' InstrumentInterval ([Text])

-- | <a>instrumentIntervalSymbols</a> Lens
instrumentIntervalSymbolsL :: Lens_' InstrumentInterval ([Text])

-- | <a>insuranceCurrency</a> Lens
insuranceCurrencyL :: Lens_' Insurance (Text)

-- | <a>insuranceTimestamp</a> Lens
insuranceTimestampL :: Lens_' Insurance (DateTime)

-- | <a>insuranceWalletBalance</a> Lens
insuranceWalletBalanceL :: Lens_' Insurance (Maybe Double)

-- | <a>leaderboardName</a> Lens
leaderboardNameL :: Lens_' Leaderboard (Text)

-- | <a>leaderboardIsRealName</a> Lens
leaderboardIsRealNameL :: Lens_' Leaderboard (Maybe Bool)

-- | <a>leaderboardIsMe</a> Lens
leaderboardIsMeL :: Lens_' Leaderboard (Maybe Bool)

-- | <a>leaderboardProfit</a> Lens
leaderboardProfitL :: Lens_' Leaderboard (Maybe Double)

-- | <a>liquidationOrderId</a> Lens
liquidationOrderIdL :: Lens_' Liquidation (Text)

-- | <a>liquidationSymbol</a> Lens
liquidationSymbolL :: Lens_' Liquidation (Maybe Text)

-- | <a>liquidationSide</a> Lens
liquidationSideL :: Lens_' Liquidation (Maybe Text)

-- | <a>liquidationPrice</a> Lens
liquidationPriceL :: Lens_' Liquidation (Maybe Double)

-- | <a>liquidationLeavesQty</a> Lens
liquidationLeavesQtyL :: Lens_' Liquidation (Maybe Double)

-- | <a>marginAccount</a> Lens
marginAccountL :: Lens_' Margin (Double)

-- | <a>marginCurrency</a> Lens
marginCurrencyL :: Lens_' Margin (Text)

-- | <a>marginRiskLimit</a> Lens
marginRiskLimitL :: Lens_' Margin (Maybe Double)

-- | <a>marginPrevState</a> Lens
marginPrevStateL :: Lens_' Margin (Maybe Text)

-- | <a>marginState</a> Lens
marginStateL :: Lens_' Margin (Maybe Text)

-- | <a>marginAction</a> Lens
marginActionL :: Lens_' Margin (Maybe Text)

-- | <a>marginAmount</a> Lens
marginAmountL :: Lens_' Margin (Maybe Double)

-- | <a>marginPendingCredit</a> Lens
marginPendingCreditL :: Lens_' Margin (Maybe Double)

-- | <a>marginPendingDebit</a> Lens
marginPendingDebitL :: Lens_' Margin (Maybe Double)

-- | <a>marginConfirmedDebit</a> Lens
marginConfirmedDebitL :: Lens_' Margin (Maybe Double)

-- | <a>marginPrevRealisedPnl</a> Lens
marginPrevRealisedPnlL :: Lens_' Margin (Maybe Double)

-- | <a>marginPrevUnrealisedPnl</a> Lens
marginPrevUnrealisedPnlL :: Lens_' Margin (Maybe Double)

-- | <a>marginGrossComm</a> Lens
marginGrossCommL :: Lens_' Margin (Maybe Double)

-- | <a>marginGrossOpenCost</a> Lens
marginGrossOpenCostL :: Lens_' Margin (Maybe Double)

-- | <a>marginGrossOpenPremium</a> Lens
marginGrossOpenPremiumL :: Lens_' Margin (Maybe Double)

-- | <a>marginGrossExecCost</a> Lens
marginGrossExecCostL :: Lens_' Margin (Maybe Double)

-- | <a>marginGrossMarkValue</a> Lens
marginGrossMarkValueL :: Lens_' Margin (Maybe Double)

-- | <a>marginRiskValue</a> Lens
marginRiskValueL :: Lens_' Margin (Maybe Double)

-- | <a>marginTaxableMargin</a> Lens
marginTaxableMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginInitMargin</a> Lens
marginInitMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginMaintMargin</a> Lens
marginMaintMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginSessionMargin</a> Lens
marginSessionMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginTargetExcessMargin</a> Lens
marginTargetExcessMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginVarMargin</a> Lens
marginVarMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginRealisedPnl</a> Lens
marginRealisedPnlL :: Lens_' Margin (Maybe Double)

-- | <a>marginUnrealisedPnl</a> Lens
marginUnrealisedPnlL :: Lens_' Margin (Maybe Double)

-- | <a>marginIndicativeTax</a> Lens
marginIndicativeTaxL :: Lens_' Margin (Maybe Double)

-- | <a>marginUnrealisedProfit</a> Lens
marginUnrealisedProfitL :: Lens_' Margin (Maybe Double)

-- | <a>marginSyntheticMargin</a> Lens
marginSyntheticMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginWalletBalance</a> Lens
marginWalletBalanceL :: Lens_' Margin (Maybe Double)

-- | <a>marginMarginBalance</a> Lens
marginMarginBalanceL :: Lens_' Margin (Maybe Double)

-- | <a>marginMarginBalancePcnt</a> Lens
marginMarginBalancePcntL :: Lens_' Margin (Maybe Double)

-- | <a>marginMarginLeverage</a> Lens
marginMarginLeverageL :: Lens_' Margin (Maybe Double)

-- | <a>marginMarginUsedPcnt</a> Lens
marginMarginUsedPcntL :: Lens_' Margin (Maybe Double)

-- | <a>marginExcessMargin</a> Lens
marginExcessMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginExcessMarginPcnt</a> Lens
marginExcessMarginPcntL :: Lens_' Margin (Maybe Double)

-- | <a>marginAvailableMargin</a> Lens
marginAvailableMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginWithdrawableMargin</a> Lens
marginWithdrawableMarginL :: Lens_' Margin (Maybe Double)

-- | <a>marginTimestamp</a> Lens
marginTimestampL :: Lens_' Margin (Maybe DateTime)

-- | <a>marginGrossLastValue</a> Lens
marginGrossLastValueL :: Lens_' Margin (Maybe Double)

-- | <a>marginCommission</a> Lens
marginCommissionL :: Lens_' Margin (Maybe Double)

-- | <a>notificationId</a> Lens
notificationIdL :: Lens_' Notification (Maybe Double)

-- | <a>notificationDate</a> Lens
notificationDateL :: Lens_' Notification (DateTime)

-- | <a>notificationTitle</a> Lens
notificationTitleL :: Lens_' Notification (Text)

-- | <a>notificationBody</a> Lens
notificationBodyL :: Lens_' Notification (Text)

-- | <a>notificationTtl</a> Lens
notificationTtlL :: Lens_' Notification (Double)

-- | <a>notificationType</a> Lens
notificationTypeL :: Lens_' Notification (Maybe E'Type)

-- | <a>notificationClosable</a> Lens
notificationClosableL :: Lens_' Notification (Maybe Bool)

-- | <a>notificationPersist</a> Lens
notificationPersistL :: Lens_' Notification (Maybe Bool)

-- | <a>notificationWaitForVisibility</a> Lens
notificationWaitForVisibilityL :: Lens_' Notification (Maybe Bool)

-- | <a>notificationSound</a> Lens
notificationSoundL :: Lens_' Notification (Maybe Text)

-- | <a>orderOrderId</a> Lens
orderOrderIdL :: Lens_' Order (Text)

-- | <a>orderClOrdId</a> Lens
orderClOrdIdL :: Lens_' Order (Maybe Text)

-- | <a>orderClOrdLinkId</a> Lens
orderClOrdLinkIdL :: Lens_' Order (Maybe Text)

-- | <a>orderAccount</a> Lens
orderAccountL :: Lens_' Order (Maybe Double)

-- | <a>orderSymbol</a> Lens
orderSymbolL :: Lens_' Order (Maybe Text)

-- | <a>orderSide</a> Lens
orderSideL :: Lens_' Order (Maybe Text)

-- | <a>orderSimpleOrderQty</a> Lens
orderSimpleOrderQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderOrderQty</a> Lens
orderOrderQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderPrice</a> Lens
orderPriceL :: Lens_' Order (Maybe Double)

-- | <a>orderDisplayQty</a> Lens
orderDisplayQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderStopPx</a> Lens
orderStopPxL :: Lens_' Order (Maybe Double)

-- | <a>orderPegOffsetValue</a> Lens
orderPegOffsetValueL :: Lens_' Order (Maybe Double)

-- | <a>orderPegPriceType</a> Lens
orderPegPriceTypeL :: Lens_' Order (Maybe Text)

-- | <a>orderCurrency</a> Lens
orderCurrencyL :: Lens_' Order (Maybe Text)

-- | <a>orderSettlCurrency</a> Lens
orderSettlCurrencyL :: Lens_' Order (Maybe Text)

-- | <a>orderOrdType</a> Lens
orderOrdTypeL :: Lens_' Order (Maybe Text)

-- | <a>orderTimeInForce</a> Lens
orderTimeInForceL :: Lens_' Order (Maybe Text)

-- | <a>orderExecInst</a> Lens
orderExecInstL :: Lens_' Order (Maybe Text)

-- | <a>orderContingencyType</a> Lens
orderContingencyTypeL :: Lens_' Order (Maybe Text)

-- | <a>orderExDestination</a> Lens
orderExDestinationL :: Lens_' Order (Maybe Text)

-- | <a>orderOrdStatus</a> Lens
orderOrdStatusL :: Lens_' Order (Maybe Text)

-- | <a>orderTriggered</a> Lens
orderTriggeredL :: Lens_' Order (Maybe Text)

-- | <a>orderWorkingIndicator</a> Lens
orderWorkingIndicatorL :: Lens_' Order (Maybe Bool)

-- | <a>orderOrdRejReason</a> Lens
orderOrdRejReasonL :: Lens_' Order (Maybe Text)

-- | <a>orderSimpleLeavesQty</a> Lens
orderSimpleLeavesQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderLeavesQty</a> Lens
orderLeavesQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderSimpleCumQty</a> Lens
orderSimpleCumQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderCumQty</a> Lens
orderCumQtyL :: Lens_' Order (Maybe Double)

-- | <a>orderAvgPx</a> Lens
orderAvgPxL :: Lens_' Order (Maybe Double)

-- | <a>orderMultiLegReportingType</a> Lens
orderMultiLegReportingTypeL :: Lens_' Order (Maybe Text)

-- | <a>orderText</a> Lens
orderTextL :: Lens_' Order (Maybe Text)

-- | <a>orderTransactTime</a> Lens
orderTransactTimeL :: Lens_' Order (Maybe DateTime)

-- | <a>orderTimestamp</a> Lens
orderTimestampL :: Lens_' Order (Maybe DateTime)

-- | <a>orderBookSymbol</a> Lens
orderBookSymbolL :: Lens_' OrderBook (Text)

-- | <a>orderBookLevel</a> Lens
orderBookLevelL :: Lens_' OrderBook (Double)

-- | <a>orderBookBidSize</a> Lens
orderBookBidSizeL :: Lens_' OrderBook (Maybe Double)

-- | <a>orderBookBidPrice</a> Lens
orderBookBidPriceL :: Lens_' OrderBook (Maybe Double)

-- | <a>orderBookAskPrice</a> Lens
orderBookAskPriceL :: Lens_' OrderBook (Maybe Double)

-- | <a>orderBookAskSize</a> Lens
orderBookAskSizeL :: Lens_' OrderBook (Maybe Double)

-- | <a>orderBookTimestamp</a> Lens
orderBookTimestampL :: Lens_' OrderBook (Maybe DateTime)

-- | <a>orderBookL2Symbol</a> Lens
orderBookL2SymbolL :: Lens_' OrderBookL2 (Text)

-- | <a>orderBookL2Id</a> Lens
orderBookL2IdL :: Lens_' OrderBookL2 (Double)

-- | <a>orderBookL2Side</a> Lens
orderBookL2SideL :: Lens_' OrderBookL2 (Text)

-- | <a>orderBookL2Size</a> Lens
orderBookL2SizeL :: Lens_' OrderBookL2 (Maybe Double)

-- | <a>orderBookL2Price</a> Lens
orderBookL2PriceL :: Lens_' OrderBookL2 (Maybe Double)

-- | <a>positionAccount</a> Lens
positionAccountL :: Lens_' Position (Double)

-- | <a>positionSymbol</a> Lens
positionSymbolL :: Lens_' Position (Text)

-- | <a>positionCurrency</a> Lens
positionCurrencyL :: Lens_' Position (Text)

-- | <a>positionUnderlying</a> Lens
positionUnderlyingL :: Lens_' Position (Maybe Text)

-- | <a>positionQuoteCurrency</a> Lens
positionQuoteCurrencyL :: Lens_' Position (Maybe Text)

-- | <a>positionCommission</a> Lens
positionCommissionL :: Lens_' Position (Maybe Double)

-- | <a>positionInitMarginReq</a> Lens
positionInitMarginReqL :: Lens_' Position (Maybe Double)

-- | <a>positionMaintMarginReq</a> Lens
positionMaintMarginReqL :: Lens_' Position (Maybe Double)

-- | <a>positionRiskLimit</a> Lens
positionRiskLimitL :: Lens_' Position (Maybe Double)

-- | <a>positionLeverage</a> Lens
positionLeverageL :: Lens_' Position (Maybe Double)

-- | <a>positionCrossMargin</a> Lens
positionCrossMarginL :: Lens_' Position (Maybe Bool)

-- | <a>positionDeleveragePercentile</a> Lens
positionDeleveragePercentileL :: Lens_' Position (Maybe Double)

-- | <a>positionRebalancedPnl</a> Lens
positionRebalancedPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionPrevRealisedPnl</a> Lens
positionPrevRealisedPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionPrevUnrealisedPnl</a> Lens
positionPrevUnrealisedPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionPrevClosePrice</a> Lens
positionPrevClosePriceL :: Lens_' Position (Maybe Double)

-- | <a>positionOpeningTimestamp</a> Lens
positionOpeningTimestampL :: Lens_' Position (Maybe DateTime)

-- | <a>positionOpeningQty</a> Lens
positionOpeningQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionOpeningCost</a> Lens
positionOpeningCostL :: Lens_' Position (Maybe Double)

-- | <a>positionOpeningComm</a> Lens
positionOpeningCommL :: Lens_' Position (Maybe Double)

-- | <a>positionOpenOrderBuyQty</a> Lens
positionOpenOrderBuyQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionOpenOrderBuyCost</a> Lens
positionOpenOrderBuyCostL :: Lens_' Position (Maybe Double)

-- | <a>positionOpenOrderBuyPremium</a> Lens
positionOpenOrderBuyPremiumL :: Lens_' Position (Maybe Double)

-- | <a>positionOpenOrderSellQty</a> Lens
positionOpenOrderSellQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionOpenOrderSellCost</a> Lens
positionOpenOrderSellCostL :: Lens_' Position (Maybe Double)

-- | <a>positionOpenOrderSellPremium</a> Lens
positionOpenOrderSellPremiumL :: Lens_' Position (Maybe Double)

-- | <a>positionExecBuyQty</a> Lens
positionExecBuyQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionExecBuyCost</a> Lens
positionExecBuyCostL :: Lens_' Position (Maybe Double)

-- | <a>positionExecSellQty</a> Lens
positionExecSellQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionExecSellCost</a> Lens
positionExecSellCostL :: Lens_' Position (Maybe Double)

-- | <a>positionExecQty</a> Lens
positionExecQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionExecCost</a> Lens
positionExecCostL :: Lens_' Position (Maybe Double)

-- | <a>positionExecComm</a> Lens
positionExecCommL :: Lens_' Position (Maybe Double)

-- | <a>positionCurrentTimestamp</a> Lens
positionCurrentTimestampL :: Lens_' Position (Maybe DateTime)

-- | <a>positionCurrentQty</a> Lens
positionCurrentQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionCurrentCost</a> Lens
positionCurrentCostL :: Lens_' Position (Maybe Double)

-- | <a>positionCurrentComm</a> Lens
positionCurrentCommL :: Lens_' Position (Maybe Double)

-- | <a>positionRealisedCost</a> Lens
positionRealisedCostL :: Lens_' Position (Maybe Double)

-- | <a>positionUnrealisedCost</a> Lens
positionUnrealisedCostL :: Lens_' Position (Maybe Double)

-- | <a>positionGrossOpenCost</a> Lens
positionGrossOpenCostL :: Lens_' Position (Maybe Double)

-- | <a>positionGrossOpenPremium</a> Lens
positionGrossOpenPremiumL :: Lens_' Position (Maybe Double)

-- | <a>positionGrossExecCost</a> Lens
positionGrossExecCostL :: Lens_' Position (Maybe Double)

-- | <a>positionIsOpen</a> Lens
positionIsOpenL :: Lens_' Position (Maybe Bool)

-- | <a>positionMarkPrice</a> Lens
positionMarkPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionMarkValue</a> Lens
positionMarkValueL :: Lens_' Position (Maybe Double)

-- | <a>positionRiskValue</a> Lens
positionRiskValueL :: Lens_' Position (Maybe Double)

-- | <a>positionHomeNotional</a> Lens
positionHomeNotionalL :: Lens_' Position (Maybe Double)

-- | <a>positionForeignNotional</a> Lens
positionForeignNotionalL :: Lens_' Position (Maybe Double)

-- | <a>positionPosState</a> Lens
positionPosStateL :: Lens_' Position (Maybe Text)

-- | <a>positionPosCost</a> Lens
positionPosCostL :: Lens_' Position (Maybe Double)

-- | <a>positionPosCost2</a> Lens
positionPosCost2L :: Lens_' Position (Maybe Double)

-- | <a>positionPosCross</a> Lens
positionPosCrossL :: Lens_' Position (Maybe Double)

-- | <a>positionPosInit</a> Lens
positionPosInitL :: Lens_' Position (Maybe Double)

-- | <a>positionPosComm</a> Lens
positionPosCommL :: Lens_' Position (Maybe Double)

-- | <a>positionPosLoss</a> Lens
positionPosLossL :: Lens_' Position (Maybe Double)

-- | <a>positionPosMargin</a> Lens
positionPosMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionPosMaint</a> Lens
positionPosMaintL :: Lens_' Position (Maybe Double)

-- | <a>positionPosAllowance</a> Lens
positionPosAllowanceL :: Lens_' Position (Maybe Double)

-- | <a>positionTaxableMargin</a> Lens
positionTaxableMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionInitMargin</a> Lens
positionInitMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionMaintMargin</a> Lens
positionMaintMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionSessionMargin</a> Lens
positionSessionMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionTargetExcessMargin</a> Lens
positionTargetExcessMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionVarMargin</a> Lens
positionVarMarginL :: Lens_' Position (Maybe Double)

-- | <a>positionRealisedGrossPnl</a> Lens
positionRealisedGrossPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionRealisedTax</a> Lens
positionRealisedTaxL :: Lens_' Position (Maybe Double)

-- | <a>positionRealisedPnl</a> Lens
positionRealisedPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionUnrealisedGrossPnl</a> Lens
positionUnrealisedGrossPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionLongBankrupt</a> Lens
positionLongBankruptL :: Lens_' Position (Maybe Double)

-- | <a>positionShortBankrupt</a> Lens
positionShortBankruptL :: Lens_' Position (Maybe Double)

-- | <a>positionTaxBase</a> Lens
positionTaxBaseL :: Lens_' Position (Maybe Double)

-- | <a>positionIndicativeTaxRate</a> Lens
positionIndicativeTaxRateL :: Lens_' Position (Maybe Double)

-- | <a>positionIndicativeTax</a> Lens
positionIndicativeTaxL :: Lens_' Position (Maybe Double)

-- | <a>positionUnrealisedTax</a> Lens
positionUnrealisedTaxL :: Lens_' Position (Maybe Double)

-- | <a>positionUnrealisedPnl</a> Lens
positionUnrealisedPnlL :: Lens_' Position (Maybe Double)

-- | <a>positionUnrealisedPnlPcnt</a> Lens
positionUnrealisedPnlPcntL :: Lens_' Position (Maybe Double)

-- | <a>positionUnrealisedRoePcnt</a> Lens
positionUnrealisedRoePcntL :: Lens_' Position (Maybe Double)

-- | <a>positionSimpleQty</a> Lens
positionSimpleQtyL :: Lens_' Position (Maybe Double)

-- | <a>positionSimpleCost</a> Lens
positionSimpleCostL :: Lens_' Position (Maybe Double)

-- | <a>positionSimpleValue</a> Lens
positionSimpleValueL :: Lens_' Position (Maybe Double)

-- | <a>positionSimplePnl</a> Lens
positionSimplePnlL :: Lens_' Position (Maybe Double)

-- | <a>positionSimplePnlPcnt</a> Lens
positionSimplePnlPcntL :: Lens_' Position (Maybe Double)

-- | <a>positionAvgCostPrice</a> Lens
positionAvgCostPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionAvgEntryPrice</a> Lens
positionAvgEntryPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionBreakEvenPrice</a> Lens
positionBreakEvenPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionMarginCallPrice</a> Lens
positionMarginCallPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionLiquidationPrice</a> Lens
positionLiquidationPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionBankruptPrice</a> Lens
positionBankruptPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionTimestamp</a> Lens
positionTimestampL :: Lens_' Position (Maybe DateTime)

-- | <a>positionLastPrice</a> Lens
positionLastPriceL :: Lens_' Position (Maybe Double)

-- | <a>positionLastValue</a> Lens
positionLastValueL :: Lens_' Position (Maybe Double)

-- | <a>quoteTimestamp</a> Lens
quoteTimestampL :: Lens_' Quote (DateTime)

-- | <a>quoteSymbol</a> Lens
quoteSymbolL :: Lens_' Quote (Text)

-- | <a>quoteBidSize</a> Lens
quoteBidSizeL :: Lens_' Quote (Maybe Double)

-- | <a>quoteBidPrice</a> Lens
quoteBidPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteAskPrice</a> Lens
quoteAskPriceL :: Lens_' Quote (Maybe Double)

-- | <a>quoteAskSize</a> Lens
quoteAskSizeL :: Lens_' Quote (Maybe Double)

-- | <a>settlementTimestamp</a> Lens
settlementTimestampL :: Lens_' Settlement (DateTime)

-- | <a>settlementSymbol</a> Lens
settlementSymbolL :: Lens_' Settlement (Text)

-- | <a>settlementSettlementType</a> Lens
settlementSettlementTypeL :: Lens_' Settlement (Maybe Text)

-- | <a>settlementSettledPrice</a> Lens
settlementSettledPriceL :: Lens_' Settlement (Maybe Double)

-- | <a>settlementBankrupt</a> Lens
settlementBankruptL :: Lens_' Settlement (Maybe Double)

-- | <a>settlementTaxBase</a> Lens
settlementTaxBaseL :: Lens_' Settlement (Maybe Double)

-- | <a>settlementTaxRate</a> Lens
settlementTaxRateL :: Lens_' Settlement (Maybe Double)

-- | <a>statsRootSymbol</a> Lens
statsRootSymbolL :: Lens_' Stats (Text)

-- | <a>statsCurrency</a> Lens
statsCurrencyL :: Lens_' Stats (Maybe Text)

-- | <a>statsVolume24h</a> Lens
statsVolume24hL :: Lens_' Stats (Maybe Double)

-- | <a>statsTurnover24h</a> Lens
statsTurnover24hL :: Lens_' Stats (Maybe Double)

-- | <a>statsOpenInterest</a> Lens
statsOpenInterestL :: Lens_' Stats (Maybe Double)

-- | <a>statsOpenValue</a> Lens
statsOpenValueL :: Lens_' Stats (Maybe Double)

-- | <a>statsHistoryDate</a> Lens
statsHistoryDateL :: Lens_' StatsHistory (DateTime)

-- | <a>statsHistoryRootSymbol</a> Lens
statsHistoryRootSymbolL :: Lens_' StatsHistory (Text)

-- | <a>statsHistoryCurrency</a> Lens
statsHistoryCurrencyL :: Lens_' StatsHistory (Maybe Text)

-- | <a>statsHistoryVolume</a> Lens
statsHistoryVolumeL :: Lens_' StatsHistory (Maybe Double)

-- | <a>statsHistoryTurnover</a> Lens
statsHistoryTurnoverL :: Lens_' StatsHistory (Maybe Double)

-- | <a>statsUSDRootSymbol</a> Lens
statsUSDRootSymbolL :: Lens_' StatsUSD (Text)

-- | <a>statsUSDCurrency</a> Lens
statsUSDCurrencyL :: Lens_' StatsUSD (Maybe Text)

-- | <a>statsUSDTurnover24h</a> Lens
statsUSDTurnover24hL :: Lens_' StatsUSD (Maybe Double)

-- | <a>statsUSDTurnover30d</a> Lens
statsUSDTurnover30dL :: Lens_' StatsUSD (Maybe Double)

-- | <a>statsUSDTurnover365d</a> Lens
statsUSDTurnover365dL :: Lens_' StatsUSD (Maybe Double)

-- | <a>statsUSDTurnover</a> Lens
statsUSDTurnoverL :: Lens_' StatsUSD (Maybe Double)

-- | <a>tradeTimestamp</a> Lens
tradeTimestampL :: Lens_' Trade (DateTime)

-- | <a>tradeSymbol</a> Lens
tradeSymbolL :: Lens_' Trade (Text)

-- | <a>tradeSide</a> Lens
tradeSideL :: Lens_' Trade (Maybe Text)

-- | <a>tradeSize</a> Lens
tradeSizeL :: Lens_' Trade (Maybe Double)

-- | <a>tradePrice</a> Lens
tradePriceL :: Lens_' Trade (Maybe Double)

-- | <a>tradeTickDirection</a> Lens
tradeTickDirectionL :: Lens_' Trade (Maybe Text)

-- | <a>tradeTrdMatchId</a> Lens
tradeTrdMatchIdL :: Lens_' Trade (Maybe Text)

-- | <a>tradeGrossValue</a> Lens
tradeGrossValueL :: Lens_' Trade (Maybe Double)

-- | <a>tradeHomeNotional</a> Lens
tradeHomeNotionalL :: Lens_' Trade (Maybe Double)

-- | <a>tradeForeignNotional</a> Lens
tradeForeignNotionalL :: Lens_' Trade (Maybe Double)

-- | <a>tradeBinTimestamp</a> Lens
tradeBinTimestampL :: Lens_' TradeBin (DateTime)

-- | <a>tradeBinSymbol</a> Lens
tradeBinSymbolL :: Lens_' TradeBin (Text)

-- | <a>tradeBinOpen</a> Lens
tradeBinOpenL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinHigh</a> Lens
tradeBinHighL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinLow</a> Lens
tradeBinLowL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinClose</a> Lens
tradeBinCloseL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinTrades</a> Lens
tradeBinTradesL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinVolume</a> Lens
tradeBinVolumeL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinVwap</a> Lens
tradeBinVwapL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinLastSize</a> Lens
tradeBinLastSizeL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinTurnover</a> Lens
tradeBinTurnoverL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinHomeNotional</a> Lens
tradeBinHomeNotionalL :: Lens_' TradeBin (Maybe Double)

-- | <a>tradeBinForeignNotional</a> Lens
tradeBinForeignNotionalL :: Lens_' TradeBin (Maybe Double)

-- | <a>transactionTransactId</a> Lens
transactionTransactIdL :: Lens_' Transaction (Text)

-- | <a>transactionAccount</a> Lens
transactionAccountL :: Lens_' Transaction (Maybe Double)

-- | <a>transactionCurrency</a> Lens
transactionCurrencyL :: Lens_' Transaction (Maybe Text)

-- | <a>transactionTransactType</a> Lens
transactionTransactTypeL :: Lens_' Transaction (Maybe Text)

-- | <a>transactionAmount</a> Lens
transactionAmountL :: Lens_' Transaction (Maybe Double)

-- | <a>transactionFee</a> Lens
transactionFeeL :: Lens_' Transaction (Maybe Double)

-- | <a>transactionTransactStatus</a> Lens
transactionTransactStatusL :: Lens_' Transaction (Maybe Text)

-- | <a>transactionAddress</a> Lens
transactionAddressL :: Lens_' Transaction (Maybe Text)

-- | <a>transactionTx</a> Lens
transactionTxL :: Lens_' Transaction (Maybe Text)

-- | <a>transactionText</a> Lens
transactionTextL :: Lens_' Transaction (Maybe Text)

-- | <a>transactionTransactTime</a> Lens
transactionTransactTimeL :: Lens_' Transaction (Maybe DateTime)

-- | <a>transactionTimestamp</a> Lens
transactionTimestampL :: Lens_' Transaction (Maybe DateTime)

-- | <a>userId</a> Lens
userIdL :: Lens_' User (Maybe Double)

-- | <a>userOwnerId</a> Lens
userOwnerIdL :: Lens_' User (Maybe Double)

-- | <a>userFirstname</a> Lens
userFirstnameL :: Lens_' User (Maybe Text)

-- | <a>userLastname</a> Lens
userLastnameL :: Lens_' User (Maybe Text)

-- | <a>userUsername</a> Lens
userUsernameL :: Lens_' User (Text)

-- | <a>userEmail</a> Lens
userEmailL :: Lens_' User (Text)

-- | <a>userPhone</a> Lens
userPhoneL :: Lens_' User (Maybe Text)

-- | <a>userCreated</a> Lens
userCreatedL :: Lens_' User (Maybe DateTime)

-- | <a>userLastUpdated</a> Lens
userLastUpdatedL :: Lens_' User (Maybe DateTime)

-- | <a>userPreferences</a> Lens
userPreferencesL :: Lens_' User (Maybe UserPreferences)

-- | <a>userTfaEnabled</a> Lens
userTfaEnabledL :: Lens_' User (Maybe Text)

-- | <a>userAffiliateId</a> Lens
userAffiliateIdL :: Lens_' User (Maybe Text)

-- | <a>userPgpPubKey</a> Lens
userPgpPubKeyL :: Lens_' User (Maybe Text)

-- | <a>userCountry</a> Lens
userCountryL :: Lens_' User (Maybe Text)

-- | <a>userCommissionMakerFee</a> Lens
userCommissionMakerFeeL :: Lens_' UserCommission (Maybe Double)

-- | <a>userCommissionTakerFee</a> Lens
userCommissionTakerFeeL :: Lens_' UserCommission (Maybe Double)

-- | <a>userCommissionSettlementFee</a> Lens
userCommissionSettlementFeeL :: Lens_' UserCommission (Maybe Double)

-- | <a>userCommissionMaxFee</a> Lens
userCommissionMaxFeeL :: Lens_' UserCommission (Maybe Double)

-- | <a>userPreferencesAlertOnLiquidations</a> Lens
userPreferencesAlertOnLiquidationsL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesAnimationsEnabled</a> Lens
userPreferencesAnimationsEnabledL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesAnnouncementsLastSeen</a> Lens
userPreferencesAnnouncementsLastSeenL :: Lens_' UserPreferences (Maybe DateTime)

-- | <a>userPreferencesChatChannelId</a> Lens
userPreferencesChatChannelIdL :: Lens_' UserPreferences (Maybe Double)

-- | <a>userPreferencesColorTheme</a> Lens
userPreferencesColorThemeL :: Lens_' UserPreferences (Maybe Text)

-- | <a>userPreferencesCurrency</a> Lens
userPreferencesCurrencyL :: Lens_' UserPreferences (Maybe Text)

-- | <a>userPreferencesDebug</a> Lens
userPreferencesDebugL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesDisableEmails</a> Lens
userPreferencesDisableEmailsL :: Lens_' UserPreferences (Maybe [Text])

-- | <a>userPreferencesHideConfirmDialogs</a> Lens
userPreferencesHideConfirmDialogsL :: Lens_' UserPreferences (Maybe [Text])

-- | <a>userPreferencesHideConnectionModal</a> Lens
userPreferencesHideConnectionModalL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesHideFromLeaderboard</a> Lens
userPreferencesHideFromLeaderboardL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesHideNameFromLeaderboard</a> Lens
userPreferencesHideNameFromLeaderboardL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesHideNotifications</a> Lens
userPreferencesHideNotificationsL :: Lens_' UserPreferences (Maybe [Text])

-- | <a>userPreferencesLocale</a> Lens
userPreferencesLocaleL :: Lens_' UserPreferences (Maybe Text)

-- | <a>userPreferencesMsgsSeen</a> Lens
userPreferencesMsgsSeenL :: Lens_' UserPreferences (Maybe [Text])

-- | <a>userPreferencesOrderBookBinning</a> Lens
userPreferencesOrderBookBinningL :: Lens_' UserPreferences (Maybe Value)

-- | <a>userPreferencesOrderBookType</a> Lens
userPreferencesOrderBookTypeL :: Lens_' UserPreferences (Maybe Text)

-- | <a>userPreferencesOrderClearImmediate</a> Lens
userPreferencesOrderClearImmediateL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesOrderControlsPlusMinus</a> Lens
userPreferencesOrderControlsPlusMinusL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesSounds</a> Lens
userPreferencesSoundsL :: Lens_' UserPreferences (Maybe [Text])

-- | <a>userPreferencesStrictIpCheck</a> Lens
userPreferencesStrictIpCheckL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesStrictTimeout</a> Lens
userPreferencesStrictTimeoutL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesTickerGroup</a> Lens
userPreferencesTickerGroupL :: Lens_' UserPreferences (Maybe Text)

-- | <a>userPreferencesTickerPinned</a> Lens
userPreferencesTickerPinnedL :: Lens_' UserPreferences (Maybe Bool)

-- | <a>userPreferencesTradeLayout</a> Lens
userPreferencesTradeLayoutL :: Lens_' UserPreferences (Maybe Text)

-- | <a>walletAccount</a> Lens
walletAccountL :: Lens_' Wallet (Double)

-- | <a>walletCurrency</a> Lens
walletCurrencyL :: Lens_' Wallet (Text)

-- | <a>walletPrevDeposited</a> Lens
walletPrevDepositedL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPrevWithdrawn</a> Lens
walletPrevWithdrawnL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPrevTransferIn</a> Lens
walletPrevTransferInL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPrevTransferOut</a> Lens
walletPrevTransferOutL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPrevAmount</a> Lens
walletPrevAmountL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPrevTimestamp</a> Lens
walletPrevTimestampL :: Lens_' Wallet (Maybe DateTime)

-- | <a>walletDeltaDeposited</a> Lens
walletDeltaDepositedL :: Lens_' Wallet (Maybe Double)

-- | <a>walletDeltaWithdrawn</a> Lens
walletDeltaWithdrawnL :: Lens_' Wallet (Maybe Double)

-- | <a>walletDeltaTransferIn</a> Lens
walletDeltaTransferInL :: Lens_' Wallet (Maybe Double)

-- | <a>walletDeltaTransferOut</a> Lens
walletDeltaTransferOutL :: Lens_' Wallet (Maybe Double)

-- | <a>walletDeltaAmount</a> Lens
walletDeltaAmountL :: Lens_' Wallet (Maybe Double)

-- | <a>walletDeposited</a> Lens
walletDepositedL :: Lens_' Wallet (Maybe Double)

-- | <a>walletWithdrawn</a> Lens
walletWithdrawnL :: Lens_' Wallet (Maybe Double)

-- | <a>walletTransferIn</a> Lens
walletTransferInL :: Lens_' Wallet (Maybe Double)

-- | <a>walletTransferOut</a> Lens
walletTransferOutL :: Lens_' Wallet (Maybe Double)

-- | <a>walletAmount</a> Lens
walletAmountL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPendingCredit</a> Lens
walletPendingCreditL :: Lens_' Wallet (Maybe Double)

-- | <a>walletPendingDebit</a> Lens
walletPendingDebitL :: Lens_' Wallet (Maybe Double)

-- | <a>walletConfirmedDebit</a> Lens
walletConfirmedDebitL :: Lens_' Wallet (Maybe Double)

-- | <a>walletTimestamp</a> Lens
walletTimestampL :: Lens_' Wallet (Maybe DateTime)

-- | <a>walletAddr</a> Lens
walletAddrL :: Lens_' Wallet (Maybe Text)

-- | <a>walletScript</a> Lens
walletScriptL :: Lens_' Wallet (Maybe Text)

-- | <a>walletWithdrawalLock</a> Lens
walletWithdrawalLockL :: Lens_' Wallet (Maybe [Text])


module BitMEX
